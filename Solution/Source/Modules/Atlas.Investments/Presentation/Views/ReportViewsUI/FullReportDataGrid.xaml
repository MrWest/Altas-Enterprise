<TreeView x:Class="CompanyName.Atlas.Investments.Presentation.Views.ReportViewsUI.FullReportDataGrid"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
                          xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
                          xmlns:entities="clr-namespace:CompanyName.Atlas.Investments.Domain.Entities"
                          xmlns:budget="clr-namespace:CompanyName.Atlas.Investments.Presentation.ViewModels.Budget"
                          xmlns:common="clr-namespace:CompanyName.Atlas.Contracts.Domain.Common;assembly=Atlas.Contracts"
                          xmlns:viewModels="clr-namespace:CompanyName.Atlas.Investments.Presentation.ViewModels"
                          xmlns:viewModels1="clr-namespace:CompanyName.Atlas.Investments.Implementation.Presentation.ViewModels"
                          xmlns:viewModels11="clr-namespace:CompanyName.Atlas.Contracts.Implementation.Presentation.Data.Common;assembly=Atlas.Contracts"
                          xmlns:converters="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Converters"
                          xmlns:core="clr-namespace:System;assembly=mscorlib"
                          xmlns:budget1="clr-namespace:CompanyName.Atlas.Investments.Implementation.Presentation.ViewModels.Budget"
                          xmlns:data="clr-namespace:CompanyName.Atlas.Contracts.Presentation.Data;assembly=Atlas.Contracts"
                          xmlns:converters1="clr-namespace:CompanyName.Atlas.UIControls.Converters;assembly=Atlas.UIControls"
                          xmlns:reportViewsUi="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.ReportViewsUI"
                          mc:Ignorable="d" 
                          d:DesignHeight="300" d:DesignWidth="300"
                          
                           >



    <TreeView.Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="ItemTemplate" Value="{DynamicResource InvestmentElementDataTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource InvestmentElementTreeViewItemStyle}" />
            <!--<Setter Property="ItemTemplateSelector" Value="{DynamicResource budgetComponentItemTemplateSelector}" />-->
            <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
           
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="{DynamicResource DataGrid.Static.FontSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource InvestmentElement.Default.FontFamily}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">

                        <ControlTemplate.Resources>
                            <ResourceDictionary Source="/Atlas.UIControls;component/Themes/Paginator.xaml"/>
                        </ControlTemplate.Resources>

                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <DockPanel x:Name="dockPanel"  HorizontalAlignment="Left" Background="{DynamicResource  DataGrid.Static.Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="35"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <DockPanel Dock="Top" Background="{DynamicResource AddRootInvestmentElementButton.Static.Background}"
                                               Visibility="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ShowTotal}">

                                        <uiControls:AtlasDataGrid x:Name="AtlasDataGrid" CanUserSortColumns="False" CanUserReorderColumns="False">
                                            <uiControls:AtlasDataGrid.Resources>
                                                <ResourceDictionary >
                                                    <ResourceDictionary.MergedDictionaries>
                                                        <ResourceDictionary Source="/Atlas.UIControls;component/Assets/HierarchicalDataGrid.xaml"/>
                                                        <ResourceDictionary Source="/Atlas.UIControls;component/Themes/Paginator.xaml"/>
                                                    </ResourceDictionary.MergedDictionaries>
                                                    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
                                                        <Setter Property="Background" Value="{DynamicResource DataGridAddButton.Pressed.Background}" />
                                                        <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}" />
                                                        <Setter Property="BorderThickness" Value="0" />
                                                        <Setter Property="Height" Value="35"/>
                                                        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}" />
                                                        <Setter Property="FontSize" Value="{DynamicResource DataGrid.Static.FontSize}" />
                                                        <Setter Property="FontWeight" Value="SemiBold" />
                                                        <Setter Property="HorizontalContentAlignment" Value="Left" />
                                                        <Setter Property="VerticalContentAlignment" Value="Center" />
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                                    <Grid>
                                                                        <Border Background="{TemplateBinding Background}"
							                                                    BorderBrush="{TemplateBinding BorderBrush}"
							                                                    BorderThickness="{TemplateBinding BorderThickness}"
							                                                    Padding ="{TemplateBinding Padding}"
                                                    >               
                                                                            <Grid x:Name="containerGrid" Margin="5" >
                                                                                <Grid.ColumnDefinitions>
                                                                                    <ColumnDefinition Width="*"/>
                                                                                    <ColumnDefinition Width="Auto"/>
                                                                                </Grid.ColumnDefinitions>
                                                                                <ContentPresenter Grid.Column="0" Margin="7,0"
									                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
									                                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                                                <Path x:Name="SortArrow"
									                                                Grid.Column="1"
									                                                HorizontalAlignment="Center" VerticalAlignment="Center"
									                                                Width="8" Height="6"  Margin="5,0,5,0"
									                                                Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}"
									                                                RenderTransformOrigin="0.5,0.4"
									                                                Visibility="Hidden"
									                                                Data="M0,0 L1,0 0.5,1 z" />
                                                                            </Grid>
                                                                        </Border>
                                                                        <Thumb x:Name="PART_LeftHeaderGripper"
							                                                HorizontalAlignment="Left"
							                                                Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                                                        <Thumb x:Name="PART_RightHeaderGripper"
							                                                HorizontalAlignment="Right"
							                                                Style="{StaticResource ColumnHeaderGripperStyle}"/>
                                                                    </Grid>
                                                                   
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>

                                                       </Style>


                                                </ResourceDictionary>

                                            </uiControls:AtlasDataGrid.Resources>
                                            <uiControls:AtlasDataGrid.Columns>
                                                <DataGridTextColumn x:Name="CodeColumn" Binding="{Binding Code}"   Header="{x:Static properties:Resources.Code}" Width="180"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="NameColumn"  Binding="{Binding Name}" Header="{x:Static properties:Resources.Name}" Width="4*"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="CostComlumn" Binding="{Binding Cost,Mode=OneWay}" IsReadOnly="True" Header="{x:Static properties:Resources.Cost}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>

                                            </uiControls:AtlasDataGrid.Columns>

                                        </uiControls:AtlasDataGrid>

                                    </DockPanel>
                                    <ScrollViewer Grid.Row="1" x:Name="_tv_scrollviewer_" CanContentScroll="false" Focusable="false" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <!--<Grid Grid.Row="2"  >

                                        <Button x:Name="AddButton" HorizontalAlignment="Left"
                                            Style="{DynamicResource DataGridAddButtonStyle}"
                                            Command="{Binding AddButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=reportViewsUi:FullReportDataGrid}}">
                                            <DockPanel>
                                                <Grid x:Name="grid" Width="20"  Height="20" HorizontalAlignment="Left">
                                                    <Ellipse Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" Stroke="{x:Null}"/>
                                                    <Line x:Name="lineVer" StrokeThickness="4" X1="10" X2="10" Y1="3" Y2="17" Stroke="{DynamicResource DataGrid.Static.Background}"/>
                                                    <Line x:Name="lineHor" Stroke="{Binding Stroke, ElementName=lineVer}" Y1="10" Y2="10" X1="3" X2="17" StrokeThickness="4"/>
                                                </Grid>
                                                <TextBlock x:Name="AddTextBlock" Text="{Binding AddButtonText, RelativeSource={RelativeSource FindAncestor, AncestorType=reportViewsUi:FullReportDataGrid}}"  VerticalAlignment="Center" FontSize="18" Margin="10,0,0,0"/>
                                            </DockPanel>
                                        </Button>
                                        <uiControls:Paginator HorizontalAlignment="Center" Width="400" PaginationItems="{Binding  Items, RelativeSource={RelativeSource FindAncestor, AncestorType=reportViewsUi:FullReportDataGrid}}"  DoPaginate="{Binding Change}" ></uiControls:Paginator>
                                        <DockPanel   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="15,0" Visibility="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ShowTotal}">
                                            <TextBlock Text="{Binding TotalText, RelativeSource={RelativeSource FindAncestor, AncestorType=reportViewsUi:FullReportDataGrid}}" Foreground="{DynamicResource DataGridColumnHeader.Static.Foreground}" FontWeight="SemiBold" Margin="0,0,15,0" ></TextBlock>
                                            <TextBlock Text="{Binding Total, RelativeSource={RelativeSource FindAncestor, AncestorType=reportViewsUi:FullReportDataGrid},Mode=OneWay}" Margin="15,0,0,0" ></TextBlock>
                                            <TextBlock Text="MP" Margin="15,0,0,0"></TextBlock>
                                        </DockPanel>
                                    </Grid>-->
                                </Grid>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

    </TreeView.Style>

    

    <TreeView.Resources>

        <converters:BudgetComponentItemTemplateSelector x:Key="budgetComponentItemTemplateSelector" />
        <converters:BackgroundOnDeepConverter x:Key="BackgroundOnDeepConverter"/>
        <converters1:BackgroundOnDeepConverterReverse x:Key="BackgroundOnDeepConverterReverse"/>
        <SolidColorBrush x:Key="PriceSystemItems.Dynamic.Background" Color="#cccccc"/>
        <SolidColorBrush x:Key="PriceSystemItems.Dynamic.Foreground" Color="#FF6F6F6F"/>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource InputText}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="IsTodayHighlighted" Value="True" />
            <Setter Property="SelectedDateFormat" Value="Short" />
            <Setter Property="Padding" Value="2,2,2,1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Focusable" Value="True" />
            <Setter Property="Width" Value="96" />
            <Setter Property="Height" Value="25" />



            <Setter Property="CalendarStyle">
                <Setter.Value>
                    <Style TargetType="Calendar" BasedOn="{StaticResource {x:Type Calendar}}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="Calendar">
                                    <Grid Name="PART_Root" Margin="4" HorizontalAlignment="Center">
                                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />

                                        <CalendarItem Name="PART_CalendarItem" 
                                                  Background="{DynamicResource PopupBackground}"
                                                  Style="{TemplateBinding CalendarItemStyle}"
                                                  BorderThickness="0"
                                                  Margin="1"/>

                                        <Border  BorderThickness="1" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DatePicker}">
                        <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                            <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <uiControls:ModernButton x:Name="PART_Button" Grid.Row="0" Grid.Column="1"
                                                   Width="14"
                                                   Height="20"
                                                   Margin="0,-3,0,0" 
                                                   Padding="-3,0,0,0"
                                                   Focusable="False" 
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Left"
                                                   EllipseStrokeThickness="0"
                                                     HorizontalContentAlignment="Right"
                                                   IconWidth="8" IconHeight="7"
                                                   Foreground="{Binding ElementName=PART_TextBox,Path=Foreground}"
                                                   IconData="M 0 0 L 3.5 4 L 7 0 Z"/>

                                <DatePickerTextBox x:Name="PART_TextBox" 
                                               Foreground="{TemplateBinding Foreground}" 
                                               Background="{TemplateBinding Background}"
                                               Style="{DynamicResource {x:Type TextBox}}"
                                               BorderThickness="0"
                                               HorizontalContentAlignment="Stretch"
                                               VerticalContentAlignment="Center"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Focusable="{TemplateBinding Focusable}" />
                                <Popup x:Name="PART_Popup" 
                                   PlacementTarget="{Binding ElementName=LayoutRoot}"
                                   Placement="Bottom" 
                                   HorizontalOffset="-4"
                                   VerticalOffset="-5"
                                   StaysOpen="False"
                                   AllowsTransparency="True" />
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                            </Trigger>
                            <!--<Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>-->
                            <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                <!--<Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource Accent}" />-->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="True"/>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <!--<Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>-->
                                <!--<Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}"/>-->
                                <Setter Property="Foreground" Value="{DynamicResource InputTextHover}"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
     
        
        <DataTemplate x:Key="InvestmentTemplate" DataType="{x:Type viewModels:IInvestmentPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35"  Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>-->
                        <ColumnDefinition Width="Auto" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <!--<DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                 
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>-->
                        <TextBlock x:Name="textBlock0"    Padding="0,0,5,0" Text="{Binding Code}"    Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>


                    <TextBlock x:Name="textBlock"     Grid.Column="2" Grid.ColumnSpan="2" Padding="3,0,0,0" Text="{Binding Name}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           />



                </Grid>

                <DockPanel Grid.Row="2" DataContext="{Binding Budget}">
                   
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <DockPanel >
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding EquipmentComponent.PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            
                            <TextBlock Text="{x:Static properties:Resources.EquipmentComponent}" DockPanel.Dock="Top"></TextBlock>

                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding EquipmentComponent.PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" ></reportViewsUi:FullReportDataGrid>
                            
                        </DockPanel>
                        <DockPanel Grid.Row="1">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ConstructionComponent.PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <TextBlock Text="{x:Static properties:Resources.ConstructionComponent}" DockPanel.Dock="Top"></TextBlock>

                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding ConstructionComponent.PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" ></reportViewsUi:FullReportDataGrid>

                        </DockPanel>
                        <DockPanel Grid.Row="2" >
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding OtherExpensesComponent.PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <TextBlock Text="{x:Static properties:Resources.OtherExpensesComponent}" DockPanel.Dock="Top"></TextBlock>

                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding OtherExpensesComponent.PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" ></reportViewsUi:FullReportDataGrid>

                        </DockPanel>
                        <DockPanel Grid.Row="3">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding WorkCapitalComponent.PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <TextBlock Text="{x:Static properties:Resources.WorkCapitalComponent}" DockPanel.Dock="Top"></TextBlock>

                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding WorkCapitalComponent.PlannedSubSpecialityHolders.Items}"></reportViewsUi:FullReportDataGrid>

                        </DockPanel>

                    </Grid>
                    
                </DockPanel>
            <DockPanel Grid.Row="4">
                    <reportViewsUi:FullReportDataGrid ItemsSource="{Binding Items.Items}" ShowTotal="Collapsed" ></reportViewsUi:FullReportDataGrid>
            </DockPanel>
            </Grid>
           
        </DataTemplate>
        <DataTemplate x:Key="InvestmentComponentTemplate" DataType="{x:Type viewModels:IPriceSystemGroupPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid Background="{DynamicResource DataGrid.Static.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>-->
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>-->
                    <!--<RowDefinition Height="*"></RowDefinition>-->
                </Grid.RowDefinitions>
              
                 <Grid  VerticalAlignment="Center"   Height="35"  Margin="0,0,0,0" Background="{DynamicResource DataGrid.Static.Background}">
                  <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="40"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <!--<Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="Auto"></ColumnDefinition>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        --><!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>--><!--
                        <ColumnDefinition Width="Auto" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>-->

                    <!--<DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        --><!--<DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                 
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>--><!--
                        <TextBlock x:Name="textBlock0"    Padding="0,0,5,0" Text="{Binding Code}"    Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>-->


                    <TextBlock x:Name="textBlock"  FontWeight="Bold" Margin="5,0,0,0"   Padding="3,0,0,0" Text="{Binding Name}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"/>


                    <TextBlock x:Name="textBlock2" Grid.Column="1" FontWeight="SemiBold"    MinWidth="87"   Padding="3,0,0,0" Text="{Binding Cost}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left" 
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"/>


                </Grid>
             
                <Grid Grid.Row="1" DataContext="{Binding Budget}" >

                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                            <RowDefinition Height="Auto"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.Style>
                                <Style TargetType="Grid">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Cost}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="40"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{x:Static properties:Resources.Budget}" FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>
                            <!--<TextBlock Text=" : " FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>-->
                            <TextBlock Text="{Binding Cost}" FontWeight="SemiBold" DockPanel.Dock="Right" Grid.Column="1"   MinWidth="87"    Padding="3,0,0,0" ></TextBlock>

                        </Grid>
                        <DockPanel Grid.Row="1" DataContext="{Binding EquipmentComponent}">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                            <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="40"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static properties:Resources.EquipmentComponent}" FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>
                                <!--<TextBlock Text=" : " FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>-->
                                <TextBlock Text="{Binding Cost}" FontWeight="SemiBold" DockPanel.Dock="Right" Grid.Column="1"   MinWidth="87"    Padding="3,0,0,0" ></TextBlock>

                            </Grid>

                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" Width="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ActualWidth}"></reportViewsUi:FullReportDataGrid>

                        </DockPanel>
                        <DockPanel Grid.Row="2"  DataContext="{Binding ConstructionComponent}">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                             <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="40"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static properties:Resources.ConstructionComponent}" FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>
                                <!--<TextBlock Text=" : " FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>-->
                                <TextBlock Text="{Binding Cost}" FontWeight="SemiBold" DockPanel.Dock="Right" Grid.Column="1"   MinWidth="87"    Padding="3,0,0,0" ></TextBlock>

                            </Grid>
                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" Width="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ActualWidth}"></reportViewsUi:FullReportDataGrid>

                        </DockPanel>
                        <DockPanel Grid.Row="3"  DataContext="{Binding OtherExpensesComponent}" >
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                             <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="40"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static properties:Resources.OtherExpensesComponent}" FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>
                                <!--<TextBlock Text=" : " FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>-->
                                <TextBlock Text="{Binding Cost}" FontWeight="SemiBold" DockPanel.Dock="Right" Grid.Column="1"   MinWidth="87"    Padding="3,0,0,0" ></TextBlock>

                            </Grid>
                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding PlannedSubSpecialityHolders.Items}" DockPanel.Dock="Bottom" Width="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ActualWidth}"></reportViewsUi:FullReportDataGrid>

                        </DockPanel>
                        <DockPanel Grid.Row="4"  DataContext="{Binding WorkCapitalComponent}">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding PlannedSubSpecialityHolders.Items.Count}" Value="0">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>

                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>

                             <Grid DockPanel.Dock="Top">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="40"></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{x:Static properties:Resources.WorkCapitalComponent}" FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>
                                <!--<TextBlock Text=" : " FontWeight="SemiBold" HorizontalAlignment="Left"></TextBlock>-->
                                <TextBlock Text="{Binding Cost}" FontWeight="SemiBold" DockPanel.Dock="Right" Grid.Column="1"   MinWidth="87"    Padding="3,0,0,0" ></TextBlock>

                            </Grid>
                            <reportViewsUi:FullReportDataGrid ItemsSource="{Binding  PlannedSubSpecialityHolders.Items}"></reportViewsUi:FullReportDataGrid>

                        </DockPanel>

                    </Grid>

                </Grid>
                <!--<DockPanel Grid.Row="2">
                    <reportViewsUi:FullReportDataGrid ItemsSource="{Binding Items.Items}" ShowTotal="Collapsed" Width="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ActualWidth}"></reportViewsUi:FullReportDataGrid>
                </DockPanel>-->
            </Grid>

        </DataTemplate>


        <DataTemplate x:Key="subSpecialityHolderTemplate" >
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>-->
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35"  Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>-->
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <!--<DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                 
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>-->
                        <TextBlock x:Name="textBlock0"    Padding="0,0,5,0" Text="{Binding Code,Mode=OneWay}"   Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"  FontWeight="SemiBold" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>
                    <TextBlock x:Name="textBlock"  Grid.Column="2"  Grid.ColumnSpan="3" Text="{Binding Name}"  
                                                  Padding="3,0,0,0"    Background="Transparent"
                           VerticalAlignment="Center" 
                                                  FontWeight="SemiBold"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.SubSpeciality.Row.Foreground}"
                           />
                    <!--<TextBlock x:Name="textBlock"  Grid.Column="2" Grid.ColumnSpan="3" Padding="3,0,0,0"   NomenclatorSource="{x:Static budget1:SubSpecialityForNomenclatorViewModel.NomenclatorProvider}" MaxItemsNumber="5" Text="{Binding Name}"  SelectedObject="{Binding SubSpecialityObject,Mode=TwoWay}"
                                                  Background="Transparent"
                           VerticalAlignment="Center" 
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           />-->

                    <TextBlock x:Name="textBlock6"  Grid.Column="3"  Margin="0,0,0,0" Text="{Binding  Cost,Mode=OneWay}"  Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                             FontWeight="SemiBold"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>



                </Grid>


            </Grid>
           
        </DataTemplate>

        <DataTemplate x:Key="activityTemplate" DataType="{x:Type budget:IBudgetComponentItemPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>-->
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35"  Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>-->
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <!--<DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>-->
                        <TextBlock x:Name="textBlock0"    Padding="0,0,5,0" Text="{Binding Code}"    Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>

                    <TextBlock x:Name="textBlock"  Grid.Column="2" Text="{Binding Name}"  
                                                  Padding="3,0,0,0"    Background="Transparent"
                           VerticalAlignment="Center" 
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           />
                    <TextBlock x:Name="textBlock6"  Grid.Column="3"  Margin="0,0,0,0" Text="{Binding  Cost,Mode=OneWay}"  Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                </Grid>
               
             </Grid>
           
        </DataTemplate>

        <DataTemplate x:Key="resourceTemplate" DataType="{x:Type budget:IBudgetComponentItemPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>

                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>

                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>


            
            </DataTemplate.Resources>

            <Grid x:Name="ResourceRow" >
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35"  Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>-->
                        <ColumnDefinition  Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <!--<DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                 
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>
                            
                        </DockPanel>-->
                        <TextBlock x:Name="textBlock0"    Padding="0,0,5,0" Text="{Binding Code}"    Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>

                    <TextBlock x:Name="textBlock"  Grid.Column="2"  Text="{Binding Name}"  
                                                Padding="3,0,0,0"    Background="Transparent"
                           VerticalAlignment="Center" 
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           />
                    <!--<TextBlock x:Name="textBlock"  Grid.Column="2" Padding="3,0,0,0" Text="{Binding Name}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           />-->


                    <!--<TextBlock x:Name="textBlock2"  Grid.Column="3"  Margin="1,0,0,0" Text="{Binding Norm}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>


                    <Border Grid.Column="4" x:Name="textBlock1" VerticalAlignment="Center" Padding="2,0">

                        <ComboBox ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits }" SelectedItem="{Binding MeasurementUnit}"   
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}" Background="{Binding ElementName=ResourceRow,Path=Background}"
                                  SelectedValue="{Binding MeasurementUnit}"   Tag="{Binding MeasurementUnit}" Height="35">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            --><!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>--><!--
                        </ComboBox>
                    </Border>


                    <TextBlock x:Name="textBlock3"  Grid.Column="5"   Margin="1,0,0,0" Text="{Binding Quantity}"  Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                     <Border x:Name="textBlock4"  Grid.Column="6"  VerticalAlignment="Center" Padding="2,0">

                        <ComboBox ItemsSource="{x:Static viewModels11:CurrencyViewModel.Currencies}"  SelectedItem="{Binding Currency}" 
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}" Background="{Binding ElementName=ResourceRow,Path=Background}"
                                   SelectedValue="{Binding Currency}"   Tag="{Binding Currency}" Height="35">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            --><!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>--><!--
                        </ComboBox>
                    </Border>
                    <TextBlock x:Name="textBlock5"  Grid.Column="7"    Margin="1,0,0,0"  Text="{Binding UnitaryCost}"  Background="Transparent"
                           VerticalAlignment="Center"   HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>-->
                    <TextBlock x:Name="textBlock6"  Grid.Column="3"  Margin="0,0,0,0" Text="{Binding  Cost,Mode=OneWay}"  Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                            Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                </Grid>
               </Grid>
           
        </DataTemplate>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>



        <HierarchicalDataTemplate x:Key="InvestmentElementDataTemplate" ItemsSource="{Binding Items.Items}" >
            
     
        </HierarchicalDataTemplate>

        <Style x:Key="InvestmentElementTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="IsExpanded" Value="{Binding FakeIsExpanded}"/>
            <Setter Property="AllowDrop" Value="True"/>
            <!--<Setter Property="Width" Value="{Binding RelativeSource={RelativeSource AncestorType=reportViewsUi:FullReportDataGrid},Path=ActualHeight}"/>-->
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
            <!--<Setter Property="ToolTip" Value="{Binding Name}"></Setter>-->
           
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>

                            <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="border" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                <Path x:Name="path"
                                                      Width="12" Height="12"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementAddCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ItemKind}" Value="Activity">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                          
                        </ControlTemplate.Resources>

                        <Grid  x:Name="Bd"  Background="{TemplateBinding Background}"  >
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--<Line x:Name="firstbottomLine" Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Panel.ZIndex="100" StrokeThickness="1" Stroke="{DynamicResource DataGrid.Static.Foreground}" VerticalAlignment="Top" d:LayoutOverrides="Width" DockPanel.Dock="Bottom" />-->
                            <Border x:Name="ContentBorder" SnapsToDevicePixels="true" DockPanel.Dock="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" Background="{TemplateBinding DataContext, ConverterParameter={StaticResource PriceSystemItems.Dynamic.Background}, Converter={StaticResource BackgroundOnDeepConverterReverse}}">
                               
                                    <Grid  >
                                        <!--<Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>-->
                                    <Border >


                                            <ContentPresenter x:Name="PART_Header"  ContentTemplateSelector="{StaticResource budgetComponentItemTemplateSelector}"    ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                                        </Border>
                                    

                                    </Grid>
                                   

                             

                            </Border>
                            <!--<DockPanel x:Name="selMarker" Height="5" Panel.ZIndex="100" DockPanel.Dock="Top" Margin="0,0,0,-5" Visibility="Collapsed" HorizontalAlignment="Left">
                                    <Rectangle x:Name="rect1" Height="1" Margin="0,0,13,0" DockPanel.Dock="Right" Width="8" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                    <Path x:Name="selMark" HorizontalAlignment="Right" Width="8" Height="5" Data="M0,0L4,4 8,0" DockPanel.Dock="Right" Margin="0,0,-0.5,0" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}" Fill="{Binding Background, ElementName=Bd}"/>
                                    <Rectangle x:Name="rect2" Height="1" Margin="13,0,-0.5,0" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                </DockPanel>
                            <Line x:Name="bottomLine" Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Panel.ZIndex="100" StrokeThickness="1" Stroke="{DynamicResource DataGrid.Static.Foreground}" VerticalAlignment="Top" d:LayoutOverrides="Width" DockPanel.Dock="Bottom" Visibility="Collapsed"/>-->
                            <Rectangle x:Name="firstbottomLine" Grid.Row="1"  Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Height="1"  Fill="{DynamicResource DataGridRowBottomLine.Static.Background}" VerticalAlignment="Bottom" d:LayoutOverrides="Width" />
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="2" Height="Auto" HorizontalAlignment="Left" Margin="0,0,0,0.5" Visibility="Collapsed"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="Bd" Property="IsMouseOver" Value="True"/>
                                    <Condition  Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    <Setter TargetName="ConfirmationView" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    --><!--<Setter Property="Visibility" Value="Visible" TargetName="bottomLine"/>
                                        <Setter Property="Visibility" Value="Visible" TargetName="selMarker"/>--><!--
                                </MultiTrigger.Setters>
                            </MultiTrigger>-->
                            <!--<MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition SourceName="Bd" Property="IsMouseOver" Value="True"/>
                                    <Condition  Property="IsSelected" Value="False"/>
                                    <Condition Binding="{Binding Kind}" Value="Resource"/>
                                </MultiDataTrigger.Conditions>
                                <MultiDataTrigger.Setters>
                                    --><!--<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>--><!--
                                    <Setter TargetName="ConfirmationView" Property="Background" Value="{Binding ElementName=Bd, Path=Background}"/>
                                    <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    --><!--<Setter Property="Visibility" Value="Visible" TargetName="bottomLine"/>
                                        <Setter Property="Visibility" Value="Visible" TargetName="selMarker"/>--><!--
                                </MultiDataTrigger.Setters>
                            </MultiDataTrigger>-->

                           
                            <Trigger Property="IsExpanded" Value="True">
                              
                                <Setter Property="Visibility" Value="Visible" TargetName="ItemsHost"/>
                               <!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                <Setter TargetName="" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Foreground}"/>-->
                            </Trigger>
                            <!--<Trigger SourceName="ExpandToggleButton" Property="IsChecked" Value="False">
                                <Setter Property="IsExpanded" Value="False"></Setter>
                            </Trigger>-->
                           

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--<Style.Triggers >
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter TargetName="Bd" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

    </TreeView.Resources>




</TreeView>