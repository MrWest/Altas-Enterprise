<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Converters"
                    xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
                    xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
                    xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
                    xmlns:viewTypes="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.ViewTypes"
                    xmlns:core="clr-namespace:System;assembly=mscorlib"
                    xmlns:controls="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Controls"
                    xmlns:properties2="clr-namespace:CompanyName.Atlas.UIControls.Properties;assembly=Atlas.UIControls">
   
        <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="/Atlas.UIControls;component/Assets/DataGrid.xaml"/>
        </ResourceDictionary.MergedDictionaries>

        <converters:BooleanToBudgetComponentItemConverter x:Key="BoolToBudgetItemViewConverter">

        </converters:BooleanToBudgetComponentItemConverter>

        <converters:BudgetComponentItemViewToStringConverter x:Key="BudgetComponentItemViewToString"/>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:DateToToShortDateStringConverter x:Key="DateToToShortDateStringConverter"/>
    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <!-- Style of the sections combobox toggle button, the little arrow at the right of the combo -->
    <Style x:Key="BudgetComponetComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="IsChecked" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot2" SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" HorizontalAlignment="Right">
                        <Border x:Name="splitBorder"  SnapsToDevicePixels="true"
                                HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <!--Data="M3.2626522E-54,7.125 L6.7916667,0 8.75,2.0625 3.8021715,7.2580704 8.75,12.25 6.7083333,14.375 z"-->
                            <Path x:Name="path1" Stretch="UniformToFill"  Data="{DynamicResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" StrokeThickness="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                <!--<Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>-->
                            </Path>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                     Value="True">
                            <Setter TargetName="path1" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BudgetComponetCombobox" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControlHeader.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/> 
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="BorderBrush"  Value="{DynamicResource DataGridCell.Selected.Foreground}"></Setter>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <!--<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>-->
        <!--<Setter Property="Padding" Value="3"/>-->
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Padding" Value="4,4"/>
                    <Setter Property="VerticalAlignment" Value="Bottom"/>
                    <Setter Property="BorderThickness" Value="0" />
                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=Foreground}"/>
                    <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=ActualHeight}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                             Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"
                            SnapsToDevicePixels="true">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <!--<Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>-->
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Name="MainBorder" VerticalAlignment="Center"   BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}" Margin="0"  Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"  Background="{TemplateBinding Background}">

                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true"   >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="8"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="Transparent" 
                                      Grid.Column="1"                
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource BudgetComponetComboBoxToggleButton}"  />



                                <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectedItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ComboBox}}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=SelectedItem,RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="0"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Width="{Binding ActualWidth, Mode=OneWay,ElementName=MainBorder}"
                               Placement="Bottom" >
                            <Grid x:Name="shadow" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0"
                                  MinWidth="{Binding ActualWidth, ElementName=MainBorder}">
                                <Border x:Name="dropDownBorder" BorderThickness="1,0,1,1"  BorderBrush="{TemplateBinding BorderBrush}"  
                                        Background="{TemplateBinding Background}"  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_Popup,Path=IsOpen}" Value="True">
                                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ScrollViewer x:Name="DropDownScrollViewer" 
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"  Height="0"  Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ClipToBounds="True" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>


                        <!--<Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="dropDownBorder" Property="BorderBrush" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
                        </Trigger>-->
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <!--<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>-->
                            <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="true">

                            <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="BudgetComponentItemViewSwitcherButtonStyle" TargetType="RadioButton">
            <Setter Property="Height" Value="23"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="{DynamicResource BudgetComponentItemButton.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.Static.Foreground}"/>
            <Setter Property="Padding" Value="4"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.MouseOver.Foreground}"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="PlanningExecutionTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Padding" Value="12,2,15,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="ShowSelectionMarker">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="HideSelectionMarker">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                        <Storyboard x:Key="FadeIn" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>

                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                        <Grid>
                            <Border x:Name="mainBorder" Height="35" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource PlanningExecutionTabItem.Static.Background}" Margin="0" OpacityMask="Red">
                                <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                        <Path x:Name="path" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" Height="5" Width="10" Data="M0,5L5,0 10,5z" Visibility="Visible" Opacity="0" OpacityMask="{x:Null}">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=Variables}" Value="True"></Condition>
                                                <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem},Path=IsSelected}" Value="True"></Condition>
                                            </MultiDataTrigger.Conditions>
                                            <MultiDataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                            </MultiDataTrigger.EnterActions>
                                            <MultiDataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                            </MultiDataTrigger.ExitActions>
                                        </MultiDataTrigger>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TabItem},Path=IsSelected}" Value="False">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Trigger.ExitActions>
                                    <BeginStoryboard x:Name="HideSelectionMarker_BeginStoryboard" Storyboard="{StaticResource HideSelectionMarker}"/>
                                </Trigger.ExitActions>
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                                </Trigger.EnterActions>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Selected.Foreground}"/>
                            </Trigger>
                            <Trigger SourceName="mainBorder" Property="IsMouseOver" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.MouseOver.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <Style x:Key="MainTabControlButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="12,2,15,2"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeIn" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>

                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="mainBorder" Height="35" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource PlanningExecutionTabItem.Static.Background}" Margin="0" OpacityMask="Red">
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Content" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <Path x:Name="path" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" Height="5" Width="10" Data="M0,5L5,0 10,5z" Visibility="Visible" Opacity="0" OpacityMask="{x:Null}">
                            <Path.Style>
                                <Style TargetType="Path">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=Variables}" Value="True">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Path.Style>
                        </Path>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HideSelectionMarker_BeginStoryboard" Storyboard="{StaticResource HideSelectionMarker}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Selected.Foreground}"/>
                        </Trigger>
                        <Trigger SourceName="mainBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.MouseOver.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlanningExecutionTabControlStyle" TargetType="{x:Type uiControls:AtlasTabControl}">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
            <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
            <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
            <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                            <Border Margin="0" Grid.Row="0" Panel.ZIndex="1" Height="35"
                                        Background="{DynamicResource PlanningExecutionTabControlHeader.Background}">
                                <DockPanel>
                                    <DockPanel DockPanel.Dock="Right" Margin="0,0,10,0">
                                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" DockPanel.Dock="Top"
                                                        HorizontalAlignment="Center">
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Planned}"
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.PlannedItems},Mode=TwoWay}">
                                                <Grid>
                                                    <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill"
                                                              Data="F1 M 54.6818,20.1053L 55.8947,21.3182C 57.4019,22.8254 57.4019,25.2691 55.8947,26.7763L 53.7721,28.8989L 47.1011,22.2279L 49.2237,20.1053C 50.7309,18.5981 53.1746,18.5981 54.6818,20.1053 Z M 36.1848,46.4862L 29.5138,39.8152L 45.8881,23.4408L 52.5592,30.1119L 36.1848,46.4862 Z M 28.9073,42.241L 33.759,47.0927L 27.0251,48.9749L 28.9073,42.241 Z M 19,57L 19,25L 40.8063,25L 36.8063,29L 23,29L 23,53L 53,53L 53,32.6912L 57,28.6911L 57,57L 19,57 Z "/>
                                                    <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                </Grid>
                                            </RadioButton>
                                            <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}" 
                                                             ToolTip="{x:Static properties:Resources.Executed}"
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems},Mode=TwoWay}">
                                                <Grid>
                                                    <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill" 
                                                              Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z "/>
                                                    <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                </Grid>
                                            </RadioButton>
                                            <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Both}" 
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.Both},Mode=TwoWay}">
                                                <Grid>
                                                    <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill"
                                                              Data="F1 M 57,25L 57,51L 45.5,51C 42.8572,51 41,54 41,54L 35,54C 35,54 33.1428,51 30.5,51L 19,51L 19,25L 34.5,25C 34.5,25 35.9205,25.7102 37.4765,27.3448C 39.3408,25 41.25,25 41.25,25L 57,25 Z M 35,29.652C 34.3526,28.8549 33.5338,28 33,28L 22,28L 22,48L 31,48C 31,48 33,47.75 35,50.75L 35,29.652 Z M 41,50.75C 43,47.75 45,48 45,48L 54,48L 54,28L 43,28C 42.4662,28 41.6474,28.8549 41,29.652L 41,50.75 Z "/>
                                                    <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                </Grid>
                                            </RadioButton>
                                        </StackPanel>
                                        <!--<TextBlock  VerticalAlignment="Center" Margin="0,0,0,-17" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}" Height="35" 
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BudgetComponentItemViewToString}}"/>-->
                                    </DockPanel>

                                    <Line Y1="0" Y2="20" VerticalAlignment="Center" Margin="10,0"
                                              Stroke="{DynamicResource FilterBoxSeparator.Stroke}"
                                              StrokeThickness="1" DockPanel.Dock="Right"/>

                                    <uiControls:FilterBox DockPanel.Dock="Right" MinWidth="150" MaxWidth="200"
                                                              Text="{Binding FilterCriteria, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                                              FilterCommand="{Binding FilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}" ToolTip="{x:Static properties:Resources.FilterBudgetComponentItems}" />

                                    <TabPanel x:Name="headerPanel" IsItemsHost="true" Margin="0"
                                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                </DockPanel>
                            </Border>
                            <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <Style x:Key="ButtonlessTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Margin="0" Grid.Row="0" Panel.ZIndex="1" Height="35"
                                        Background="{DynamicResource PlanningExecutionTabControlHeader.Background}">
                            <DockPanel>
                                <!--<DockPanel DockPanel.Dock="Right" Margin="0,0,10,0">
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" DockPanel.Dock="Top"
                                                        HorizontalAlignment="Center">
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Planned}"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static views:BudgetComponentItemViewType.PlannedItems}}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform"
                                                              Data="F1 M 54.6818,20.1053L 55.8947,21.3182C 57.4019,22.8254 57.4019,25.2691 55.8947,26.7763L 53.7721,28.8989L 47.1011,22.2279L 49.2237,20.1053C 50.7309,18.5981 53.1746,18.5981 54.6818,20.1053 Z M 36.1848,46.4862L 29.5138,39.8152L 45.8881,23.4408L 52.5592,30.1119L 36.1848,46.4862 Z M 28.9073,42.241L 33.759,47.0927L 27.0251,48.9749L 28.9073,42.241 Z M 19,57L 19,25L 40.8063,25L 36.8063,29L 23,29L 23,53L 53,53L 53,32.6912L 57,28.6911L 57,57L 19,57 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}" Padding="3"
                                                             ToolTip="{x:Static properties:Resources.Executed}"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static views:BudgetComponentItemViewType.ExecutedItems}}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform" Margin="0,1,0,1"
                                                              Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Both}" Margin="0,1,0,0"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static views:BudgetComponentItemViewType.Both}}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform"
                                                              Data="F1 M 57,25L 57,51L 45.5,51C 42.8572,51 41,54 41,54L 35,54C 35,54 33.1428,51 30.5,51L 19,51L 19,25L 34.5,25C 34.5,25 35.9205,25.7102 37.4765,27.3448C 39.3408,25 41.25,25 41.25,25L 57,25 Z M 35,29.652C 34.3526,28.8549 33.5338,28 33,28L 22,28L 22,48L 31,48C 31,48 33,47.75 35,50.75L 35,29.652 Z M 41,50.75C 43,47.75 45,48 45,48L 54,48L 54,28L 43,28C 42.4662,28 41.6474,28.8549 41,29.652L 41,50.75 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                    </StackPanel>
                                    <TextBlock Margin="0,-3,0,-40" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BudgetComponentItemViewToString}}"/>
                                </DockPanel>-->

                                <Line Y1="0" Y2="20" VerticalAlignment="Center" Margin="10,0"
                                              Stroke="{DynamicResource FilterBoxSeparator.Stroke}"
                                              StrokeThickness="1" DockPanel.Dock="Right"/>

                                <uiControls:FilterBox DockPanel.Dock="Right" MinWidth="150" MaxWidth="200"
                                                              Text="{Binding FilterCriteria, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}}"
                                                               FilterCommand="{Binding FilterCommand, RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl}}"  ToolTip="{x:Static properties2:Resources.Filtred_Search}" />

                                <TabPanel x:Name="headerPanel" IsItemsHost="true" Margin="0"
                                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            </DockPanel>
                        </Border>
                        <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TimeLineTabControlStyle" TargetType="{x:Type uiControls:AtlasTabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource  PlanningExecutionTabControlHeader.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Margin="0" Grid.Row="0" Panel.ZIndex="1" Height="35"
                                        Background="{TemplateBinding Background}">
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Right" Margin="5,0,5,0">
                                    <DockPanel.Resources>
                                        <!--Create list of enumeration values-->
                                        <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
                                            <ObjectDataProvider.MethodParameters>
                                                <x:Type Type="viewTypes:BudgetViewType"/>
                                            </ObjectDataProvider.MethodParameters>
                                        </ObjectDataProvider>
                                    </DockPanel.Resources>
                                    <controls:BudgetComponentCombobox Style="{StaticResource BudgetComponetCombobox}" ItemsSource="{Binding Source={StaticResource myEnum}}" Width="95" Height="25" FontSize="12" Padding="2,4" 
                                                                      FiltrableObject="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=FiltrableObject}"  SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=FiltrableObject.SecondView,UpdateSourceTrigger=PropertyChanged}"  Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" >
                                        
                                    </controls:BudgetComponentCombobox>
                                    <!--
                                    SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=SecondView}"
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center" DockPanel.Dock="Top"
                                                        HorizontalAlignment="Center">
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Planned}"
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.PlannedItems},Mode=TwoWay}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill"
                                                              Data="F1 M 54.6818,20.1053L 55.8947,21.3182C 57.4019,22.8254 57.4019,25.2691 55.8947,26.7763L 53.7721,28.8989L 47.1011,22.2279L 49.2237,20.1053C 50.7309,18.5981 53.1746,18.5981 54.6818,20.1053 Z M 36.1848,46.4862L 29.5138,39.8152L 45.8881,23.4408L 52.5592,30.1119L 36.1848,46.4862 Z M 28.9073,42.241L 33.759,47.0927L 27.0251,48.9749L 28.9073,42.241 Z M 19,57L 19,25L 40.8063,25L 36.8063,29L 23,29L 23,53L 53,53L 53,32.6912L 57,28.6911L 57,57L 19,57 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}" 
                                                             ToolTip="{x:Static properties:Resources.Executed}"
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems},Mode=TwoWay}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill" 
                                                              Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                        <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Both}" 
                                                             IsChecked="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.Both},Mode=TwoWay}">
                                            <Grid>
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Fill"
                                                              Data="F1 M 57,25L 57,51L 45.5,51C 42.8572,51 41,54 41,54L 35,54C 35,54 33.1428,51 30.5,51L 19,51L 19,25L 34.5,25C 34.5,25 35.9205,25.7102 37.4765,27.3448C 39.3408,25 41.25,25 41.25,25L 57,25 Z M 35,29.652C 34.3526,28.8549 33.5338,28 33,28L 22,28L 22,48L 31,48C 31,48 33,47.75 35,50.75L 35,29.652 Z M 41,50.75C 43,47.75 45,48 45,48L 54,48L 54,28L 43,28C 42.4662,28 41.6474,28.8549 41,29.652L 41,50.75 Z "/>
                                                <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </Grid>
                                        </RadioButton>
                                    </StackPanel>
                                    --><!--<TextBlock  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}" Height="35" 
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BudgetComponentItemViewToString}}"/>-->
                                </DockPanel>

                                <!--<Line Y1="0" Y2="20" VerticalAlignment="Center" Margin="10,0"
                                              Stroke="{DynamicResource FilterBoxSeparator.Stroke}"
                                              StrokeThickness="1" DockPanel.Dock="Right"/>-->

                                <uiControls:FilterBox DockPanel.Dock="Right" MinWidth="150" MaxWidth="200"
                                                              Text="{Binding FilterCriteria, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                                              FilterCommand="{Binding FilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}" ToolTip="{x:Static properties:Resources.FilterBudgetComponentItems}" />

                                <TabPanel x:Name="headerPanel" IsItemsHost="true" Margin="0"
                                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            </DockPanel>
                        </Border>
                        <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MainTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type uiControls:AtlasTabControl}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FadeIn" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value=".5"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseIn"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>

                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Margin="0" Grid.Row="0" Panel.ZIndex="1" Height="35"
                                       Background="{DynamicResource PlanningExecutionTabControlHeader.Background}" >
                            <DockPanel>
                                <DockPanel DockPanel.Dock="Right" Margin="5,0">

                                    <ToggleButton Style="{StaticResource MainTabControlButtonStyle}" Width="95" IsChecked="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=  Variables,Mode=TwoWay}" ToolTip="{x:Static properties:Resources.ResourcesVariables_ToolTip}" >
                                        <TextBlock FontSize="14" Text="{x:Static properties:Resources.Variables}" Foreground="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=Foreground}"></TextBlock>
                                    </ToggleButton>
                                </DockPanel>

                                <!--<Line Y1="0" Y2="20" VerticalAlignment="Center" Margin="10,0"
                                              Stroke="{DynamicResource FilterBoxSeparator.Stroke}"
                                              StrokeThickness="1" DockPanel.Dock="Right"/>-->

                                <uiControls:FilterBox DockPanel.Dock="Right" MinWidth="150" MaxWidth="200"
                                                              Text="{Binding FilterCriteria, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                                              FilterCommand="{Binding FilterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}" ToolTip="{x:Static properties:Resources.FilterBudgetComponentItems}" />

                                <TabPanel x:Name="headerPanel" IsItemsHost="true" Margin="0"
                                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            </DockPanel>
                        </Border>
                        <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                           <Grid>
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter.Style>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=Variables}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>
                                                <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=Variables}" Value="False">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                                </DataTrigger>-->
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                                <ContentPresenter Opacity="0" x:Name="PART_SelectedContentHost2" ContentSource="SpecialTabItem" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                    <ContentPresenter.Style>
                                        <Style TargetType="ContentPresenter">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasTabControl},Path=Variables}" Value="True">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                                    </DataTrigger.ExitActions>
                                               
                                                </DataTrigger>
                                                <Trigger Property="Opacity" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContentPresenter.Style>
                                </ContentPresenter>
                            </Grid>
                           
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ResourcesActivitiesTabItemStyle" TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource ResourcesActivitiesTabControlHeader.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Static.Foreground}"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="Padding" Value="12,2,17,2"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0" Height="35">
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="mainBorder">
                                <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.MouseOver.Foreground}"/>
                            </Trigger>
                            <Trigger Property="Selector.IsSelected" Value="True">
                                <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Selected.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ResourcesActivitiesTabControlStyle" TargetType="{x:Type TabControl}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource ResourcesActivitiesTabItemStyle}"/>
            <Setter Property="Visibility" Value="Collapsed"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarThumbBorder}"/>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Background="{TemplateBinding Background}"
                        						BorderBrush="{TemplateBinding BorderBrush}"
                        						BorderThickness="{TemplateBinding BorderThickness}">
                                            <Rectangle x:Name="Rect" Fill="{DynamicResource ScrollBarThumbForeground}" Margin="{TemplateBinding Padding}" />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundHover}"/>
                                                <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundHover}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundDragging}"/>
                                                <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundDragging}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarButton"
                        		TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle"
                        			Value="true"/>
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
                            <Setter Property="Focusable"
                        			Value="false"/>
                            <Setter Property="IsTabStop"
                        			Value="false"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="Transparent"
                        						BorderBrush="Transparent"
                        						BorderThickness="{TemplateBinding BorderThickness}"
                        						Width="{TemplateBinding Width}"
                        						Height="{TemplateBinding Height}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                        							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        							RecognizesAccessKey="True"
                        							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                                                <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />-->
                                                <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />-->
                                                <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />-->
                                                <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                            </Trigger>
                                            <!--<MultiDataTrigger >
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ScrollBar},Path=Value}" Value="0"></Condition>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}}" Value="{x:Static ScrollBar.LineLeftCommand}"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                --><!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />-->
                                                <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />--><!--
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarPageButton"
                        		TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle"
                        			Value="true"/>
                            <Setter Property="Background"
                        			Value="Transparent"/>
                            <Setter Property="Focusable"
                        			Value="false"/>
                            <Setter Property="IsTabStop"
                        			Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Rectangle Fill="{TemplateBinding Background}"
                        						Width="{TemplateBinding Width}"
                        						Height="{TemplateBinding Height}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                            <Setter Property="Value" Value="0"/>
                            <Setter Property="LargeChange" Value="35"/>
                            <Setter Property="SmallChange" Value="35"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid Name="Bg"
                          Background="Transparent"
                          SnapsToDevicePixels="true" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            </Grid.RowDefinitions>
                                            <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Margin="0,0,0,0">
                                                <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 4 L 3.5 0 L 7 4 Z" />
                                            </RepeatButton>
                                            <!--<Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumb}" Padding="4,0" />
                                                    </Track.Thumb>
                                                </Track>-->
                                            <RepeatButton Style="{StaticResource ScrollBarButton}" 
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Margin="0,0,0,0">
                                                <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 3.5 4 L 7 0 Z" />
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Height" Value="7"/>
                                    <Setter Property="MinHeight" Value="7"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                        <ColumnDefinition Width="0.00001*"/>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                    </Grid.ColumnDefinitions>
                                                    <RepeatButton 
                                             
                                              Command="{x:Static ScrollBar.LineLeftCommand}" 
                                              Margin="-8,0,0,-5">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="RepeatButton" BasedOn="{StaticResource ScrollBarButton}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ScrollBar},Path=Value}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 3.5 L 4 7 L 4 0 Z" />
                                                    </RepeatButton>
                                                        <!-- <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       IsDirectionReversed="False">
                                                   <Track.DecreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Style="{StaticResource ScrollBarThumb}" Padding="0,4" />
                                                        </Track.Thumb>
                                                    </Track>-->
                                                    <RepeatButton 
                                              Grid.Column="2" Style="{StaticResource ScrollBarButton}"
                                             
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              Margin="0,0,-10,-5">
                                                       
                                                        <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 0 7 L 4 3.5 Z" />
                                                    </RepeatButton>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent">
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>-->

                                         

                                            <!--<ScrollBar x:Name="PART_VerticalScrollBar"
                                      
                                       Minimum="0.0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                       Cursor="Arrow"
                                       AutomationProperties.AutomationId="VerticalScrollBar"/>-->

                                            <Border x:Name="BorderPART_ScrollContentPresenter" >
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            </Border>
                                            <ScrollBar  x:Name="PART_HorizontalScrollBar"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        Minimum="0.0"
                                        Maximum="{TemplateBinding ScrollableWidth}"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                        Cursor="Arrow"
                                        AutomationProperties.AutomationId="HorizontalScrollBar"/>

                                           
                                        </Grid>

                                        <!--<ControlTemplate.Triggers>
                                            <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Visible">
                                                <Setter Property="Padding" TargetName="BorderPART_ScrollContentPresenter" Value="0,10,0,43" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>-->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <DockPanel Margin="{TemplateBinding Padding}">
                                                <ScrollViewer DockPanel.Dock="Top"
                        								HorizontalScrollBarVisibility="Hidden"
                        								VerticalScrollBarVisibility="Hidden"
                        								Focusable="false">
                                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                        									Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                        									AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                        									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                        								KeyboardNavigation.DirectionalNavigation="Local"
                        								Content="{TemplateBinding Content}"
                        								ContentTemplate="{TemplateBinding ContentTemplate}"
                        								CanContentScroll="{TemplateBinding CanContentScroll}"
                        								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </DockPanel>

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                        							Grid.Column="1"
                        							Minimum="0.0"
                        							Maximum="{TemplateBinding ScrollableHeight}"
                        							ViewportSize="{TemplateBinding ViewportHeight}"
                        							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        							Cursor="Arrow"
                        							AutomationProperties.AutomationId="VerticalScrollBar"/>
                                            <ScrollBar  x:Name="PART_HorizontalScrollBar"
                        							Orientation="Horizontal"
                        							Grid.Row="1"
                        							Minimum="0.0"
                        							Maximum="{TemplateBinding ScrollableWidth}"
                        							ViewportSize="{TemplateBinding ViewportWidth}"
                        							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        							Cursor="Arrow"
                        							AutomationProperties.AutomationId="HorizontalScrollBar"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ControlTemplate.Resources>
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition x:Name="ColumnDefinition0"/>
                                <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                <RowDefinition x:Name="RowDefinition1" Height="*"/>
                            </Grid.RowDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <ScrollViewer   HorizontalAlignment="Left" Margin="0,0,200,0" CanContentScroll="True">
                                <TabPanel x:Name="headerPanel" Background="Transparent"  IsItemsHost="true"  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Left"/>
                                </ScrollViewer>
                            <!--<DockPanel Height="35" Width="100" VerticalAlignment="Center" HorizontalAlignment="Right"  >
                             --><!--<Grid>
                                 <Grid.RowDefinitions>
                                     <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>-->
                                    <!--<TextBlock DockPanel.Dock="Bottom" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BudgetComponentItemViewToString}}"/>-->
                                <!--</Grid>--><!--
                              
                            </DockPanel>-->

                        </Grid>
                           
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    <Style x:Key="SubSpecialitiesTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourcesActivitiesTabItemStyle}"/>
        <!--<Setter Property="Visibility" Value="Collapsed"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <TabPanel x:Name="headerPanel" Background="Transparent" IsItemsHost="true"  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <!--<DockPanel Height="35" Width="100" VerticalAlignment="Center" HorizontalAlignment="Right"  >
                                --><!--<Grid>
                                 <Grid.RowDefinitions>
                                     <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>--><!--
                                <TextBlock DockPanel.Dock="Bottom" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BudgetComponentItemViewToString}}"/>
                                --><!--</Grid>--><!--

                            </DockPanel>-->

                        </Grid>

                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VisiblePlannedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">

        <Setter Property="Visibility" Value="Visible"></Setter>
    </Style>
    <Style x:Key="PlannedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">

            <Style.Triggers>
            <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.PlannedItems}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="PlannedResourcesActivitiesTabControlStylePS" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">

            <Style.Triggers>
            <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.PlannedItems}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ExecutedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="MixedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">
            <Style.Triggers>
            <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.Both}">
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


</ResourceDictionary>