<UserControl x:Class="CompanyName.Atlas.Investments.Presentation.Views.Arrangement.WorkCapitalItemView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
             xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
              xmlns:local="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
             xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             xmlns:system="clr-namespace:System;assembly=Common"
             xmlns:arrangement="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Arrangement"
             xmlns:viewTypes="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.ViewTypes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Assets/TabControls.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <Style TargetType="{x:Type DatePicker}">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="{DynamicResource InputText}" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="IsTodayHighlighted" Value="True" />
                <Setter Property="SelectedDateFormat" Value="Short" />
                <Setter Property="Padding" Value="2,2,2,1"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="Focusable" Value="True" />
                <Setter Property="Width" Value="96" />
                <Setter Property="Height" Value="25" />



                <Setter Property="CalendarStyle">
                    <Setter.Value>
                        <Style TargetType="Calendar" BasedOn="{StaticResource {x:Type Calendar}}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Calendar">
                                        <Grid Name="PART_Root" Margin="4" HorizontalAlignment="Center">
                                            <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                                            <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />

                                            <CalendarItem Name="PART_CalendarItem" 
                                                  Background="{DynamicResource PopupBackground}"
                                                  Style="{TemplateBinding CalendarItemStyle}"
                                                  BorderThickness="0"
                                                  Margin="1"/>

                                            <Border BorderBrush="Transparent" BorderThickness="1" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Setter.Value>
                </Setter>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type DatePicker}">
                            <Border x:Name="LayoutRoot" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}">
                                <Grid x:Name="PART_Root"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <uiControls:ModernButton x:Name="PART_Button" Grid.Row="0" Grid.Column="1"
                                                   Width="14"
                                                   Height="20"
                                                   Margin="0,0,0,0" 
                                                   Padding="-3,0,0,0"
                                                   Focusable="False" 
                                                   VerticalAlignment="Center"
                                                   HorizontalAlignment="Left"
                                                   EllipseStrokeThickness="0"
                                                     HorizontalContentAlignment="Right"
                                                   IconWidth="8" IconHeight="7"
                                                   Foreground="{Binding ElementName=PART_TextBox,Path=Foreground}"
                                                   IconData="M 0 0 L 3.5 4 L 7 0 Z"/>

                                    <DatePickerTextBox x:Name="PART_TextBox" 
                                               Foreground="{TemplateBinding Foreground}" 
                                               Background="{TemplateBinding Background}"
                                               Style="{DynamicResource {x:Type TextBox}}"
                                               BorderThickness="0"
                                               HorizontalContentAlignment="Stretch"
                                               VerticalContentAlignment="Center"
                                               VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                               Focusable="{TemplateBinding Focusable}" />
                                    <Popup x:Name="PART_Popup" 
                                   PlacementTarget="{Binding ElementName=LayoutRoot}"
                                   Placement="Bottom" 
                                   HorizontalOffset="-4"
                                   VerticalOffset="-5"
                                   StaysOpen="False"
                                   AllowsTransparency="True" />
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter TargetName="PART_TextBox" Property="Foreground" Value="{DynamicResource InputTextDisabled}" />
                                </Trigger>
                                <!--<Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>-->
                                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                                    <!--<Setter TargetName="LayoutRoot" Property="BorderBrush" Value="{DynamicResource Accent}" />-->
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsEnabled" Value="True"/>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <!--<Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>-->
                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource InputBorderHover}"/>-->
                                    <Setter Property="Foreground" Value="{DynamicResource InputTextHover}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        </UserControl.Resources>
    <Grid DataContext="{Binding PlannedWorkCapitalCashFlow}" >
        <Grid.RowDefinitions>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <!-- This tab control is for the planned resources and activities -->
        <!--<TabControl Style="{DynamicResource SubSpecialitiesTabControlStyle}" >-->

            <!--<TabItem Header="{x:Static properties:Resources.Planned}"  DataContext="{Binding PlannedSubSpecialityHolders}"
                     IsSelected="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.PlannedItems},Mode=TwoWay}">
                <views:SubSpecialityHolderDataGrid x:Name="PlannedSubSpecialityHolderDataGrid" AddButtonCommand="{Binding AddCommand}"/>
            </TabItem>
            <TabItem Header="{x:Static properties:Resources.Executed}"  DataContext="{Binding ExecutedSubSpecialityHolders}"
                      IsSelected="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems},Mode=TwoWay}">
                <arrangement:ExecutionView/>
            </TabItem>
            --><!-- Both planned and executed activities go below --><!--
            <TabItem Header="{x:Static properties:Resources.Both}"
                      IsSelected="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.Both},Mode=TwoWay}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel DataContext="{Binding PlannedSubSpecialityHolders}">
                        <views:SubSpecialityHolderDataGrid 
                                                                   AllowDragDrop="True"/>
                    </DockPanel>

                    <GridSplitter HorizontalAlignment="Center" VerticalAlignment="Stretch"
                                              Grid.Column="1" Width="5"/>
                    <DockPanel Grid.Column="2" DataContext="{Binding ExecutedSubSpecialityHolders}">
                        <views:SubSpecialityHolderDataGrid  AllowDrop="True"
                                                                   Grid.Column="2"
                                                                   ExecutePlannedItemsCommand="{Binding ExecutePlannedItemsCommand}"/>
                    </DockPanel>
                </Grid>
            </TabItem>-->
            <!--Header="{x:Static properties:Resources.CashFlow}"-->
            <!--<TabItem  DataContext="{Binding PlannedWorkCapitalCashFlow}"
                       IsSelected="{Binding FiltrableObject.View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.CashFlow},Mode=TwoWay}">
                <TabItem.Header>-->
        <Grid > 
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <!--<TextBlock VerticalAlignment="Center" Text="{x:Static properties:Resources.CashFlow}" Margin="0,0,40,0"></TextBlock>-->
                        <DockPanel Dock="Left" >
                <TextBlock Margin="10,3,2,3" FontSize="12"  VerticalAlignment="Center" Text="{x:Static properties:Resources.MaxAccDef}"></TextBlock>
                <TextBlock Margin="0,3,0,3"  VerticalAlignment="Center" Text=":" ></TextBlock>

                <TextBlock Margin="3,3"  VerticalAlignment="Center" Text="{Binding WorkCapital}"   Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}" ></TextBlock>
                            <!--<CheckBox IsChecked="{Binding ShowLiquity}" Margin="10,0"/>-->

                        </DockPanel>
                        <DockPanel Grid.Column="1"  Visibility="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TabItem},Converter={StaticResource BooleanToVisibilityConverter}}" HorizontalAlignment="Right"   >



                <DockPanel Dock="Right"  Margin="20,0,20,0">
                            <DockPanel Margin="20,0,20,0">
                                <DockPanel.Resources>
                                    <!--Create list of enumeration values-->
                                    <ObjectDataProvider x:Key="myEnum" MethodName="GetValues" ObjectType="{x:Type core:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type Type="system:DateTimeScale"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                </DockPanel.Resources>
                                <ComboBox SelectedItem="{Binding DateTimeScale}" Width="80"  ItemsSource="{Binding Source={StaticResource myEnum}}" Background="{DynamicResource ResourcesActivitiesTabControlHeader.Background}" Foreground="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
                            </DockPanel>
                            <ContentControl Foreground="{DynamicResource InvestmentElement.Default.Foreground}" DockPanel.Dock="Right">
                                <DockPanel>
                                    <DatePicker SelectedDate="{Binding Starts,Mode=TwoWay}"  Height="25" VerticalAlignment="Center" Foreground="{DynamicResource InvestmentElement.Default.Foreground}"  ></DatePicker>
                                    <!--<DatePicker Name="FromDatePicker" Background="Transparent" MaxWidth="100" Margin="5,0" SelectedDate="{Binding Starts}" SelectedDateChanged="FromDatePicker_OnSelectedDateChanged"></DatePicker>-->
                                    <TextBlock Text=" - " Margin="5,0" VerticalAlignment="Center"></TextBlock>
                                    <DatePicker SelectedDate="{Binding Ends,Mode=TwoWay}"  Height="25" VerticalAlignment="Center" Foreground="{DynamicResource InvestmentElement.Default.Foreground}" ></DatePicker>
                                </DockPanel>
                            </ContentControl>
                            </DockPanel>
                        </DockPanel>
                        
                    </Grid>
                <!--</TabItem.Header>-->
                <local:WorkCapitalCashFlowView x:Name="WorkCapitalCashFlowViewer" Grid.Row="1"/>
            <!--</TabItem>

        </TabControl>-->

    
    </Grid>
</UserControl>
