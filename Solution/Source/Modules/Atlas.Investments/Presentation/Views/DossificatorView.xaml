<prism:PrismUserControlBase x:Class="CompanyName.Atlas.Investments.Presentation.Views.DossificatorView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:prism="clr-namespace:CompanyName.Atlas.Contracts.Presentation.Prism;assembly=Atlas.Contracts"
             xmlns:mvvm="clr-namespace:Microsoft.Practices.Prism.Mvvm;assembly=Microsoft.Practices.Prism.Mvvm.Desktop"
             xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
             xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
             xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
             xmlns:viewModels="clr-namespace:CompanyName.Atlas.Investments.Presentation.ViewModels"
             xmlns:converters="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Converters"
             xmlns:common="clr-namespace:CompanyName.Atlas.Contracts.Presentation.Common;assembly=Atlas.Contracts"
             xmlns:viewTypes="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.ViewTypes"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
                             mvvm:ViewModelLocator.AutoWireViewModel="True">
    <prism:PrismUserControlBase.Resources>
        <ResourceDictionary x:Key="FfDictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Atlas.UIControls;component/Assets/DataGrid.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <converters:BooleanToBudgetComponentItemConverter x:Key="BoolToBudgetItemViewConverter">

            </converters:BooleanToBudgetComponentItemConverter>

            <converters:BudgetComponentItemViewToStringConverter x:Key="BudgetComponentItemViewToString"/>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <Style x:Key="BudgetComponentItemViewSwitcherButtonStyle" TargetType="RadioButton">
                <Setter Property="Height" Value="60"/>
                <Setter Property="Width" Value="24"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="{DynamicResource BudgetComponentItemButton.Static.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.Static.Foreground}"/>
                <Setter Property="Padding" Value="4"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <Border Background="{TemplateBinding Background}" Height="{TemplateBinding Height}" Padding="{TemplateBinding Padding}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.MouseOver.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="PlanningExecutionTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="Padding" Value="12,2,15,2"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="ShowSelectionMarker">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                                <Storyboard x:Key="HideSelectionMarker">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                        <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                        <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>

                            <Grid>
                                <Border x:Name="mainBorder" Height="35" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource PlanningExecutionTabItem.Static.Background}" Margin="0" OpacityMask="Red">
                                    <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                </Border>
                                <Path x:Name="path" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" Height="5" Width="10" Data="M0,5L5,0 10,5z" Visibility="Visible" Opacity="0" OpacityMask="{x:Null}"/>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Trigger.ExitActions>
                                        <BeginStoryboard x:Name="HideSelectionMarker_BeginStoryboard" Storyboard="{StaticResource HideSelectionMarker}"/>
                                    </Trigger.ExitActions>
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                                    </Trigger.EnterActions>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Selected.Foreground}"/>
                                </Trigger>
                                <Trigger SourceName="mainBorder" Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.MouseOver.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PlanningExecutionTabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
                <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
                <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                </Grid.RowDefinitions>
                                <Border Margin="0" Grid.Row="0" Panel.ZIndex="1" Height="35"
                                        Background="{DynamicResource PlanningExecutionTabControlHeader.Background}">
                                    <DockPanel>
                                        <DockPanel DockPanel.Dock="Right" Margin="0,0,10,0">
                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center" DockPanel.Dock="Top"
                                                        HorizontalAlignment="Center">
                                                <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Planned}"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.PlannedItems}}">
                                                    <Grid>
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform"
                                                              Data="F1 M 54.6818,20.1053L 55.8947,21.3182C 57.4019,22.8254 57.4019,25.2691 55.8947,26.7763L 53.7721,28.8989L 47.1011,22.2279L 49.2237,20.1053C 50.7309,18.5981 53.1746,18.5981 54.6818,20.1053 Z M 36.1848,46.4862L 29.5138,39.8152L 45.8881,23.4408L 52.5592,30.1119L 36.1848,46.4862 Z M 28.9073,42.241L 33.759,47.0927L 27.0251,48.9749L 28.9073,42.241 Z M 19,57L 19,25L 40.8063,25L 36.8063,29L 23,29L 23,53L 53,53L 53,32.6912L 57,28.6911L 57,57L 19,57 Z "/>
                                                        <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    </Grid>
                                                </RadioButton>
                                                <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}" Padding="3"
                                                             ToolTip="{x:Static properties:Resources.Executed}"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems}}">
                                                    <Grid>
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform" Margin="0,1,0,1"
                                                              Data="F1 M 32.222,33.4875L 39.1886,40.0582L 51.3802,26.1251L 54.7052,29.0542L 39.5845,47.5L 28.897,36.8125L 32.222,33.4875 Z M 24,27L 48.5,27L 45.5,30L 27,30L 27,49L 46,49L 46,42.5L 49,38.75L 49,52L 24,52L 24,27 Z "/>
                                                        <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    </Grid>
                                                </RadioButton>
                                                <RadioButton Style="{StaticResource BudgetComponentItemViewSwitcherButtonStyle}"
                                                             ToolTip="{x:Static properties:Resources.Both}" Margin="0,1,0,0"
                                                             IsChecked="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BoolToBudgetItemViewConverter}, ConverterParameter={x:Static viewTypes:BudgetComponentItemViewType.Both}}">
                                                    <Grid>
                                                        <Path Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}}"
                                                              Stretch="Uniform"
                                                              Data="F1 M 57,25L 57,51L 45.5,51C 42.8572,51 41,54 41,54L 35,54C 35,54 33.1428,51 30.5,51L 19,51L 19,25L 34.5,25C 34.5,25 35.9205,25.7102 37.4765,27.3448C 39.3408,25 41.25,25 41.25,25L 57,25 Z M 35,29.652C 34.3526,28.8549 33.5338,28 33,28L 22,28L 22,48L 31,48C 31,48 33,47.75 35,50.75L 35,29.652 Z M 41,50.75C 43,47.75 45,48 45,48L 54,48L 54,28L 43,28C 42.4662,28 41.6474,28.8549 41,29.652L 41,50.75 Z "/>
                                                        <Path HorizontalAlignment="Center" Data="M 0,5 5,0 10,5 Z"
                                                              Fill="{DynamicResource PlanningExecutionTabControl.Static.Background}"
                                                              Margin="0,44,0,0"
                                                              Visibility="{Binding IsChecked, RelativeSource={RelativeSource FindAncestor, AncestorType=RadioButton}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                    </Grid>
                                                </RadioButton>
                                            </StackPanel>
                                            <TextBlock  VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}, Converter={StaticResource BudgetComponentItemViewToString}}"/>
                                        </DockPanel>

                                        <Line Y1="0" Y2="20" VerticalAlignment="Center" Margin="10,0"
                                              Stroke="{DynamicResource FilterBoxSeparator.Stroke}"
                                              StrokeThickness="1" DockPanel.Dock="Right"/>

                                        <uiControls:FilterBox DockPanel.Dock="Right" MinWidth="150" MaxWidth="200"
                                                              Text="{Binding FilterCriteria, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}}"
                                                              FilterCommand="Find" ToolTip="{x:Static properties:Resources.FilterBudgetComponentItems}" />

                                        <TabPanel x:Name="headerPanel" IsItemsHost="true" Margin="0"
                                                  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                    </DockPanel>
                                </Border>
                                <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ResourcesActivitiesTabItemStyle" TargetType="{x:Type TabItem}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{DynamicResource ResourcesActivitiesTabControlHeader.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Static.Foreground}"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Padding" Value="12,2,17,2"/>
                <Setter Property="Margin" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabItem}">
                            <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0" Height="35">
                                <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True" SourceName="mainBorder">
                                    <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.MouseOver.Foreground}"/>
                                </Trigger>
                                <Trigger Property="Selector.IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Selected.Foreground}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ResourcesActivitiesTabControlStyle" TargetType="{x:Type TabControl}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource ResourcesActivitiesTabItemStyle}"/>
                <Setter Property="Visibility" Value="Visible"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TabControl}">
                            <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="ColumnDefinition0"/>
                                    <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                                    <RowDefinition x:Name="RowDefinition1" Height="*"/>
                                </Grid.RowDefinitions>
                                <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                                <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                                    <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="PlannedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">

                <Style.Triggers>
                    <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PriceSystems}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.PlannedItems}">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="PlannedResourcesActivitiesTabControlStylePS" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">

                <Style.Triggers>
                    <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PriceSystems}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.PlannedItems}">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="ExecutedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.ExecutedItems}">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MixedResourcesActivitiesTabControlStyle" TargetType="TabControl" BasedOn="{StaticResource ResourcesActivitiesTabControlStyle}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PlanningExecutionView}}"
                                 Value="{x:Static viewTypes:BudgetComponentItemViewType.Both}">
                        <Setter Property="Visibility" Value="Visible"/>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Margin" Value="5,2"/>
                <Setter Property="Width" Value="20"/>
                <Setter Property="Height" Value="20"/>
                <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path x:Name="path"
                                                      
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementAddCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

        </ResourceDictionary>
    </prism:PrismUserControlBase.Resources>
    <prism:PrismUserControlBase.CommandBindings>
        <CommandBinding Command="New" CanExecute="NewCommand_CanExecute" Executed="NewCommand_Executed" />
        <CommandBinding Command="Delete" CanExecute="DeleteCommand_CanExecute" Executed="DeleteCommand_Executed" />
    </prism:PrismUserControlBase.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="35"></RowDefinition>
            <RowDefinition Height="*"></RowDefinition>
        </Grid.RowDefinitions>
        <DockPanel  DataContext="{Binding ElementName=InvestmentElementTreeView,Path=SelectedItem}">
            <uiControls:RouteTextBox DockPanel.Dock="Left" VerticalAlignment="Center" VerticalContentAlignment="Center" Foreground="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"    d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" />
            <StackPanel Orientation="Horizontal"  Width="110" HorizontalAlignment="Right" Height="25" Margin="10,0" >
                <TextBox HorizontalAlignment="Right" BorderBrush="Transparent" Width="45" Background="Transparent" Margin="10,0"></TextBox>
                <ComboBox Name="MeasurementUnitComboBox" DockPanel.Dock="Right"  Width="45" Text="{Binding MeasurementUnit.Letters,Mode=OneWay}"
                       ItemsSource="{Binding Path=DataContext.MeasurementUnits,Mode=OneWay,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type uiControls:AtlasDataGrid }}}"
                            SelectedIndex="{Binding MeasurementUnit,Converter={StaticResource ComboBoxItemIdConverter},ConverterParameter={x:Type common:IMeasurementUnitViewModel},Mode=TwoWay}" SelectedValuePath="Id" 
                              Foreground="{DynamicResource PlanningExecutionTabItem.Static.Foreground}" Background="{DynamicResource PlanningExecutionTabControl.Static.Background}">
                    <!--<ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock   Text="{Binding Letters,Mode=OneWay}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>-->
                </ComboBox>
                
            </StackPanel>
        </DockPanel>
            <Grid Grid.Row="1" DataContext="{Binding Dossificator}" >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"></ColumnDefinition>
            <ColumnDefinition Width="*"></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <DockPanel DataContext="{Binding Elements}">
            <views:InvestmentElementTreeView
                    x:Name="InvestmentElementTreeView" ItemsSource="{Binding Items}"
                                     AddRootInvestmentElementButtonCommand="{Binding AddCommand}"
                                     AddInvestmentElementButtonCommand="New"
                                     DeleteInvestmentElementButtonCommand="Delete"
                                     AddButtonTooltip="{x:Static properties:Resources.AddRootInvElemButtonTooltip}"
                                     AddInvestmentElemementButtonTooltip="{x:Static properties:Resources.AddInvElemButtonTooltip}"
                                     DeleteInvestmentElemementButtonTooltip="{x:Static properties:Resources.DeleteInvElemButtonTooltip}"/>
        </DockPanel>
            <DockPanel Grid.Column="1"  DataContext="{Binding ElementName=InvestmentElementTreeView,Path=SelectedItem}">
            <DockPanel DataContext="{Binding Budget}">
                <DockPanel DataContext="{Binding ConstructionComponent}">
                    <DockPanel DataContext="{Binding PlannedActivities}">
                        <!--<Button Content="Add" Command="{Binding AddCommand}" Margin="2"></Button>-->
                            <TabControl Style="{DynamicResource PlannedResourcesActivitiesTabControlStyle}"   DataContextChanged="FrameworkElement_OnDataContextChanged">

                                <TabItem  Header="{x:Static properties:Resources.Activities}">
                                    <views:BudgetComponentItemDataGrid x:Name="EquipmentPlannedActivitiesDataGrid" AllowDragDrop="True" AllowDrop="True" AddPlannedItemsCommand="{Binding AddPlannedItemsCommand}"/>
                                </TabItem>


                                <TabItem  Header="{x:Static properties:Resources.Resources_}">
                                    <views:BudgetComponentResourceDataGrid x:Name="EquipmentPlannedResourcesDataGrid" AllowDragDrop="True" AllowDrop="True" AddPlannedItemsCommand="{Binding AddPlannedItemsCommand}"/>
                                </TabItem>
                            </TabControl>

                        </DockPanel>
                </DockPanel>
            </DockPanel>
        </DockPanel>
    </Grid>
    </Grid>
</prism:PrismUserControlBase>
