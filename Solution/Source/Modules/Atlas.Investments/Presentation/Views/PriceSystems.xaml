<prism:PrismUserControlBase x:Class="CompanyName.Atlas.Investments.Presentation.Views.PriceSystems"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mvvm="clr-namespace:Microsoft.Practices.Prism.Mvvm;assembly=Microsoft.Practices.Prism.Mvvm.Desktop"
             xmlns:prism="clr-namespace:CompanyName.Atlas.Contracts.Presentation.Prism;assembly=Atlas.Contracts"
             xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
             xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
             xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
             xmlns:converters="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Converters"
             xmlns:viewTypes="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.ViewTypes"
             xmlns:views1="clr-namespace:CompanyName.Atlas.UIControls.Views;assembly=Atlas.UIControls"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" 
             mvvm:ViewModelLocator.AutoWireViewModel="True" >
    
    <prism:PrismUserControlBase.Resources>
        <ResourceDictionary x:Key="FfDictionary">
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Atlas.UIControls;component/Assets/DataGrid.xaml"/>
                <ResourceDictionary Source="Assets/TabControls.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>

            <converters:BooleanToBudgetComponentItemConverter x:Key="BoolToBudgetItemViewConverter">

            </converters:BooleanToBudgetComponentItemConverter>

            <converters:BudgetComponentItemViewToStringConverter x:Key="BudgetComponentItemViewToString"/>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

            <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Margin" Value="5,2"/>
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                <Path x:Name="path"
                                                      
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementAddCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="LightGray"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
         
        </ResourceDictionary>
       </prism:PrismUserControlBase.Resources>

    <DockPanel>
       
        <DockPanel DockPanel.Dock="Top" Height="35">

            <uiControls:RouteTextBox  VerticalAlignment="Center"  d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" />

        </DockPanel>

        <uiControls:AtlasTabControl x:Name="AtlasTabControl"  d:LayoutOverrides="LeftPosition, RightPosition, TopPosition, BottomPosition" 
                    Style="{DynamicResource MainTabControlStyle}" FilterCommand="{Binding ElementName=PsComboBox,Path=SelectedItem.FilterCommand}">
            <uiControls:AtlasTabControl.SpecialTabItem>
                    <TabControl Style="{DynamicResource VisiblePlannedResourcesActivitiesTabControlStyle}" >
                    <TabItem Header="{x:Static properties:Resources.MeasurementUnit}">
                        <views1:MeasurementUnitEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                    </TabItem>
                    <TabItem Header="{x:Static properties:Resources.Currency}">
                        <views1:CurrencyEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                    </TabItem>

                    <TabItem Header="{x:Static properties:Resources.Categories}">
                            <views:CategoryEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                        </TabItem>
                        <TabItem Header="{x:Static properties:Resources.ExpenseConcepts}">
                            <views:ExpenseConceptEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                        </TabItem>
                        <TabItem Header="{x:Static properties:Resources.Speciality}">
                            <views:SpecialityEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                        </TabItem>
                        <!--<TabItem Header="{x:Static properties:Resources.WageScales}">
                            <views:WageScaleEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                        </TabItem>
                        <TabItem Header="{x:Static properties:Resources.WorkForces}">
                            <views:WorkForceEditor IsVisibleChanged="UIElement_OnIsVisibleChanged"/>
                        </TabItem>-->
                       
                    </TabControl>
                
            </uiControls:AtlasTabControl.SpecialTabItem>

            <!-- This is the tab controls group of the price system view -->
            <uiControls:AtlasTabItem Header="{x:Static properties:Resources.PriceSystems}" >


                <Grid>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="35"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                               
                            </Grid.ColumnDefinitions>
                            <ComboBox Width="{Binding ElementName=SectionTreeView,Path=ActualWidth}" x:Name="PsComboBox" Height="25"  MinWidth="220" Margin="10,0"
                              Foreground="{DynamicResource PlanningExecutionTabItem.Static.Foreground}" Background="{DynamicResource PlanningExecutionTabControl.Static.Background}" ItemsSource="{Binding Items}"
                                      Tag="{Binding RelativeSource={RelativeSource Self},Path=SelectedItem}" 
                                      SelectedItem="{Binding SelectedItem}">
                            <ComboBox.Template>
                                    <ControlTemplate TargetType="{x:Type ComboBox}">
                                        <Grid>
                                            <Border Name="MainBorder" VerticalAlignment="Center"   BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}" Margin="0"  Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"  Background="{TemplateBinding Background}">

                                                <Grid x:Name="templateRoot" SnapsToDevicePixels="true"   >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="13"/>
                                                    </Grid.ColumnDefinitions>

                                                    <ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="Transparent" 
                                      Grid.Column="1"                
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}"  />



                                                    <!--<ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectedItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->

                                                    <TextBox BorderThickness="0" Text="{Binding Path=SelectedItem.Name, RelativeSource={RelativeSource AncestorType=ComboBox}}" Padding="3,2" VerticalContentAlignment="Center" Height="{TemplateBinding Height}"  VerticalAlignment="Center" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                                        <!--<TextBox.Style>
                                                            <Style TargetType="TextBox">
                                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding Path=SelectedItem,RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="{x:Null}">
                                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </TextBox.Style>-->
                                                    </TextBox>
                                                </Grid>
                                            </Border>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="0"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Width="{Binding ActualWidth, Mode=OneWay,ElementName=MainBorder}"
                               Placement="Bottom" >
                                                <Grid x:Name="shadow" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0"
                                  MinWidth="{Binding ActualWidth, ElementName=MainBorder}">
                                                    <Border x:Name="dropDownBorder" BorderThickness="1,0,1,1"  BorderBrush="{TemplateBinding BorderBrush}"  
                                        Background="{TemplateBinding Background}"  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                                        <Border.Style>
                                                            <Style TargetType="{x:Type Border}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding ElementName=PART_Popup,Path=IsOpen}" Value="True">
                                                                        <!--<Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Border.Style>
                                                        <ScrollViewer x:Name="DropDownScrollViewer" 
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                                <Canvas x:Name="canvas"  Height="0"  Width="0">
                                                                    <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                                </Canvas>
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ClipToBounds="True" />
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Grid>
                                            </Popup>

                                        </Grid>
                                        <ControlTemplate.Triggers>


                                            <!--<Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="dropDownBorder" Property="BorderBrush" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
                        </Trigger>-->
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                                <!--<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>-->
                                                <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                                            </Trigger>
                                            <Trigger Property="IsOpen" SourceName="PART_Popup" Value="true">

                                                <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsGrouping" Value="true"/>
                                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                            </MultiTrigger>
                                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                                <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </ComboBox.Template>
                                <ComboBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ComboBoxItem}">
                                        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                                        <Setter Property="Padding" Value="7,2,8,2"/>
                                        <Setter Property="VerticalAlignment" Value="Bottom"/>
                                        <Setter Property="BorderThickness" Value="0" />
                                        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=Foreground}"/>
                                        <Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=ActualHeight}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                             Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"
                            SnapsToDevicePixels="true">
                                                        <TextBlock Text="{Binding Name}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsHighlighted" Value="true">
                                                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                                                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
                                                        </Trigger>
                                                        <Trigger Property="IsEnabled" Value="false">
                                                            <!--<Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>-->
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>

                                </ComboBox.ItemContainerStyle>
                            </ComboBox>
                            <StackPanel Grid.Column="1" Orientation="Horizontal" Margin="5,0,0,0">

                                <Button Command="{Binding AddCommand}"  Margin="2" Style="{DynamicResource AddCommandButtonStyle}" Content="F1 M 51.5487,37.9814L 56.814,41.0534L 50.3383,48.7636L 50.3383,48.8841L 60.0205,46.9565L 60.0205,53.0403L 50.2777,51.414L 50.2777,51.5344L 56.814,59.0037L 51.4882,62.0757L 47.978,52.7994L 47.8569,52.7994L 44.4072,62.0757L 39.2025,59.0037L 45.6782,51.4742L 45.6177,51.3537L 36.1159,53.0403L 36.1159,46.9565L 45.5571,48.8841L 45.5571,48.7636L 39.2025,41.1137L 44.5888,37.9814L 47.9174,47.3179L 48.0385,47.3179L 51.5487,37.9814 Z M 20,17L 43.25,17L 56,29.75L 56,39L 52,36.75L 52,34L 39,34L 39,21L 24,21L 24,55L 41,55L 37.5,59L 20,59L 20,17 Z M 43,22.25L 43,30L 50.75,30L 43,22.25 Z "></Button>
                                <Button  Content="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z " 
                            Style="{DynamicResource DeleteCommandButtonStyle}" Command="{Binding DeleteCommand}" CommandParameter="{Binding ElementName=PsComboBox,Path=SelectedItem}" Margin="2"></Button>
                                <!--<DockPanel DataContext="{Binding ElementName=PsComboBox,Path=SelectedItem}" Margin="10,0">
                                    <DockPanel.Style>
                                        <Style TargetType="DockPanel">
                                            <Style.Triggers>
                                                <Trigger Property="DataContext" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </DockPanel.Style>
                                    <TextBox VerticalAlignment="Center" BorderBrush="Transparent" Text="{Binding  ElementName=PsComboBox,Path=SelectedItem.Name}" Foreground="{DynamicResource PlanningExecutionTabItem.Static.Foreground}" Background="Transparent"  MinWidth="100" BorderThickness="0"></TextBox>

                                </DockPanel>-->
                            </StackPanel>
                        </Grid>

                        <Grid Grid.Row="1" DataContext="{Binding ElementName=PsComboBox,Path=SelectedItem}">
                            <DockPanel DataContext="{Binding OverGroups}" IsVisibleChanged="UIElement_OnIsVisibleChanged" DataContextChanged="FrameworkElement_OnDataContextChanged">
                                <views:SubSpecialityHolderDataGrid AddButtonCommand="{Binding AddCommand}"  ShowTotal="Collapsed"></views:SubSpecialityHolderDataGrid>
                            </DockPanel>
                        </Grid>

                    </Grid>
                </Grid>


            </uiControls:AtlasTabItem>

           
            <!-- This is the tab controls group of the construction component items --><!--
            <uiControls:AtlasTabItem Header="{x:Static properties:Resources.Dossificator}">
             
            </uiControls:AtlasTabItem>

            <uiControls:AtlasTabItem Header="{x:Static properties:Resources.VariantLines}">
               
            </uiControls:AtlasTabItem>-->

        </uiControls:AtlasTabControl>
    </DockPanel>


   
        
</prism:PrismUserControlBase>
