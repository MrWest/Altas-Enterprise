<TreeView x:Class="CompanyName.Atlas.Investments.Presentation.Views.PriceSystemDataGrid"
                          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                          xmlns:properties="clr-namespace:CompanyName.Atlas.Investments.Properties"
                          xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
                          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                          xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                          xmlns:views="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views"
                          xmlns:entities="clr-namespace:CompanyName.Atlas.Investments.Domain.Entities"
                          xmlns:budget="clr-namespace:CompanyName.Atlas.Investments.Presentation.ViewModels.Budget"
                          xmlns:common="clr-namespace:CompanyName.Atlas.Contracts.Domain.Common;assembly=Atlas.Contracts"
                          xmlns:viewModels="clr-namespace:CompanyName.Atlas.Investments.Presentation.ViewModels"
                          xmlns:viewModels1="clr-namespace:CompanyName.Atlas.Investments.Implementation.Presentation.ViewModels"
                          xmlns:viewModels11="clr-namespace:CompanyName.Atlas.Contracts.Implementation.Presentation.Data.Common;assembly=Atlas.Contracts"
                          xmlns:converters="clr-namespace:CompanyName.Atlas.Investments.Presentation.Views.Converters"
                          xmlns:core="clr-namespace:System;assembly=mscorlib"
                          xmlns:budget1="clr-namespace:CompanyName.Atlas.Investments.Implementation.Presentation.ViewModels.Budget"
                          xmlns:converters1="clr-namespace:CompanyName.Atlas.UIControls.Converters;assembly=Atlas.UIControls"
                          mc:Ignorable="d" 
                          d:DesignHeight="300" d:DesignWidth="300"
                          AllowDrop="True" Drop="OnDrop" MouseDown="OnMouseDown"
                          ItemsSource="{Binding FiltredItems}" >



    <TreeView.Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="ItemTemplate" Value="{DynamicResource InvestmentElementDataTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource InvestmentElementTreeViewItemStyle}" />
            <!--<Setter Property="ItemTemplateSelector" Value="{DynamicResource budgetComponentItemTemplateSelector}" />-->
            <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="{DynamicResource DataGrid.Static.FontSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource InvestmentElement.Default.FontFamily}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">

                        <ControlTemplate.Resources>
                            <ResourceDictionary Source="/Atlas.UIControls;component/Themes/Paginator.xaml"/>
                        </ControlTemplate.Resources>

                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <DockPanel x:Name="dockPanel"  HorizontalAlignment="Left" Background="{DynamicResource  DataGrid.Static.Background}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="35"></RowDefinition>
                                    </Grid.RowDefinitions>
                                    <DockPanel Dock="Top" Background="{DynamicResource AddRootInvestmentElementButton.Static.Background}">

                                        <uiControls:AtlasDataGrid x:Name="AtlasDataGrid" CanUserSortColumns="False" CanUserReorderColumns="False">
                                            <uiControls:AtlasDataGrid.Resources>
                                                <ResourceDictionary >
                                                    <ResourceDictionary.MergedDictionaries>
                                                        <ResourceDictionary Source="/Atlas.UIControls;component/Assets/HierarchicalDataGrid.xaml"/>
                                                        <ResourceDictionary Source="/Atlas.UIControls;component/Themes/Paginator.xaml"/>
                                                    </ResourceDictionary.MergedDictionaries>
                                                </ResourceDictionary>

                                            </uiControls:AtlasDataGrid.Resources>
                                            <uiControls:AtlasDataGrid.Columns>
                                                <DataGridTextColumn x:Name="CodeColumn" Binding="{Binding Code}" Header="{x:Static properties:Resources.Code}" MinWidth="100" Width="{Binding RelativeSource={RelativeSource AncestorType=views:PriceSystemDataGrid},Path=CodeColumnWidth}"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="NameColumn"  Binding="{Binding Name}" Header="{x:Static properties:Resources.Name}" Width="4*"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="NormColumn" Binding="{Binding Norm}" Header="{x:Static properties:Resources.Norm}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="MeasurementUnitColumn" Binding="{Binding MeasurementUnit}" Header="{x:Static properties:Resources.U_Slash_M}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="QuantityColumn" Binding="{Binding Quantity}" Header="{x:Static properties:Resources.Quantity}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn  x:Name="CurrencyColumn" Binding="{Binding Currency}" Header="{x:Static properties:Resources.Currency}" Width="Auto" 
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="UnitaryCostComlumn" Binding="{Binding UnitaryCost}" Header="{x:Static properties:Resources.UnitaryCost}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>
                                                <DataGridTextColumn x:Name="CostComlumn" Binding="{Binding Cost,Mode=OneWay}" IsReadOnly="True" Header="{x:Static properties:Resources.Cost}" Width="Auto"
                                            EditingElementStyle="{DynamicResource DataGridTextColumnEditingElementStyle}"/>

                                            </uiControls:AtlasDataGrid.Columns>

                                        </uiControls:AtlasDataGrid>

                                    </DockPanel>
                                    <ScrollViewer Grid.Row="1" x:Name="_tv_scrollviewer_" CanContentScroll="false" Focusable="false" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"  HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Background="{TemplateBinding Background}">
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                    <Grid Grid.Row="2"  >

                                        <Button x:Name="AddButton" HorizontalAlignment="Left"
                                            Style="{DynamicResource DataGridAddButtonStyle}"
                                            Command="{Binding AddButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PriceSystemDataGrid}}">
                                            <DockPanel>
                                                <Grid x:Name="grid" Width="20"  Height="20" HorizontalAlignment="Left">
                                                    <Ellipse Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" Stroke="{x:Null}"/>
                                                    <Line x:Name="lineVer" StrokeThickness="4" X1="10" X2="10" Y1="3" Y2="17" Stroke="{DynamicResource DataGrid.Static.Background}"/>
                                                    <Line x:Name="lineHor" Stroke="{Binding Stroke, ElementName=lineVer}" Y1="10" Y2="10" X1="3" X2="17" StrokeThickness="4"/>
                                                </Grid>
                                                <TextBlock x:Name="AddTextBlock" Text="{Binding AddButtonText, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PriceSystemDataGrid}}"  VerticalAlignment="Center" FontSize="18" Margin="10,0,0,0"/>
                                            </DockPanel>
                                        </Button>
                                        <uiControls:Paginator HorizontalAlignment="Center" Width="400" PaginationItems="{Binding  Items, RelativeSource={RelativeSource FindAncestor, AncestorType=views:PriceSystemDataGrid}}"  DoPaginate="{Binding Change}" ></uiControls:Paginator>
                                        <!--<DockPanel   HorizontalAlignment="Right" VerticalAlignment="Center" Margin="15,0">
                                            <TextBlock Text="{Binding TotalText, RelativeSource={RelativeSource FindAncestor, AncestorType=views:BudgetComponentResourceDataGrid}}" Foreground="{DynamicResource DataGridColumnHeader.Static.Foreground}" FontWeight="SemiBold" Margin="0,0,15,0" ></TextBlock>
                                            <TextBlock Text="{Binding Total, RelativeSource={RelativeSource FindAncestor, AncestorType=views:BudgetComponentResourceDataGrid},Mode=OneWay}" Margin="15,0,0,0" ></TextBlock>
                                            <TextBlock Text="MP" Margin="15,0,0,0"></TextBlock>
                                        </DockPanel>-->
                                    </Grid>
                                </Grid>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>

    </TreeView.Style>



    <TreeView.Resources>

        <converters:BudgetComponentItemTemplateSelector x:Key="budgetComponentItemTemplateSelector" />

        <DataTemplate x:Key="overGroupTemplate" DataType="{x:Type viewModels:IPriceSystemGroupPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid x:Name="GroupRow" Background="DeepSkyBlue">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>-->
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35" ToolTip="{Binding Name}" Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>-->
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  Margin="5,0"
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>
                        <TextBox x:Name="textBlock0"    Padding="0,0,10,0" Text="{Binding Code}" ToolTip="{Binding Code, Mode=OneWay}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>


                    <TextBox x:Name="textBlock"  Grid.Column="2" Grid.ColumnSpan="2" Padding="5,0,0,0" Text="{Binding Name}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>



                </Grid>


            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <!--<Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <!--<Setter TargetName="MainBorder"  Property="Visibility" Value="{x:Static Visibility.Visible}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="regularGroupTemplate" DataType="{x:Type viewModels:IPriceSystemGroupPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid x:Name="GroupRow" Background="SkyBlue">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>-->
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35" ToolTip="{Binding Name}" Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>-->
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  Margin="5,0"
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>
                        <TextBox x:Name="textBlock0"    Padding="0,0,10,0" Text="{Binding Code}" ToolTip="{Binding Code, Mode=OneWay}"   BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>


                    <TextBox x:Name="textBlock"  Grid.Column="2" Grid.ColumnSpan="2" Padding="5,0,0,0" Text="{Binding Name}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>



                </Grid>


            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <!--<Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <!--<Setter TargetName="MainBorder"  Property="Visibility" Value="{x:Static Visibility.Visible}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="underGroupTemplate" DataType="{x:Type viewModels:IPriceSystemGroupPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid x:Name="GroupRow" Background="LightSkyBlue">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>-->
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35" ToolTip="{Binding Name}" Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <!--<ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>-->
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  Margin="5,0"
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>
                        <TextBox x:Name="textBlock0"    Padding="0,0,10,0" Text="{Binding Code}" ToolTip="{Binding Code, Mode=OneWay}"  BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>


                    <TextBox x:Name="textBlock"  Grid.Column="2" Grid.ColumnSpan="2" Padding="5,0,0,0" Text="{Binding Name}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>


                   
                </Grid>
                

            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <!--<Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <!--<Setter TargetName="MainBorder"  Property="Visibility" Value="{x:Static Visibility.Visible}"/>-->
                    <Setter TargetName="GroupRow" Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="activityTemplate" DataType="{x:Type budget:IBudgetComponentItemPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>
                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>


                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid x:Name="ActivityRow" Background="{DynamicResource DataGrid.Activity.Row.Background}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <!--<RowDefinition Height="1"></RowDefinition>-->
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35" ToolTip="{Binding Name}" Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  Margin="5,0"
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>
                        <TextBox x:Name="textBlock0"    Padding="0,0,10,0" Text="{Binding Code}"   BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>


                    <TextBox x:Name="textBlock"  Grid.Column="2" Grid.ColumnSpan="2" Padding="3,0,0,0" Text="{Binding Name}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>


                    <!--<TextBox x:Name="textBlock2"  Grid.Column="3"  Margin="0,0,0,0" Text="{Binding Norm}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>-->


                    <Border Grid.Column="4" x:Name="textBlock1" VerticalAlignment="Center" Padding="2,0"  >

                        <ComboBox ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits }"  SelectedItem="{Binding MeasurementUnit}" BorderBrush="Transparent"  
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}" Background="{Binding ElementName=ActivityRow ,Path=Background}" 
                                  SelectedValue="{Binding MeasurementUnit}" Tag="{Binding MeasurementUnit}">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            <!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>-->
                        </ComboBox>
                    </Border>


                    <TextBox x:Name="textBlock3" IsReadOnly="True" Grid.Column="5"  Margin="1,0,0,0" Text="{Binding Quantity}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    <Border x:Name="textBlock4"  Grid.Column="6"  VerticalAlignment="Center" Padding="2,0">

                        <ComboBox ItemsSource="{x:Static viewModels11:CurrencyViewModel.Currencies}" SelectedItem="{Binding Currency}" 
                                    Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}"  Background="{Binding ElementName=ActivityRow ,Path=Background}" 
                                   SelectedValue="{Binding Currency}" Tag="{Binding Currency}">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            <!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>-->
                        </ComboBox>
                    </Border>

                    <TextBox x:Name="textBlock5"  Grid.Column="7"  Margin="1,0,0,0" Padding="0" VerticalContentAlignment="Center" Text="{Binding UnitaryCost}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"   HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                    <TextBox x:Name="textBlock6"  Grid.Column="8"  Margin="0,0,0,0" Padding="0" VerticalContentAlignment="Center"  Text="{Binding  Cost,Mode=OneWay}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                </Grid>
                <Border Grid.Row="1" Name="MainBorder" Visibility="Collapsed"  Padding="2,0,2,5"   CornerRadius="5" Background="{DynamicResource DataGridCell.Selected.Background}" >
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <DockPanel Margin="8,0,8,5">
                                <TextBlock   FontSize="12" Text="{x:Static properties:Resources.Description}" FontWeight="SemiBold" VerticalAlignment="Center"  Margin="0,2,13,2" ></TextBlock>
                                <TextBox   FontSize="12" Name="DetailsDescription" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Text="{Binding Path=Description,Mode=TwoWay}" Padding="2,3"  Margin="20,0,0,0" TextWrapping="Wrap"  Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"/>
                            </DockPanel>

                        </Grid>
                        <DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <DockPanel Grid.Column="0" HorizontalAlignment="Center" Margin="8,0,5,0" >
                                    <DockPanel.Resources>
                                        <converters:UnsaneTestConverter x:Key="UnsaneTestConverter"/>

                                    </DockPanel.Resources>


                                    <TextBlock  FontSize="12" Padding="0,1" Margin="0,2,11,2" FontWeight="SemiBold"  Text="{x:Static properties:Resources.ExpenseConcepts}"   HorizontalAlignment="Right"  VerticalAlignment="Center"  ></TextBlock>
                                    <!--SubLevel="{Binding SubExpenseConcept,BindsDirectlyToSource=False,Mode=TwoWay}"-->

                                    <uiControls:LeveredComboBox  FontSize="12" Margin="0,2"  Name="SpentConcept"  Width="140"  ItemsSource="{x:Static viewModels1:ExpenseConceptViewModel.ExpenseConcepts}"    BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}" SubLevel="{Binding SubExpenseConcept,BindsDirectlyToSource=False,Mode=TwoWay}" MinHeight="0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock   Text="{Binding Name}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </uiControls:LeveredComboBox>
                                </DockPanel>
                                <DockPanel Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,5,0">

                                    <!--<TextBlock Text="(Detalles)" FontWeight="Bold" Opacity="0.4"></TextBlock>-->
                                    <TextBlock FontSize="12" Margin="5,2"  Padding="0,1" Text="{x:Static properties:Resources.Category}" FontWeight="SemiBold"    HorizontalAlignment="Right"  VerticalAlignment="Center"  ></TextBlock>
                                    <ComboBox  FontSize="12" Margin="0,2" Name="Category" Width="120"   MinHeight="0"
                                          ItemsSource="{x:Static viewModels1:CategoryViewModel.Categories}"
                                          SelectedItem="{Binding Category}" SelectedValue="{Binding Category}"
                                          BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock   Text="{Binding Name}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </ComboBox>
                                </DockPanel>
                                <DockPanel Grid.Column="2" HorizontalAlignment="Center" Margin="0,0,5,0">

                                    <!--<TextBlock Text="(Detalles)" FontWeight="Bold" Opacity="0.4"></TextBlock>-->
                                    <TextBlock FontSize="12" Margin="5,2"  Padding="0,1" Text="{x:Static properties:Resources.Speciality }"   FontWeight="SemiBold"  HorizontalAlignment="Right"  VerticalAlignment="Center"  ></TextBlock>
                                    <uiControls:LeveredComboBox  FontSize="12" Margin="0,2" Name="Speciality" Width="120"   MinHeight="0"
                                          ItemsSource="{x:Static viewModels1:SpecialityViewModel.Specialities}"
                                         SubLevel="{Binding SubSpeciality,BindsDirectlyToSource=False,Mode=TwoWay}"
                                          Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}" BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock   Text="{Binding Name}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </uiControls:LeveredComboBox>
                                </DockPanel>
                                <!--<DockPanel Grid.Column="3" DockPanel.Dock="Right" HorizontalAlignment="Center"  >
                                    --><!--<TextBlock Text="(Detalles)" FontWeight="Bold" Opacity="0.4"></TextBlock>--><!--
                                    <TextBlock  FontSize="12" Margin="5,2" Padding="0,1" Text="{x:Static properties:Resources.PlannedPeriod}"   HorizontalAlignment="Right"  FontWeight="SemiBold"  VerticalAlignment="Center"></TextBlock>
                                    <DockPanel DataContext="{Binding Period}" VerticalAlignment="Center">
                                        <DatePicker  Margin="0,2"  Padding="0,1" FontSize="12" SelectedDate="{Binding Starts,Mode=TwoWay}" Foreground="{DynamicResource Default.Foreground}"  BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"></DatePicker>
                                        <TextBlock Text="-" Padding="4,0"   VerticalAlignment="Center"  ></TextBlock>
                                        <DatePicker Margin="0,2" Padding="0,1" FontSize="12" SelectedDate="{Binding Ends,Mode=TwoWay}" Foreground="{DynamicResource Default.Foreground}" BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"></DatePicker>

                                    </DockPanel>
                                </DockPanel>-->


                            </Grid>

                        </DockPanel>
                    </StackPanel>

                </Border>

            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <!--<Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName}"/>-->
                    <Setter TargetName="ActivityRow" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="MainBorder"  Property="Visibility" Value="{x:Static Visibility.Visible}"/>
                    <Setter TargetName="ActivityRow" Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>


        <DataTemplate x:Key="resourceTemplate" DataType="{x:Type budget:IBudgetComponentItemPresenter}">
            <DataTemplate.Resources>
                <converters1:SoftBooleanToVisibilityConverter x:Key="SoftBooleanToVisibilityConverter"></converters1:SoftBooleanToVisibilityConverter>

                <Style x:Key="InvestmentElementTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                    <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Button}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsDefaulted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Padding" Value="0"/>
                </Style>

                <Style x:Key="InvestmentElementTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource InvestmentElementTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
                    <Setter Property="Background" Value="Transparent"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                    <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="true">
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                                        <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                        <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>



            </DataTemplate.Resources>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid  VerticalAlignment="Center"   Height="35" ToolTip="{Binding Name}" Margin="0,0,0,0" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="5"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CodeColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NameColumn}"></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=NormColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=MeasurementUnitColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=QuantityColumn}" ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=CurrencyColumn}"  ></ColumnDefinition>
                        <ColumnDefinition Width="{Binding ActualWidth,ElementName=UnitaryCostComlumn}" ></ColumnDefinition>
                        <ColumnDefinition  Width="{Binding ActualWidth,ElementName=CostComlumn}" ></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <DockPanel Grid.Column="1" >
                        <Rectangle Fill="Transparent" Margin="{Binding DeepThickness}" ></Rectangle>
                        <DockPanel MinWidth="8" Margin="0,0,5,0">
                            <ToggleButton Style="{StaticResource InvestmentElementTreeViewCollapserToggleButtonStyle}" IsChecked="{Binding IsExpanded}"
                                Visibility="{Binding HasItems, Converter={StaticResource SoftBooleanToVisibilityConverter}}">
                                <Border>
                                    <Path x:Name="icon" Width="7" Height="7" Stretch="Uniform"
                                  Margin="5,0"
                                  Fill="{DynamicResource DataGrid.Static.Foreground}"
                                  Data="{Binding IconData}"/>
                                </Border>
                            </ToggleButton>

                        </DockPanel>
                        <TextBox x:Name="textBlock0"    Padding="0,0,10,0" Text="{Binding Code}" ToolTip="{Binding Code, Mode=OneWay}"  BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left" FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>

                    </DockPanel>

                    <uiControls:AtlasEasyTextBox x:Name="textBlock"  Grid.Column="2" Padding="3,0,0,0"   NomenclatorSource="{x:Static budget1:PlannedResourceForNomenclatorViewModel.NomenclatorProvider}" MaxItemsNumber="5" Text="{Binding Name}"  SelectedObject="{Binding BudgetComponent,Mode=TwoWay}"
                                                 BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" 
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>
                    <!--<TextBox x:Name="textBlock"  Grid.Column="2" Padding="3,0,0,0" Text="{Binding Name}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}" Foreground="{DynamicResource DataGrid.Static.Foreground}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"/>-->


                    <TextBox x:Name="textBlock2"  Grid.Column="3"  Margin="3,0,0,0" Text="{Binding Norm}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>


                    <Border Grid.Column="4" x:Name="textBlock1" VerticalAlignment="Center" Padding="2,0">

                        <ComboBox ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits }" SelectedItem="{Binding MeasurementUnit}" BorderBrush="Transparent"  
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}" Background="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Background}"
                                  SelectedValue="{Binding MeasurementUnit}"   Tag="{Binding MeasurementUnit}">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            <!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>-->
                        </ComboBox>
                    </Border>


                    <TextBox x:Name="textBlock3"  Grid.Column="5"   Margin="1,0,0,0" Text="{Binding Quantity}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"  HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                    <!--<TextBox x:Name="textBlock4"  Grid.Column="6"  Margin="0,0,0,0" Text="{Binding Currency,Converter={StaticResource TextItemIdConverter},ConverterParameter={x:Type viewModels:ICurrencyViewModel},Mode=OneWay}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"   HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>-->
                    <Border x:Name="textBlock4"  Grid.Column="6"  VerticalAlignment="Center" Padding="2,0" >

                        <ComboBox ItemsSource="{x:Static viewModels11:CurrencyViewModel.Currencies}"  SelectedItem="{Binding Currency}" 
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Foreground}" Background="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Background}"
                                   SelectedValue="{Binding Currency}"   Tag="{Binding Currency}">
                            <ComboBox.Style >
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsFocused" Value="True">
                                            <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>

                            <!--<ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>-->
                        </ComboBox>
                    </Border>

                    <TextBox x:Name="textBlock5"  Grid.Column="7"    Margin="1,0,0,0"  Text="{Binding UnitaryCost}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center"   HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                    <TextBox x:Name="textBlock6"  Grid.Column="8"  Margin="0,0,0,0" Text="{Binding  Cost,Mode=OneWay}" BorderThickness="0" BorderBrush="Transparent" Background="Transparent"
                           VerticalAlignment="Center" HorizontalAlignment="Left"
                           FontSize="{DynamicResource DataGrid.Static.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}" Foreground="{Binding ElementName=textBlock,Path=Foreground}"/>
                </Grid>
                <Border  Grid.Row="1" Name="MainBorder" Visibility="Collapsed"   CornerRadius="5" Background="{DynamicResource DataGridCell.Selected.Background}">
                    <StackPanel>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <DockPanel Margin="7,0,8,5">
                                <TextBlock   FontSize="12" Text="{x:Static properties:Resources.Description}" FontWeight="SemiBold" VerticalAlignment="Center"  Margin="0,2,13,2" ></TextBlock>
                                <TextBox   FontSize="12" Name="DetailsDescription" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" Text="{Binding Path=Description,Mode=TwoWay}" Padding="2,3"  Margin="20,0,0,0" TextWrapping="Wrap"  Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"/>
                            </DockPanel>
                            <DockPanel Grid.Column="1" Margin="10,0,5,5">
                                <DockPanel.Resources>
                                    <!--Create list of enumeration values-->
                                    <ObjectDataProvider x:Key="myEnum" MethodName="GetValues"  ObjectType="{x:Type  core:Enum}">
                                        <ObjectDataProvider.MethodParameters>
                                            <x:Type Type="entities:ResourceKind"/>
                                        </ObjectDataProvider.MethodParameters>
                                    </ObjectDataProvider>
                                </DockPanel.Resources>
                                <TextBlock  FontSize="12" Margin="5,0" Text="{x:Static properties:Resources.Type}"  VerticalAlignment="Center"  FontWeight="SemiBold"></TextBlock>
                                <ComboBox FontSize="12" Name="ResourceKindComboBox"   MinWidth="110" SelectedItem="{Binding ResourceKind}"  ItemsSource="{Binding Source={StaticResource myEnum}}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"  BorderThickness="1"/>
                            </DockPanel>
                        </Grid>
                        <DockPanel>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                                    <ColumnDefinition Width="*"></ColumnDefinition>
                                </Grid.ColumnDefinitions>

                                <DockPanel Grid.Column="0" HorizontalAlignment="Center" Margin="8,0,5,5">

                                    <!--<TextBlock Text="(Detalles)" FontWeight="Bold" Opacity="0.4"></TextBlock>-->

                                    <TextBlock  FontSize="12" Padding="0,1" Margin="0,0,11,0" FontWeight="SemiBold"  Text="{x:Static properties:Resources.ExpenseConcepts}"   HorizontalAlignment="Right"  VerticalAlignment="Center" ></TextBlock>


                                    <uiControls:LeveredComboBox  FontSize="12" Margin="0,2"  Name="SpentConcept"  Width="140"  ItemsSource="{x:Static viewModels1:ExpenseConceptViewModel.ExpenseConcepts}" SubLevel="{Binding SubExpenseConcept,BindsDirectlyToSource=False,Mode=TwoWay}"  BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    SelectedValue="{Binding ExpenseConcept}" Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"
                                          MinHeight="0">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock   Text="{Binding Name}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </uiControls:LeveredComboBox>
                                </DockPanel>
                                <DockPanel Grid.Column="1" HorizontalAlignment="Center" Margin="0,0,5,5">

                                    <!--<TextBlock Text="(Detalles)" FontWeight="Bold" Opacity="0.4"></TextBlock>-->
                                    <TextBlock FontSize="12" Padding="5,1" Text="{x:Static properties:Resources.Category}" HorizontalAlignment="Center" FontWeight="SemiBold"  VerticalAlignment="Center"></TextBlock>
                                    <ComboBox FontSize="12" Name="Category" Margin="0,2"  Width="140"  DisplayMemberPath="Category.Name" Text="{Binding Category.Name,Mode=OneWay}"    BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}" 
                                         ItemsSource="{x:Static viewModels1:CategoryViewModel.Categories}" SelectedItem="{Binding Category}"
                                                SelectedValue="{Binding Category}" Tag="{Binding Category}">
                                        <ComboBox.ItemTemplate>
                                            <DataTemplate>
                                                <TextBlock   Text="{Binding Name}"></TextBlock>
                                            </DataTemplate>
                                        </ComboBox.ItemTemplate>

                                    </ComboBox>
                                </DockPanel>
                                <DockPanel Grid.Column="2" DockPanel.Dock="Right" HorizontalAlignment="Center"  Margin="0,0,5,5">
                                    <DockPanel x:Name="SupplyDockPanel">
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ResourceKindComboBox,Path=SelectedItem}" Value="{x:Static entities:ResourceKind.Supply}">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <DockPanel>
                                            <TextBlock FontSize="12" Padding="5,1"  Text="{x:Static properties:Resources.UnitaryWeight}" FontWeight="SemiBold" HorizontalAlignment="Center"  VerticalAlignment="Center"></TextBlock>
                                            <DockPanel  MinWidth="90"  Margin="0,2"  DataContext="{Binding Weight}">

                                                <TextBox FontSize="12" Text="{Binding Amount}"  Margin="5,0" MinWidth="35" Height="22" Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"  VerticalContentAlignment="Center"></TextBox>
                                                <ComboBox FontSize="12" ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits}" SelectedItem="{Binding MeasurementUnit}"  SelectedValue="{Binding MeasurementUnit}"  Tag="{Binding MeasurementUnit}" BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                                  Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"  BorderThickness="1">
                                                    <ComboBox.Style >
                                                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>

                                                    <!--<ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>-->
                                                </ComboBox>


                                            </DockPanel>
                                        </DockPanel>
                                        <DockPanel>
                                            <TextBlock FontSize="12" Padding="5,1"  Text="{x:Static properties:Resources.UnitaryVolume}" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                            <DockPanel MinWidth="90"  Margin="0,2" DataContext="{Binding Volume}">
                                                <TextBox FontSize="12" Text="{Binding Amount}" Margin="5,0" Height="22"  MinWidth="35" Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1" VerticalContentAlignment="Center"></TextBox>
                                                <ComboBox FontSize="12" ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits}" SelectedItem="{Binding MeasurementUnit}"  BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                                          Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"  BorderThickness="1"
                                                   SelectedValue="{Binding MeasurementUnit}"    Tag="{Binding MeasurementUnit}">
                                                    <ComboBox.Style >
                                                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>

                                                    <!--<ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>-->
                                                </ComboBox>

                                            </DockPanel>
                                        </DockPanel>
                                        <!--<DockPanel>
                                            <TextBlock FontSize="12"  Padding="5,1"  Text="{x:Static properties:Resources.WasteCoefficient}" FontWeight="SemiBold" HorizontalAlignment="Center" ></TextBlock>
                                            <TextBox FontSize="12" Text="{Binding WasteCoefficient}" Margin="5,0" Padding="2.5" Width="70" Background="Transparent" HorizontalAlignment="Left" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"></TextBox>
                                        </DockPanel>-->
                                    </DockPanel>
                                    <DockPanel x:Name="ManLaborDockPanel" >
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ResourceKindComboBox,Path=SelectedItem}" Value="{x:Static entities:ResourceKind.MenLabor}">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <DockPanel  Margin="0,2" >
                                            <TextBlock FontSize="12" Padding="5,1" Text="{x:Static properties:Resources.WageScale}" FontWeight="SemiBold" HorizontalAlignment="Center" VerticalAlignment="Center"></TextBlock>
                                            <ComboBox FontSize="12" MinWidth="110" ItemsSource="{x:Static viewModels1:WageScaleViewModel.WageScales}" SelectedItem="{Binding WageScale}" BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"></ComboBox>
                                        </DockPanel>
                                        <DockPanel Margin="0,2" >
                                            <TextBlock FontSize="12"  Padding="5,1" Text="{x:Static properties:Resources.MenNumber}" Margin="5,0,0,0" FontWeight="SemiBold" HorizontalAlignment="Center"  VerticalAlignment="Center"></TextBlock>
                                            <TextBox FontSize="12" Text="{Binding MenNumber}"  MinWidth="35"   Height="22" Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"></TextBox>
                                        </DockPanel>
                                    </DockPanel>
                                    <DockPanel x:Name="EquipmentDockPanel">
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=ResourceKindComboBox,Path=SelectedItem}" Value="{x:Static entities:ResourceKind.Equipment}">
                                                        <Setter Property="Visibility" Value="Visible"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <DockPanel>
                                            <TextBlock FontSize="12" Padding="5,1"  Text="{x:Static properties:Resources.UnitaryWeight}" FontWeight="SemiBold" HorizontalAlignment="Center"  VerticalAlignment="Center"></TextBlock>
                                            <DockPanel MinWidth="90" Margin="0,2"  DataContext="{Binding Weight}">

                                                <TextBox FontSize="12" Text="{Binding Amount}"   Margin="5,0" Height="22" MinWidth="35" Background="Transparent" Foreground="{DynamicResource DataGridCell.Selected.Foreground}"   BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}" BorderThickness="1"  VerticalContentAlignment="Center"></TextBox>
                                                <ComboBox FontSize="12"  ItemsSource="{x:Static viewModels11:MeasurementUnitViewModel.MeasurementUnits}" SelectedItem="{Binding MeasurementUnit}"  BorderBrush="{DynamicResource DataGridRowDetailLine.Real.Foreground}"
                                                    Foreground="{DynamicResource DataGridCell.Selected.Foreground}" Background="{DynamicResource DataGridCell.Selected.Background}"  BorderThickness="1"
                                                   SelectedValue="{Binding MeasurementUnit}" Tag="{Binding MeasurementUnit}">
                                                    <ComboBox.Style >
                                                        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                                            <Setter Property="BorderBrush" Value="Transparent"></Setter>
                                                            <Style.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"></Setter>
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ComboBox.Style>

                                                    <!--<ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock   Text="{Binding Letters,Mode=OneWay}" ></TextBlock>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>-->
                                                </ComboBox>


                                            </DockPanel>
                                        </DockPanel>
                                    </DockPanel>
                                </DockPanel>


                            </Grid>

                        </DockPanel>
                    </StackPanel>
                    <!--<Border.Style>
                        <Style TargetType="{x:Type Border}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                                    <Setter Property="Visibility" Value="{x:Static Visibility.Visible}"/>
                                    -->
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                    <!--
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Border.Style>-->
                </Border>
            </Grid>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <!--<Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName}"/>-->

                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.MouseOver.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="MainBorder"  Property="Visibility" Value="{x:Static Visibility.Visible}"/>
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
                    <!--<Setter TargetName="icon" Property="Fill" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>-->
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>



        <HierarchicalDataTemplate x:Key="InvestmentElementDataTemplate" ItemsSource="{Binding Items.Items}" >
            <!--<HierarchicalDataTemplate.ItemContainerStyle>
                <Style TargetType="ItemsControl">
                    <Setter Property="ItemsSource" Value="{Binding PlannedResources.Items}"></Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ItemKind}" Value="OverGroup">
                            <Setter Property="ItemsSource" Value="{Binding RegularGroups.Items}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ItemKind}" Value="RegularGroup">
                            <Setter Property="ItemsSource" Value="{Binding UnderGroups.Items}"></Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ItemKind}" Value="UnderGroup">
                            <Setter Property="ItemsSource" Value="{Binding VariantLines.Items}"></Setter>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </HierarchicalDataTemplate.ItemContainerStyle>-->

        </HierarchicalDataTemplate>

        <Style x:Key="InvestmentElementTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="IsExpanded" Value="{Binding IsExpanded}"/>
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
            <Setter Property="ToolTip" Value="{Binding Name}"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>

                            <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                <Path x:Name="path"
                                                      Width="12" Height="12"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementAddCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ItemKind}" Value="Activity">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ControlTemplate.Resources>

                        <Grid  x:Name="Bd" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                                <RowDefinition Height="Auto"></RowDefinition>
                            </Grid.RowDefinitions>
                            <!--<Line x:Name="firstbottomLine" Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Panel.ZIndex="100" StrokeThickness="1" Stroke="{DynamicResource DataGrid.Static.Foreground}" VerticalAlignment="Top" d:LayoutOverrides="Width" DockPanel.Dock="Bottom" />-->
                            <Border SnapsToDevicePixels="true" DockPanel.Dock="Top" ScrollViewer.VerticalScrollBarVisibility="Disabled" >

                                <Grid  >
                                    <!--<Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"></ColumnDefinition>
                                            <ColumnDefinition Width="Auto"></ColumnDefinition>
                                        </Grid.ColumnDefinitions>-->
                                    <Border >


                                        <ContentPresenter x:Name="PART_Header" ContentTemplateSelector="{StaticResource budgetComponentItemTemplateSelector}"    ContentSource="Header" HorizontalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" />
                                    </Border>
                                    <StackPanel x:Name="commandsPanel"  Height="35" Width="Auto" 
                                                Orientation="Horizontal"  VerticalAlignment="Top" HorizontalAlignment="Right"
                                                Margin="0,0,10,0" Visibility="{Binding IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=Bd, Mode=OneWay}">
                                        <!--<TextBlock Text="{TemplateBinding IsExpanded}"></TextBlock>-->
                                        <StackPanel VerticalAlignment="Center"   Orientation="Horizontal" >
                                            <Button Style="{DynamicResource AddCommandButtonStyle}"
                                                    Command="{Binding Items.AddCommand}"
                                                    ToolTip="{x:Static properties:Resources.AddNewPlannedResource}"
                                                    Content="F1 M 51.5487,37.9814L 56.814,41.0534L 50.3383,48.7636L 50.3383,48.8841L 60.0205,46.9565L 60.0205,53.0403L 50.2777,51.414L 50.2777,51.5344L 56.814,59.0037L 51.4882,62.0757L 47.978,52.7994L 47.8569,52.7994L 44.4072,62.0757L 39.2025,59.0037L 45.6782,51.4742L 45.6177,51.3537L 36.1159,53.0403L 36.1159,46.9565L 45.5571,48.8841L 45.5571,48.7636L 39.2025,41.1137L 44.5888,37.9814L 47.9174,47.3179L 48.0385,47.3179L 51.5487,37.9814 Z M 20,17L 43.25,17L 56,29.75L 56,39L 52,36.75L 52,34L 39,34L 39,21L 24,21L 24,55L 41,55L 37.5,59L 20,59L 20,17 Z M 43,22.25L 43,30L 50.75,30L 43,22.25 Z ">
                                            </Button>
                                            <Button x:Name="DeleteButton" Style="{DynamicResource DeleteCommandButtonStyle}"
                                                    Command="{Binding DeleteMySelfCommand}"
                                                    CommandParameter="{Binding}"
                                                    ToolTip="{Binding DeleteText}"
                                                    Content="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z ">
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>

                                </Grid>




                            </Border>
                            <!--<DockPanel x:Name="selMarker" Height="5" Panel.ZIndex="100" DockPanel.Dock="Top" Margin="0,0,0,-5" Visibility="Collapsed" HorizontalAlignment="Left">
                                    <Rectangle x:Name="rect1" Height="1" Margin="0,0,13,0" DockPanel.Dock="Right" Width="8" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                    <Path x:Name="selMark" HorizontalAlignment="Right" Width="8" Height="5" Data="M0,0L4,4 8,0" DockPanel.Dock="Right" Margin="0,0,-0.5,0" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}" Fill="{Binding Background, ElementName=Bd}"/>
                                    <Rectangle x:Name="rect2" Height="1" Margin="13,0,-0.5,0" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                </DockPanel>
                            <Line x:Name="bottomLine" Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Panel.ZIndex="100" StrokeThickness="1" Stroke="{DynamicResource DataGrid.Static.Foreground}" VerticalAlignment="Top" d:LayoutOverrides="Width" DockPanel.Dock="Bottom" Visibility="Collapsed"/>-->
                            <Rectangle x:Name="firstbottomLine" Grid.Row="1"  Margin="0" Width="{Binding ElementName=AtlasDataGrid, Path=ActualWidth}" Height="1"  Fill="{DynamicResource DataGridRowBottomLine.Static.Background}" VerticalAlignment="Bottom" d:LayoutOverrides="Width" />
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="2" Height="Auto" HorizontalAlignment="Left" Margin="0,0,0,0.5" Visibility="Collapsed"/>

                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>
                                <Setter  Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>
                                <!--<Setter Property="Stroke" TargetName="bottomLine" Value="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>-->
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="True">

                                <Setter Property="Visibility" Value="Visible" TargetName="ItemsHost"/>
                                <!-- <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                <Setter TargetName="" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Foreground}"/>-->
                            </Trigger>
                            <!--<Trigger SourceName="ExpandToggleButton" Property="IsChecked" Value="False">
                                <Setter Property="IsExpanded" Value="False"></Setter>
                            </Trigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition SourceName="Bd" Property="IsMouseOver" Value="True"/>
                                    <Condition  Property="IsSelected" Value="False"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter TargetName="Bd" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                                    <!--<Setter Property="Visibility" Value="Visible" TargetName="bottomLine"/>
                                        <Setter Property="Visibility" Value="Visible" TargetName="selMarker"/>-->
                                </MultiTrigger.Setters>
                            </MultiTrigger>


                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <!--<Style.Triggers >
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter TargetName="Bd" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

    </TreeView.Resources>




</TreeView>