<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:CompanyName.Atlas.UIControls.Converters">
    
    

    <Style x:Key="PlanningExecutionTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Static.Foreground}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="Padding" Value="12,2,15,2"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="mainBorder" Height="35" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource PlanningExecutionTabItem.Static.Background}" Margin="0" OpacityMask="Red">
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <Path x:Name="path" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" Height="5" Width="10" Data="M0,5L5,0 10,5z" Visibility="Visible" Opacity="0" OpacityMask="{x:Null}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HideSelectionMarker_BeginStoryboard" Storyboard="{StaticResource HideSelectionMarker}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Selected.Foreground}"/>
                        </Trigger>
                        <Trigger SourceName="mainBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.MouseOver.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ResourcesActivitiesTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource ResourcesActivitiesTabControlHeader.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <!--<Setter Property="Padding" Value="12,2,17,2"/>-->
        <Setter Property="Margin" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}" Margin="0" Height="35">
                        <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="mainBorder">
                            <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ResourcesActivitiesTabItem.Selected.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

   
    <Style x:Key="ResourcesActivitiesTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ResourcesActivitiesTabControlHeader.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourcesActivitiesTabItemStyle}"/>
        <!--<Setter Property="Visibility" Value="Collapsed"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel x:Name="headerPanel" Background="Transparent" Grid.Column="0" IsItemsHost="true" Grid.Row="0" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                        <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ConceptViewTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource ResourcesActivitiesTabControlHeader.Background}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ResourcesActivitiesTabItemStyle}"/>
        <!--<Setter Property="Visibility" Value="Collapsed"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <TabPanel x:Name="headerPanel" Background="Transparent" IsItemsHost="true"  KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                            <!--<DockPanel Height="35" Width="100" VerticalAlignment="Center" HorizontalAlignment="Right"  >
                                --><!--<Grid>
                                 <Grid.RowDefinitions>
                                     <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                    </Grid.RowDefinitions>--><!--
                                <TextBlock DockPanel.Dock="Bottom" VerticalAlignment="Center" FontSize="13" HorizontalAlignment="Center" Foreground="{DynamicResource BudgetComponentItemButton.Selected.Foreground}"
                                                       Text="{Binding View, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasTabControl}, Converter={StaticResource ConceptViewToStringConverter} }"/>
                                --><!--</Grid>--><!--

                            </DockPanel>-->
                            </Grid>
                            <Border x:Name="contentPanel" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Row="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ExportTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ItemText}"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Margin" Value="0"/>
        <!--<Setter Property="Padding" Value="12,2,15,2"/>-->
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <!--<Setter Property="Background" Value="{DynamicResource PlanningExecutionTabControl.Static.Background}"/>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideSelectionMarker">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="path">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                       
                        

                    </ControlTemplate.Resources>

                    <Grid>
                        <Border x:Name="mainBorder" Height="35" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource PlanningExecutionTabItem.Static.Background}" Margin="0" OpacityMask="Red">
                            <ContentPresenter x:Name="contentPresenter" ContentSource="Header" FocusVisualStyle="{x:Null}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                        </Border>
                        <Path x:Name="path" Fill="{TemplateBinding Background}" VerticalAlignment="Bottom" Height="5" Width="10" Data="M0,5L5,0 10,5z" Visibility="Visible" Opacity="0" OpacityMask="{x:Null}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="HideSelectionMarker_BeginStoryboard" Storyboard="{StaticResource HideSelectionMarker}"/>
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PlanningExecutionTabItem.Selected.Foreground}"/>
                        </Trigger>
                        <Trigger SourceName="mainBorder" Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


   
 <Style x:Key="VerticalTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ItemText}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource PlanningExecutionTabItemStyle}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <ControlTemplate.Resources>
                        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                            <Setter Property="OverridesDefaultStyle" Value="true"/>
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarThumbBorder}"/>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Thumb}">
                                        <Border Background="{TemplateBinding Background}"
                        						BorderBrush="{TemplateBinding BorderBrush}"
                        						BorderThickness="{TemplateBinding BorderThickness}">
                                            <Rectangle x:Name="Rect" Fill="{DynamicResource ScrollBarThumbForeground}" Margin="{TemplateBinding Padding}" />
                                        </Border>

                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundHover}"/>
                                                <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundHover}"/>
                                            </Trigger>
                                            <Trigger Property="IsDragging" Value="True">
                                                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundDragging}"/>
                                                <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundDragging}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarButton"
                        		TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle"
                        			Value="true"/>
                            <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                            <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
                            <Setter Property="Focusable"
                        			Value="false"/>
                            <Setter Property="IsTabStop"
                        			Value="false"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Border Background="Transparent"
                        						BorderBrush="Transparent"
                        						BorderThickness="{TemplateBinding BorderThickness}"
                        						Width="{TemplateBinding Width}"
                        						Height="{TemplateBinding Height}">
                                            <ContentPresenter Margin="{TemplateBinding Padding}"
                        							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        							RecognizesAccessKey="True"
                        							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                                                <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />-->
                                                <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />-->
                                                <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />-->
                                                <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                            </Trigger>
                                            <!--<MultiDataTrigger >
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=ScrollBar},Path=Value}" Value="0"></Condition>
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}}" Value="{x:Static ScrollBar.LineLeftCommand}"></Condition>
                                                </MultiDataTrigger.Conditions>
                                                -->
                                            <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />-->
                                            <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />-->
                                            <!--
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>-->
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="ScrollBarPageButton"
                        		TargetType="{x:Type RepeatButton}">
                            <Setter Property="OverridesDefaultStyle"
                        			Value="true"/>
                            <Setter Property="Background"
                        			Value="Transparent"/>
                            <Setter Property="Focusable"
                        			Value="false"/>
                            <Setter Property="IsTabStop"
                        			Value="false"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                                        <Rectangle Fill="{TemplateBinding Background}"
                        						Width="{TemplateBinding Width}"
                        						Height="{TemplateBinding Height}"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                            <Setter Property="Value" Value="0"/>
                            <Setter Property="LargeChange" Value="35"/>
                            <Setter Property="SmallChange" Value="35"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                                        <Grid Name="Bg"
                          Background="Transparent"
                          SnapsToDevicePixels="true" >
                                            <Grid.RowDefinitions>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                <RowDefinition Height="0.00001*"/>
                                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                            </Grid.RowDefinitions>
                                            <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Margin="0,0,0,0">
                                                <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 4 L 3.5 0 L 7 4 Z" />
                                            </RepeatButton>
                                            <!--<Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumb}" Padding="4,0" />
                                                    </Track.Thumb>
                                                </Track>-->
                                            <RepeatButton Style="{StaticResource ScrollBarButton}" 
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Margin="0,0,0,0">
                                                <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 3.5 4 L 7 0 Z" />
                                            </RepeatButton>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="Orientation" Value="Horizontal">
                                    <Setter Property="Width" Value="Auto"/>
                                    <Setter Property="MinWidth" Value="0"/>
                                    <Setter Property="Height" Value="7"/>
                                    <Setter Property="MinHeight" Value="7"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                        <ColumnDefinition Width="0.00001*"/>
                                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                    </Grid.ColumnDefinitions>
                                                    <RepeatButton 
                                             
                                              Command="{x:Static ScrollBar.LineLeftCommand}" 
                                              Margin="-8,0,0,-5">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="RepeatButton" BasedOn="{StaticResource ScrollBarButton}">
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ScrollBar},Path=Value}" Value="0">
                                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                        <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 3.5 L 4 7 L 4 0 Z" />
                                                    </RepeatButton>
                                                    <!-- <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       IsDirectionReversed="False">
                                                   <Track.DecreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                                        </Track.DecreaseRepeatButton>
                                                        <Track.IncreaseRepeatButton>
                                                            <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                                        </Track.IncreaseRepeatButton>
                                                        <Track.Thumb>
                                                            <Thumb Style="{StaticResource ScrollBarThumb}" Padding="0,4" />
                                                        </Track.Thumb>
                                                    </Track>-->
                                                    <RepeatButton 
                                              Grid.Column="2" Style="{StaticResource ScrollBarButton}"
                                             
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              Margin="0,0,-10,-5">

                                                        <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 0 7 L 4 3.5 Z" />
                                                    </RepeatButton>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="HorizontalScrollBarVisibility" Value="Auto" />

                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent">
                                            <!--<Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>-->



                                            <!--<ScrollBar x:Name="PART_VerticalScrollBar"
                                      
                                       Minimum="0.0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                       Cursor="Arrow"
                                       AutomationProperties.AutomationId="VerticalScrollBar"/>-->

                                            <Border x:Name="BorderPART_ScrollContentPresenter" >
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            </Border>
                                            <ScrollBar  x:Name="PART_HorizontalScrollBar"
                                        Orientation="Horizontal"
                                        VerticalAlignment="Top"
                                        Minimum="0.0"
                                        Maximum="{TemplateBinding ScrollableWidth}"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                        Cursor="Arrow"
                                        AutomationProperties.AutomationId="HorizontalScrollBar"/>


                                        </Grid>

                                        <!--<ControlTemplate.Triggers>
                                            <Trigger SourceName="PART_VerticalScrollBar" Property="Visibility" Value="Visible">
                                                <Setter Property="Padding" TargetName="BorderPART_ScrollContentPresenter" Value="0,10,0,43" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>-->
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
                            <Setter Property="Focusable" Value="false"/>
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Background="Transparent">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <DockPanel Margin="{TemplateBinding Padding}">
                                                <ScrollViewer DockPanel.Dock="Top"
                        								HorizontalScrollBarVisibility="Hidden"
                        								VerticalScrollBarVisibility="Hidden"
                        								Focusable="false">
                                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                        									Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
                        									AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                        									ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                        									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </ScrollViewer>
                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                        								KeyboardNavigation.DirectionalNavigation="Local"
                        								Content="{TemplateBinding Content}"
                        								ContentTemplate="{TemplateBinding ContentTemplate}"
                        								CanContentScroll="{TemplateBinding CanContentScroll}"
                        								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </DockPanel>

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                        							Grid.Column="1"
                        							Minimum="0.0"
                        							Maximum="{TemplateBinding ScrollableHeight}"
                        							ViewportSize="{TemplateBinding ViewportHeight}"
                        							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                        							Cursor="Arrow"
                        							AutomationProperties.AutomationId="VerticalScrollBar"/>
                                            <ScrollBar  x:Name="PART_HorizontalScrollBar"
                        							Orientation="Horizontal"
                        							Grid.Row="1"
                        							Minimum="0.0"
                        							Maximum="{TemplateBinding ScrollableWidth}"
                        							ViewportSize="{TemplateBinding ViewportWidth}"
                        							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                        							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                        							Cursor="Arrow"
                        							AutomationProperties.AutomationId="HorizontalScrollBar"/>
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                    </ControlTemplate.Resources>
                    <Grid x:Name="templateRoot" ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition x:Name="ColumnDefinition0"  Width="Auto"/>
                            <ColumnDefinition x:Name="ColumnDefinition1" Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!--<Grid.RowDefinitions>
                            <RowDefinition x:Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition x:Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>-->
                        <Border Margin="0" Grid.Column="0" Panel.ZIndex="1" Height="35"
                                        Background="{DynamicResource PlanningExecutionTabControlHeader.Background}">
                            <DockPanel>
                           
                              
                                <ScrollViewer   HorizontalAlignment="Left"  CanContentScroll="True">
                                    
                                    <TabPanel x:Name="headerPanel" Background="Transparent"  IsItemsHost="true" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1" HorizontalAlignment="Left">
                                    
                                    </TabPanel>
                                </ScrollViewer>
                            </DockPanel>
                        </Border>
                       
                        <Border x:Name="contentPanel" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" KeyboardNavigation.DirectionalNavigation="Contained" Grid.Column="1" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost" ContentSource="SelectedContent" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


  

</ResourceDictionary>