<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:properties="clr-namespace:CompanyName.Atlas.UIControls.Properties"
                    xmlns:converter="clr-namespace:CompanyName.Atlas.UIControls.Properties">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Button.xaml"/>
        <ResourceDictionary Source="../Assets/Icons.xaml"/>
        <ResourceDictionary Source="../Assets/Converters.xaml"/>
    </ResourceDictionary.MergedDictionaries>
  

<Style TargetType="uiControls:AtlasModuleContainer">
        <!--<Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{DynamicResource Default.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Default.Foreground}" />-->

        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="{DynamicResource Window.Default.Background}"/>
        <Setter Property="SelectedModule"  Value="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow},Path=SelectedModule}"/>
        <!--<Setter Property="BorderBrush" Value="{DynamicResource Window.Default.BorderBrush}"/>-->

        <!--<Setter Property="Modules" Value="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow},Mode=OneWay,Path=ModuleCatalog.Modules}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uiControls:AtlasModuleContainer">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="FadeIn" >
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value=".65"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="FadeOut">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
                                <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value=".65"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ExpandStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridModuleListView">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="CollapseStoryboard">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="GridModuleListView">
                                <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                            <Setter Property="Background" Value="Transparent" />
                            <Setter Property="BorderBrush"
                Value="Transparent"/>
                            <Setter Property="BorderThickness"
                Value="0"/>
                            <Setter Property="Margin"
                Value="0"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemText}"/>
                            <Setter Property="Padding"
                Value="0"/>
                            <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
                            <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                                        <Grid Background="{TemplateBinding Background}">
                                            <!--<Border Name="Selection" Visibility="Collapsed" />
                                            --><!-- This is used when GridView is put inside the ListView --><!--
                                            <GridViewRowPresenter Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>-->

                                            <!-- This is used for ListView that does not use GridView -->
                                            <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      Visibility="Collapsed"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <!--<Setter TargetName="Selection" Property="Visibility" Value="Visible"/>-->
                                                <!--<Setter TargetName="Selection" Property="Background" Value="{DynamicResource ItemBackgroundHover}"/>-->
                                                <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
                                            </Trigger>
                                            <Trigger Property="IsSelected" Value="true">
                                                <!--<Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                                                <Setter TargetName="Selection" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>-->
                                                <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                                                <Setter Property="Background" Value="Transparent"></Setter>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>

                    <Grid Width="400" >

                        <Grid Opacity="0.01" Background="#000000">
                           
                        </Grid>

                        <Grid x:Name="GridModuleListView" Width="0" HorizontalAlignment="Right" ScrollViewer.VerticalScrollBarVisibility="Disabled" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                            <Rectangle Name="RightBackgroundContent" Opacity="0.5" Fill="#000000" >
                                <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                            </Rectangle>
                            <ListView x:Name="ModuleListView" HorizontalAlignment="Center"  Margin="-2,35,0,0" HorizontalContentAlignment="Center"
                                      ItemsSource="{TemplateBinding Modules}" SelectedItem="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow},Path=SelectedModule}"
                                      Background="Transparent"  BorderBrush="Transparent" IsSynchronizedWithCurrentItem="True"
                                      ScrollViewer.VerticalScrollBarVisibility="Hidden" ScrollViewer.HorizontalScrollBarVisibility="Hidden">


                                <ListView.ItemTemplate >
                                    <DataTemplate DataType="ListViewItem" x:Name="DataTemplate">
                                        <Button x:Name="ModuleButton"  HorizontalContentAlignment="Center" Width="199" Style="{DynamicResource ModuleButtonStyle}" ToolTip="{Binding Ref,Converter={StaticResource ModuleDescriptionConverter}}" HorizontalAlignment="Left"
                                                Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasModuleContainer}, Path=Select}" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem}}"
                                               Margin="0,-1,0,-2" >

                                            <StackPanel  Height="100"  HorizontalAlignment="Center" Margin="4,0,0,0">
                                                <Path  Style="{StaticResource ModuleIconStyle}" Margin="0,10,0,10" Fill="White" 
                                                   Data="{Binding Ref,Converter={StaticResource ModuleIconConverter}}" HorizontalAlignment="Center" Stroke="White"  StrokeThickness="1.5"/>

                                                <TextBlock Text="{Binding Ref,Converter={StaticResource ModuleNameConverter}}" FontSize="18"  Margin="0,5"  HorizontalAlignment="Center"  Foreground="White"></TextBlock>
                                               
                                                
                                            </StackPanel>

                                        </Button>
                                        <DataTemplate.Triggers>
                                            <!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListViewItem},Path=IsSelected}" Value="True">
                                            <Setter TargetName="DataTemplate" Property="Background" Value="Transparent"></Setter>
                                        </DataTrigger>-->
                                            <!--<EventTrigger RoutedEvent="MouseDoubleClick">
                                            <EventTrigger.Actions>
                                                <
                                            </EventTrigger.Actions>
                                        </EventTrigger>-->

                                        </DataTemplate.Triggers>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                                <ListView.Style>
                                    <Style TargetType="ListView" >
                                        <Setter Property="Background" Value="Transparent"></Setter>
                                        <Style.Triggers>

                                            <Trigger Property="HasItems" Value="False">
                                                <Setter Property="Template"  >
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ListView">
                                                            <TextBlock  x:Name="TextBlock" Text="{x:Static properties:Resources.No_Installed_Modules}" Foreground="LightGoldenrodYellow"  Visibility="Visible" FontWeight="SemiBold" VerticalAlignment="Bottom" Margin="0,35" HorizontalAlignment="Center">
                                                                <TextBlock.Effect>
                                                                    <DropShadowEffect ></DropShadowEffect>
                                                                </TextBlock.Effect>
                                                            </TextBlock>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </ListView.Style>
                            </ListView>

                        </Grid>
                      

                    </Grid>


               

                    <ControlTemplate.Triggers>
                        <!--<EventTrigger RoutedEvent="uiControls:AtlasModuleContainer.MouseEnter">
                            --><!--<EventTrigger.EnterActions>--><!--
                                <BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}"></BeginStoryboard>
                            --><!--</EventTrigger.EnterActions>
                            <EventTrigger.ExitActions>-->
                                <!--<BeginStoryboard Storyboard="{StaticResource CollapseStoryboard}"></BeginStoryboard>-->
                            <!--</EventTrigger.ExitActions>--><!--
                        </EventTrigger>
                        <EventTrigger RoutedEvent="uiControls:AtlasModuleContainer.MouseLeave">
                            --><!--<EventTrigger.EnterActions>-->
                            <!--<BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}"></BeginStoryboard>-->
                            <!--</EventTrigger.EnterActions>
                            <EventTrigger.ExitActions>--><!--
                            <BeginStoryboard Storyboard="{StaticResource CollapseStoryboard}"></BeginStoryboard>
                            --><!--</EventTrigger.ExitActions>--><!--
                        </EventTrigger>-->
                        <Trigger Property="IsMouseOver" Value="True" >
                            <Trigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource FadeIn}"></BeginStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}"></BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource FadeOut}"></BeginStoryboard>
                                <BeginStoryboard Storyboard="{StaticResource CollapseStoryboard}"></BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>