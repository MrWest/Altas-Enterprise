<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:properties="clr-namespace:CompanyName.Atlas.UIControls.Properties"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                    xmlns:visuals="clr-namespace:CompanyName.Atlas.Contracts.Presentation.Visuals;assembly=Atlas.Contracts"
                    xmlns:views="clr-namespace:CompanyName.Atlas.UIControls.Views">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Button.xaml"/>
        <ResourceDictionary Source="../Assets/ProgressBar.xaml"/>
        <ResourceDictionary Source="../Assets/Converters.xaml"/>
        <ResourceDictionary Source="../Assets/Icons.xaml"/>
        <ResourceDictionary Source="FirstLevelNavItem.xaml"/>
        <!--<ResourceDictionary Source="SecondLevelNavItem.xaml"/>-->
        <ResourceDictionary Source="../Themes/AtlasModuleContainer.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="SlideIn">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="ContentGrid">
            <EasingThicknessKeyFrame KeyTime="0" Value="-30,0,30,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="SlideOut" >
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="ContentGrid">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="30,0,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>

    </Storyboard>

    <Storyboard x:Key="FadeOut" >
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    <Storyboard x:Key="Appear">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>
        
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  >
            <EasingThicknessKeyFrame KeyTime="0" Value="-30,0,30,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180"/>
        </DoubleAnimationUsingKeyFrames>
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>-->
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Disappear">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-2,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>-->

        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>-->
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>


    </Storyboard>
    <!-- Animation that collapses the left navigation bar -->
    <Storyboard x:Key="CollapseNavBar">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
      <!--<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-2,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>-->
        <!--    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="stackPanel">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-8,0,0"/>
        </ThicknessAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="toggleButton">
            <EasingThicknessKeyFrame KeyTime="0:0:0.133" Value="0,0,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,0,0,3">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="30"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>>-->
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Animation that expands the left navigation bar -->
    <Storyboard x:Key="ExpandNavBar">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180"/>
        </DoubleAnimationUsingKeyFrames>
         <!--  <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0,-8,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </ThicknessAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="stackPanel">
            <EasingThicknessKeyFrame KeyTime="0" Value="0,-8,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </ThicknessAnimationUsingKeyFrames>
     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="30"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="26"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="80"/>
        </DoubleAnimationUsingKeyFrames>-->
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            
        </DoubleAnimationUsingKeyFrames>-->
        <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style x:Key="CategoriesButtonStyle" TargetType="ButtonBase" >
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <!--<Setter Property="OverridesDefaultStyle" Value="True"/>-->
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.Selected.Foreground}"/>
        <!--<Setter Property="FontWeight" Value="{Binding FontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"/>-->
        <!--<Setter Property="Text" Value="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"/>-->
        <!--<Setter Property="Selected" Value="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"/>-->

        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true" HorizontalAlignment="Left">
                        <Grid>
                            <Rectangle Name="fillRect" Opacity="0.3" Fill="#000000" >
                                <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                            </Rectangle>

                            <ContentPresenter Content="{TemplateBinding Content}" ></ContentPresenter>
                           
                        </Grid>
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <!--<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">
                            
                          <Setter Property="Background" Value="{DynamicResource CategoriesTabItem.Selected.Background}"      />
                        
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            --><!--<Setter TargetName="TextBlock" Property="Text" Value="JEJEJE"/>--><!--
                            <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.Selected.Foreground}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}" Value="True">

                            <Setter Property="Background" Value="{DynamicResource CategoriesTabItem.MouseOver.Background}"      />

                            --><!--<Setter Property="FontWeight" Value="SemiBold"/>-->
                            <!--<Setter TargetName="TextBlock" Property="Text" Value="JEJEJE"/>--><!--
                            <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.MouseOver.Foreground}"/>
                        </DataTrigger>-->
                        <Trigger  Property="IsMouseOver" Value="True">

                            <Setter TargetName="fillRect" Property="Opacity" Value="0.7"      />

                            <!--<Setter Property="FontWeight" Value="SemiBold"/>-->
                            <!--<Setter TargetName="TextBlock" Property="Text" Value="JEJEJE"/>-->
                            <Setter Property="Foreground" Value="{DynamicResource CategoriesTabControl.Static.Foreground}"/>
                        </Trigger>

                        <!--<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}, UpdateSourceTrigger=PropertyChanged}" Value="False">
                            <Setter TargetName="icon" Property="Text" Value="QQWWQQ"/>
                            -->
                        <!--<Setter TargetName="HideSecondLevelNavItem"  Property="IsSelected" Value="False"/>-->
                        <!--
                        </DataTrigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    
    <Style x:Key="CategoriesControlStyle" TargetType="{x:Type ListBox}">
        <!--<Setter Property="SelectedIndex" Value="0"/>-->
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabControl.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CategoriesTabControl.Static.Foreground}"/>
       
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CollapseCategoriesTabControl">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="itemsHost">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ExpandCategoriesTabControl">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="itemsHost">
                                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}">
                        <StackPanel x:Name="itemsHost"  IsItemsHost="True" Width="180" HorizontalAlignment="Left"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsRootNavBarCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasWindow}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CollapseCategoriesTabControl}"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExpandCategoriesTabControl}"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style TargetType="ProgressBar" x:Key="ProgressBarStyle">
        <Setter Property="Foreground"
                Value="{DynamicResource Accent}" />
        <Setter Property="Background"
                Value="{DynamicResource ProgressBackground}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <uiControls:RelativeAnimatingContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <uiControls:RelativeAnimatingContentControl.Resources>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseOut"/>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseIn"/>
                        </uiControls:RelativeAnimatingContentControl.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever" Duration="00:00:04.4">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="X" Storyboard.TargetName="R1TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="X" Storyboard.TargetName="R2TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="X" Storyboard.TargetName="R3TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="X" Storyboard.TargetName="R4TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="X" Storyboard.TargetName="R5TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R2">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R3">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R4">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R5">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Root">
                            <Border x:Name="PART_Track"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                            <Grid x:Name="ProgressBarRootGrid">
                                <Grid x:Name="IndeterminateRoot" Visibility="Collapsed" ClipToBounds="True">
                                    <Grid HorizontalAlignment="Left">
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R1" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R1TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R2" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R2TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R3" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R3TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R4" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R4TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R5" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R5TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="DeterminateRoot">
                                    <Border x:Name="PART_Indicator"
                                        Background="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </uiControls:RelativeAnimatingContentControl>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="IndeterminateRoot" Value="Visible" />
                            <Setter Property="Visibility" TargetName="DeterminateRoot" Value="Collapsed" />
                            <Setter Property="Background" TargetName="PART_Track" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <Style TargetType="uiControls:AtlasMainPage">
        <!--<Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}" />-->
        <!--<Setter Property="FontSize" Value="{DynamicResource Default.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Default.Foreground}" />-->
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="{DynamicResource Window.Default.Background}"/>
        <Setter Property="Opacity" Value="0"/>
        <!--<Setter Property="BorderBrush" Value="{DynamicResource Window.Default.BorderBrush}"/>-->


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uiControls:AtlasMainPage">
                    <!--<Border x:Name="Xborder" Background="{DynamicResource StatusBar.Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True">-->

                    <Grid>
                        <!--<uiControls:AtlasMediaElement Source="C:\Users\Enrike\Desktop\Atlas\Solution\_Build\Media\video\Loging page ATLAS 1.f4v" Stretch="UniformToFill"></uiControls:AtlasMediaElement>-->
                        <!--<Rectangle Name="WindowBackgroundContent" >
                            <Rectangle.Fill>
                                <ImageBrush Opacity="1" ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                            </Rectangle.Fill>
                        </Rectangle>-->
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid>
                                <Grid.RowDefinitions>

                                    <RowDefinition Name="ContextLeftRow" Height="*"></RowDefinition>
                                    <RowDefinition Height="35"></RowDefinition>
                                </Grid.RowDefinitions>

                                <Grid Name="ContextGrid">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Setter Property="Height" Value="0"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=ContextToggleButton,Path=IsChecked}" Value="True">
                                                    <Setter Property="Height" Value="{Binding ElementName=ContextLeftRow,Path=Height}"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Grid.Style>
                                <Rectangle Name="LeftBackgroundContent" Opacity="0.5" Fill="#000000" >
                                    <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                                </Rectangle>

                                <!-- Left navigation bar -->
                                <DockPanel x:Name="dockPanel" Width="180" HorizontalAlignment="Left" Grid.RowSpan="2"
                                               Background="Transparent"
                                               Panel.ZIndex="1000">

                                        <!-- Logo button -->
                                        <Border x:Name="logoButton"  DockPanel.Dock="Top" Height="35" Background="Transparent" WindowChrome.IsHitTestVisibleInChrome="True" >

                                            <Grid>

                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="50"/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Rectangle  Opacity="0.3" Fill="#000000" Grid.ColumnSpan="3">
                                                    <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                                                </Rectangle>

                                                <DockPanel   Grid.ColumnSpan="3">

                                                    <TextBlock Text="{x:Static properties:Resources.ContextMenu}" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource CategoriesTabItem.Selected.Foreground}"></TextBlock>

                                                    <!--<Path  Width="24" Height="24" Stretch="Uniform" Fill="{DynamicResource LogoButton.Static.Foreground}"
                                                      Data="M23.79661,7.3220339 L8.7457627,32.745763 C8.7457627,32.745763 20.967638,41.353691 39.457627,32.949153 40.016949,32.694916 23.79661,7.3220339 23.79661,7.3220339 z M24.147993,17.112616 L18.539078,26.748444 16.296807,25.750439 24.147993,12.654248 31.889651,25.764187 29.325452,26.748444 z M21.684987,27.079261 L24.028953,22.958628 26.296647,26.943419 C24.264925,27.391584 21.684987,27.079261 21.684987,27.079261 z M14.400201,28.659537 L16.947083,29.838223 15.307045,32.3936 12.693201,31.380069 z M20.509176,30.588291 C20.509176,30.588291 24.455545,30.870772 28.060024,30.512021 L29.33121,32.851005 C29.33121,32.851005 25.203222,34.132012 18.932905,33.003547 z M31.119327,29.811227 L32.390514,32.093841 35.034582,31.229434 33.788819,28.768854 z" />-->
                                                    <!--<Path x:Name="path" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  Data="F1 M 38,15.8333C 50.2423,15.8333 60.1667,25.7577 60.1667,38C 60.1667,50.2423 50.2423,60.1667 38,60.1667C 25.7577,60.1667 15.8333,50.2423 15.8333,38C 15.8333,25.7577 25.7577,15.8333 38,15.8333 Z M 38,19C 37.0389,19 36.0944,19.0714 35.1716,19.2091C 34.9741,19.6392 34.8333,20.1113 34.8333,20.5833C 34.8333,22.1667 33.25,19 31.6667,22.1667C 30.0833,25.3333 31.6667,22.1667 31.6667,25.3333C 31.6667,26.9167 29.3752,25.771 30.0833,26.125C 31.6667,26.9167 31.6667,26.9167 30.0833,28.5C 30.0833,28.5 26.9167,26.9167 26.9167,28.5C 26.9167,30.0833 25.3333,30.0833 23.75,30.0833C 22.1667,30.0833 23.75,33.25 22.1667,33.25C 20.9493,33.25 21.6039,31.3779 20.5322,30.5126C 20.1248,31.4618 19.7925,32.4508 19.5428,33.4722C 20.6099,34.4283 20.7886,38.2053 22.1667,39.5834C 23.75,38 23.75,39.5834 25.3333,39.5834C 26.9167,39.5834 26.9167,39.5834 27.7083,41.1667C 29.2917,41.1667 30.0833,42.75 31.6667,44.3333C 33.25,45.9167 36.4166,45.9167 36.4166,47.5C 36.4166,49.0833 34.8333,47.5 34.8333,50.6667C 34.8333,52.25 34.8333,52.25 33.25,52.25C 32.2531,52.25 31.2561,54.1331 30.6544,55.528C 32.9142,56.4761 35.3959,57 38,57C 43.3179,57 48.1255,54.8153 51.5742,51.2944L 50.6666,49.4792C 50.6666,49.4792 52.6458,46.3125 51.0625,44.7292C 49.4791,43.1459 49.4791,41.5625 49.4791,41.5625C 49.4791,41.5625 46.3125,44.7292 44.7291,43.1458C 43.1458,41.5625 43.1458,43.1458 41.5625,39.9792C 39.9791,36.8125 43.1458,35.2292 43.1458,35.2292C 43.1458,35.2292 43.1458,32.0625 44.7291,32.0625C 46.3125,32.0625 47.8958,28.8959 51.0625,32.0625C 51.0625,32.0625 52.8924,30.8426 55.4814,30.5444C 54.6693,28.6428 53.5561,26.9006 52.2016,25.3777C 51.9172,25.5822 51.545,25.7292 51.0625,25.7292C 49.4791,25.7292 52.6458,28.8959 51.0625,28.8959C 49.4791,28.8959 49.4791,27.3125 47.8958,27.3125C 46.3125,27.3125 46.3125,28.8959 44.7291,30.4792C 43.1458,32.0625 44.7291,30.4792 43.1458,28.8959C 41.5625,27.3125 46.3125,28.8959 44.7291,27.3125C 43.1458,25.7292 46.3125,25.7292 46.3125,24.1459C 46.3125,22.904 48.2605,22.6362 49.1008,22.5784C 48.187,21.9195 47.2124,21.3398 46.3125,20.9792C 47.8958,22.5625 44.7291,24.1459 43.1458,24.1459C 41.6585,24.1459 42.9653,21.3518 43.1294,19.7005C 41.4977,19.2441 39.7773,19 38,19 Z M 19,38C 19,43.5885 21.4127,48.6134 25.2533,52.09L 23.75,49.0833C 22.1667,49.0833 21.375,45.5209 21.375,43.9375C 21.375,42.6669 20.8651,41.6512 21.4821,40.4812C 19.2482,38.2376 20.5833,39.454 20.5833,38C 20.5833,37.2463 19.8657,36.4925 19.1137,35.9096C 19.0385,36.5961 19,37.2935 19,38 Z "
                                                  Fill="{DynamicResource LogoButton.Static.Foreground}" StrokeThickness="0"
                                                  Stretch="Uniform">

                                                    </Path>-->
                                                </DockPanel>

                                                <!--<StackPanel x:Name="stackPanel" Grid.ColumnSpan="2" Orientation="Horizontal" 
                                                        Grid.Column="1" VerticalAlignment="Center" TextElement.FontSize="20">
                                                    <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="at" Foreground="{DynamicResource LogoButton.Static.Foreground}"
                                                           FontFamily="Source Sans Pro Black"/>
                                                    <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="las" Margin="0"
                                                           FontFamily="Source Sans Pro Light"
                                                             Foreground="{DynamicResource LogoButton.Static.Foreground}"/>
                                                </StackPanel>-->
                                                <Rectangle  Opacity="0.3" Height="1" Fill="{DynamicResource CategoriesTabItem.Selected.Foreground}" Grid.ColumnSpan="3" VerticalAlignment="Bottom">
                                                    <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                                                </Rectangle>
                                            </Grid>
                                        </Border>


                                        <ListBox x:Name="categories" 
                                                 Style="{StaticResource CategoriesControlStyle}"  >
                                        <ListBox.Resources>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                                    <Setter Property="Background" Value="Transparent" />
                                                    <Setter Property="BorderBrush"
                                                      Value="Transparent"/>
                                                    <Setter Property="BorderThickness"
                                                           Value="1"/>
                                                    <Setter Property="Margin"
                                                                          Value="0"/>
                                                       <Setter Property="Height"
                                                                   Value="35"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.Static.Foreground}"/>
                                                    <Setter Property="Padding"
                                                                  Value="5,2,5,2"/>
                                                    <Setter Property="HorizontalContentAlignment"
                                                      Value="Stretch"/>
                                                    <Setter Property="VerticalContentAlignment"
                                                                           Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                                <Grid Background="{TemplateBinding Background}">
                                                                    <Border Name="Selection" Visibility="Collapsed" />
                                                                    <!-- This is used when GridView is put inside the ListView -->
                                                                    <GridViewRowPresenter Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                                                    <!-- This is used for ListView that does not use GridView -->
                                                                    <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      Visibility="Collapsed"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                                                                </Grid>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                                                                        <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                                                                    </Trigger>
                                                                    <Trigger Property="IsMouseOver" Value="true">
                                                                        <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                                                                        <Setter TargetName="Selection" Property="Background" Value="{DynamicResource SectionComboBox.Selected.Background}"/>
                                                                        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabControl.MouseOver.Foreground}" />
                                                                    </Trigger>
                                                                    <Trigger Property="IsSelected" Value="true">
                                                                        <!--<Setter TargetName="Selection" Property="Visibility" Value="Visible"/>-->
                                                                        <!--<Setter TargetName="Selection" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>-->
                                                                        <!--<Setter Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>-->
                                                                        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabControl.Selected.Foreground}" />
                                                                        <!--<Setter Property="Background" Value="Transparent"></Setter>-->
                                                                    </Trigger>
                                                                    <Trigger Property="IsEnabled" Value="false">
                                                                        <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </ListBox.Resources>
                                            <ListBox.Items>


                                                <Border HorizontalAlignment="Center"  ToolTip="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Intranet_ToolTip}">
                                                   
                                                    <!--<StackPanel VerticalAlignment="Center" Orientation="Horizontal">-->
                                                        <!--<Path  Style="{StaticResource IconStyle}" Margin="10,0" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" 
                                                         Data="F1 M 38,19L 57,28.5L 57,47.5L 38,57L 19,47.5L 19,28.5L 38,19 Z M 22.1667,30.0833L 22.1667,45.9167L 25.3333,47.5L 36.4167,53.0417L 36.4167,37.2083L 22.1667,30.0833 Z M 50.6666,47.5L 53.8333,45.9167L 53.8333,30.0833L 39.5833,37.2083L 39.5833,53.0417L 50.6666,47.5 Z M 38,22.1667L 25.3333,28.5L 38,34.8334L 50.6666,28.5L 38,22.1667 Z "/>-->
                                                    <TextBlock  HorizontalAlignment="Center" Text="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Intranet}" Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" VerticalAlignment="Center" />
                                                    <!--</StackPanel>-->
                                                </Border>
                                                <Border HorizontalAlignment="Center"  ToolTip="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Mail_ToolTip}">

                                                    <!--<StackPanel VerticalAlignment="Center" Orientation="Horizontal">-->
                                                        <!--<Path  Style="{StaticResource IconStyle}" Margin="10,0" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" 
                                                         Data="F1 M 38,15.8334L 58.5833,23.75L 58.5833,30.0833L 38,38L 17.4167,30.0833L 17.4166,23.75L 38,15.8334 Z M 58.5833,44.3333L 58.5833,52.25L 38,60.1667L 17.4167,52.25L 17.4167,44.3333L 21.5333,45.9167L 38,52.25L 54.4667,45.9167L 58.5833,44.3333 Z M 58.5833,33.25L 58.5833,41.1667L 38,49.0833L 17.4167,41.1667L 17.4167,33.25L 21.5333,34.8333L 38,41.1667L 54.4666,34.8333L 58.5833,33.25 Z "/>-->
                                                    <TextBlock HorizontalAlignment="Center" Text="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Mail}" Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" VerticalAlignment="Center" />
                                                    <!--</StackPanel>-->
                                                </Border>
                                                <Border ToolTip="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Chat_ToolTip}"  HorizontalAlignment="Center">

                                                    <!--<StackPanel VerticalAlignment="Center" Orientation="Horizontal">-->
                                                        <!--<Path  Style="{StaticResource IconStyle}" Margin="10,0" Fill="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" 
                                                         Data="F1 M 38,15.8334L 58.5833,23.75L 58.5833,30.0833L 38,38L 17.4167,30.0833L 17.4166,23.75L 38,15.8334 Z M 58.5833,44.3333L 58.5833,52.25L 38,60.1667L 17.4167,52.25L 17.4167,44.3333L 21.5333,45.9167L 38,52.25L 54.4667,45.9167L 58.5833,44.3333 Z M 58.5833,33.25L 58.5833,41.1667L 38,49.0833L 17.4167,41.1667L 17.4167,33.25L 21.5333,34.8333L 38,41.1667L 54.4666,34.8333L 58.5833,33.25 Z "/>-->
                                                        <TextBlock HorizontalAlignment="Center" Text="{Resx ResxName=CompanyName.Atlas.UIControls.Properties.Resources, Key=Chat}"
                                                                            Foreground="{Binding Foreground,RelativeSource={RelativeSource AncestorType=ListBoxItem}}" VerticalAlignment="Center" />
                                                    <!--</StackPanel>-->
                                                </Border>
                                              
                                        </ListBox.Items>

                                    </ListBox>

                              
                                </DockPanel>
                                </Grid>
                                <!-- Atlas Context button -->
                                <!--<DockPanel Dock="Bottom" HorizontalAlignment="Left"  >-->
                                <Grid  Grid.Row="1">
                                    <Rectangle Name="LeftBackgroundContent2" Opacity="0.5" Fill="#000000" >
                                        <!--<Rectangle.Fill>
                                        <ImageBrush  ImageSource="/Atlas.UIControls;component/Assets/Media/Img/LOGING PAGE 11.png" Stretch="UniformToFill" />
                                    </Rectangle.Fill>-->
                                    </Rectangle>
                                    <ToggleButton Name="ContextToggleButton"  IsEnabled="True"   DataContext="{Binding ElementName=optionalNavigationContent,Path=Content}"
                                               Foreground="{DynamicResource AtlasContextButton.Disabled.Foreground}"    >
                                        <ToggleButton.Template >
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border   >
                                                    <Grid>
                                                        <!--<visuals:ConfirmLayout x:Name="AtlasContextMenu">
                                                        
                                                        </visuals:ConfirmLayout>-->
                                                        <!--<uiControls:AtlasContextMenu x:Name="AtlasContextMenu" DataContext="{TemplateBinding DataContext}"  Width="{Binding RelativeSource={RelativeSource AncestorType=Border,AncestorLevel=2},Path=ActualWidth}">
                                                            
                                                            -->
                                                        <!--<Button Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasContextMenu}, Path=ExportCommand}">
                                                                                <TextBlock Text="Exportar"></TextBlock>
                                                                            </Button>-->
                                                        <!--
                                                        </uiControls:AtlasContextMenu>-->
                                                        <!--<Rectangle Name="ContextBackgroundContent" Opacity="0.05" Fill="#000000" >

                                                        </Rectangle>-->

                                                        <ContentControl Width="50"  HorizontalAlignment="Left">
                                                            <Grid Width="35" >
                                                                <Ellipse x:Name="Ellipse4"  Fill="Black" Width="Auto" Opacity="0.01" Height="Auto" Stroke="Transparent" StrokeThickness="1" />
                                                                <StackPanel VerticalAlignment="Center" >



                                                                    <Ellipse x:Name="Ellipse1" Fill="{TemplateBinding Foreground}" Height="8" Stroke="{x:Null}" Width="8" Margin="0,0,0,3"  />
                                                                    <Ellipse x:Name="Ellipse2" Fill="{TemplateBinding Foreground}" Height="6" Stroke="{x:Null}" Width="6"  Margin="1,0,0,3" />
                                                                    <Ellipse x:Name="Ellipse3" Fill="{TemplateBinding Foreground}" Height="4" Stroke="{x:Null}" Width="4" Margin="2,0,0,0"  />


                                                                </StackPanel>

                                                            </Grid>
                                                        </ContentControl>
                                                    </Grid>
                                                </Border>
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                        <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                        <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                        <!--<Setter TargetName="AtlasContextMenu" Property="IsOpen" Value="True"></Setter>-->
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                        <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                        <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>

                                        </ToggleButton.Template>
                                    </ToggleButton>

                                </Grid>
                                               <!--</DockPanel>-->
                            </Grid>
                            <Grid Grid.Column="1" Grid.ColumnSpan="2">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="35"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="35"></RowDefinition>
                                </Grid.RowDefinitions>
                            <Grid Grid.Row="2">
                                    <Rectangle Name="BottomBackgroundContent" Opacity=".5" Fill="#000000"  >
                                    </Rectangle>
                                    <StatusBar  Background="Transparent" 
                                                  Foreground="{DynamicResource StatusBar.Foreground}"  FocusVisualStyle="{x:Null}" >
                                        <Grid >
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                        <DockPanel >
                                                <TextBlock Text="{Binding StatusText}" DockPanel.Dock="Left" Width="370"  VerticalAlignment="Center"
                                                           FontSize="{DynamicResource StatusBar.FontSize}">
                                               
                                            </TextBlock>
                                           
                                           
                                             
                                        </DockPanel>
                                            
                                            
                                            <ContentControl Grid.Column="1" Padding="10" Content="{TemplateBinding StatusBar}" FocusVisualStyle="{x:Null}"/>

                                          
                                            
                                        </Grid>


                                    </StatusBar>
                                    
                               
                            </Grid>
                                <!-- Bottom status bar-->
                                
                                <!--<ContentControl Content="{TemplateBinding DefaultContent}" FocusVisualStyle="{x:Null}"/>-->
                                <Grid x:Name="ContentGrid"  Grid.Row="1">
                                    <ContentPresenter   TextElement.FontFamily="{DynamicResource Default.FontFamily}"
                                                              TextElement.FontSize="{DynamicResource Default.FontSize}"
                                                              TextElement.Foreground="{DynamicResource Default.Foreground}"
                                                              x:Name="content" Content="{Binding ElementName=categories,Path=SelectedItem.Content,Mode=OneWay}"/>
                                </Grid>
                      </Grid>
                          
                                <Grid Grid.Column="2">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"></RowDefinition>
                                        <RowDefinition Height="Auto"></RowDefinition>
                                </Grid.RowDefinitions>
                                    <!--<Border BorderThickness="1" BorderBrush="Yellow">-->
                                <uiControls:AtlasModuleContainer IsEnabled="{Binding ElementName=AtlasActivationControl,Path=IsActivated,Mode=OneWay}" Margin="0,0,-26,0" />
                                <!--</Border>-->
                                <uiControls:AtlasActivationControl Grid.Row="1" x:Name="AtlasActivationControl" HorizontalAlignment="Right"  Height="35"></uiControls:AtlasActivationControl>

                            </Grid>
                           
                        </Grid>
                    </Grid>


                    <!--</Border>-->

                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding ViewState,RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow}}" Value="{x:Static uiControls:AtlasViewState.MainPage}">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                            <DataTrigger.EnterActions>
                               <BeginStoryboard Storyboard="{StaticResource Appear}"></BeginStoryboard>
                               
                           </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Disappear}"></BeginStoryboard>
                            </DataTrigger.ExitActions>
                            
                        </DataTrigger>

                      

                        <EventTrigger RoutedEvent="uiControls:AtlasMainPage.RootNavBarCollapsed">
                            <BeginStoryboard Storyboard="{StaticResource CollapseNavBar}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="uiControls:AtlasMainPage.RootNavBarExpanded">
                            <BeginStoryboard Storyboard="{StaticResource ExpandNavBar}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="uiControls:AtlasMainPage.ContentChanged">
                            <!--<BeginStoryboard Storyboard="{StaticResource FadeOut}"/>-->
                            <BeginStoryboard Storyboard="{StaticResource SlideIn}"/>
                        </EventTrigger>
                       
                        <!--<Trigger SourceName="sectionComboBox" Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="OptionalNavigationVisibility" Value="Collapsed"/>
                        </Trigger>-->

                        <Trigger SourceName="categories" Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="OptionalNavigationVisibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>