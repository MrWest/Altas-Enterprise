<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:views="clr-namespace:CompanyName.Atlas.UIControls.Views">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../Assets/Button.xaml"/>
        <ResourceDictionary Source="../Assets/Converters.xaml"/>
        <ResourceDictionary Source="../Assets/Menu.xaml"/>
        <ResourceDictionary Source="FirstLevelNavItem.xaml"/>
        <ResourceDictionary Source="SecondLevelNavItem.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Storyboard x:Key="SlideIn">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="0.6"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="ContentGrid">
            <EasingThicknessKeyFrame KeyTime="0" Value="-30,0,30,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="SlideOut" >
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  Storyboard.TargetName="ContentGrid">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.1" Value="30,0,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>

    </Storyboard>
    <Storyboard x:Key="FadeOut" >
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)"  Storyboard.TargetName="ContentGrid">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
      
    </Storyboard>

    <Storyboard x:Key="Appear">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>

        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)"  >
            <EasingThicknessKeyFrame KeyTime="0" Value="-30,0,30,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.3" Value="0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
        
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Disappear">

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.20" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-2,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>

        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        
        
    </Storyboard>
    <!-- Animation that collapses the left navigation bar -->
    <Storyboard x:Key="CollapseNavBar">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-2,0,0">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
        
        
        <!--    <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="stackPanel">
            <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-8,0,0"/>
        </ThicknessAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="toggleButton">
            <EasingThicknessKeyFrame KeyTime="0:0:0.133" Value="0,0,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,0,0,3">
                <EasingThicknessKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingThicknessKeyFrame.EasingFunction>
            </EasingThicknessKeyFrame>
        </ThicknessAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="30"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <!-- Animation that expands the left navigation bar -->
    <Storyboard x:Key="ExpandNavBar">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180"/>
        </DoubleAnimationUsingKeyFrames>
        <!--  <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="path">
            <EasingThicknessKeyFrame KeyTime="0" Value="0,-8,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </ThicknessAnimationUsingKeyFrames>
        <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="stackPanel">
            <EasingThicknessKeyFrame KeyTime="0" Value="0,-8,0,0"/>
            <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </ThicknessAnimationUsingKeyFrames>
     <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="30"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="26"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="80"/>
        </DoubleAnimationUsingKeyFrames>-->
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Opacity)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="toggleButton">
            <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="180"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="categories">
            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="HelpFadeIn" >
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1"/>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HelpFadeOut">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)">
            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>

        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HelpExpandStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" >
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="620">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="HelpCollapseStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" >
            <EasingDoubleKeyFrame KeyTime="0" Value="620"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <!-- Style of the sections combobox toggle button, the little arrow at the right of the combo -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="IsChecked" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot" SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Border x:Name="splitBorder" Width="30" SnapsToDevicePixels="true" Margin="0"
                                HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <Path x:Name="path1" Data="M3.2626522E-54,7.125 L6.7916667,0 8.75,2.0625 3.8021715,7.2580704 8.75,12.25 6.7083333,14.375 z" Fill="{TemplateBinding Foreground}" StrokeThickness="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                     Value="True">
                            <Setter TargetName="path1" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style of the sections combobox items -->
    <Style x:Key="SectionControlStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="#252526"/>
        <Setter Property="Foreground" Value="{DynamicResource SectionComboBox.Static.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="BorderThickness" Value="0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource SectionComboBox.Static.Foreground}"></Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    <Setter Property="Background" Value="#252526"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Padding" Value="0"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Foreground" Value="{DynamicResource SectionComboBox.Static.Foreground}"/>
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                <ControlTemplate.Resources>
                                    <Storyboard x:Key="ExpandSectionComboxItem">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Bd">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="CollapseSectionComboBoxItem">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Bd">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </ControlTemplate.Resources>
                                <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true" HorizontalAlignment="Left" Width="180"
                                        Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}">
                                    <ContentPresenter/>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource SectionComboBox.MouseOver.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource  SectionComboBox.Selected.Background}"/>
                                    </Trigger>
                                   
                                    <DataTrigger Binding="{Binding IsRootNavCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasModuleView}}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource CollapseSectionComboBoxItem}"/>
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource ExpandSectionComboxItem}"/>
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CollapsedSectionComboBox">
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="toggleButton">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="-20,0,0,0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0,-8,0,0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="templateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ItemsPresenter">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ExpandSectionComboBox">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="templateRoot">
                                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Control.Padding)" Storyboard.TargetName="toggleButton">
                                <EasingThicknessKeyFrame KeyTime="0" Value="-20,0,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="contentPresenter">
                                <EasingThicknessKeyFrame KeyTime="0" Value="0,-8,0,0"/>
                                <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="0">
                                    <EasingThicknessKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingThicknessKeyFrame.EasingFunction>
                                </EasingThicknessKeyFrame>
                            </ThicknessAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ItemsPresenter">
                                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                     <Grid x:Name="templateRoot"  SnapsToDevicePixels="true" Width="180" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="13"/>
                        </Grid.ColumnDefinitions>
                        <!--  <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>  -->
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" 
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                               Margin="0" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom">
                            <Grid x:Name="shadow" MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                <Border x:Name="dropDownBorder" BorderThickness="0"
                                        Background="{DynamicResource SectionComboBox.Static.Background}">
                                    <ScrollViewer x:Name="DropDownScrollViewer" 
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Width="180"/>
                                            
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>
                        <ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="{TemplateBinding Background}" 
                                      Grid.ColumnSpan="2" 
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}"/>
                          <ContentPresenter x:Name="contentPresenter" 
            			                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
            			                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
            			                  Content="{TemplateBinding SelectionBoxItem}"
            			                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
            			                  IsHitTestVisible="false" Height="{TemplateBinding Height}"
            			                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" MaxWidth="150" Grid.ColumnSpan="2"
                                          HorizontalAlignment="Left"/>
                       
                        <!--  <Rectangle Fill="{TemplateBinding Foreground}" Margin="15,0" HorizontalAlignment="Left" Grid.Column="0"  Grid.Row="1" Height="1" Width="35" ></Rectangle>  -->
                 
                    </Grid>
                    </Border>
                        <ControlTemplate.Triggers>
                        <!--  <Trigger Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="Background"  Value="Transparent"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding IsRootNavBarCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasModuleView}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CollapsedSectionComboBox}"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExpandSectionComboBox}"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>


    <!-- Style of the categories list (is a tab control actually) -->
    <!-- Style of the categories list (is a tab control actually) -->
    <Style x:Key="CategoriesControlStyle" TargetType="{x:Type ListBox}">
        <Setter Property="SelectedIndex" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabControl.Static.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CategoriesTabControl.Static.Foreground}"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                    <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.Static.Foreground}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    <Setter Property="VerticalContentAlignment" Value="Stretch"/>
                    <Setter Property="Height" Value="35"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate  TargetType="{x:Type uiControls:SecondLevelNavItem}">
                                <ControlTemplate.Resources>
                                    <!--<Storyboard x:Key="ShowSelectionMarker">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selectionMarker">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="1">
                                                <EasingDoubleKeyFrame.EasingFunction>
                                                    <CubicEase EasingMode="EaseOut"/>
                                                </EasingDoubleKeyFrame.EasingFunction>
                                            </EasingDoubleKeyFrame>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                    <Storyboard x:Key="HideSelectionMarker">
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="selectionMarker">
                                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.05" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>-->
                                    <Style x:Key="IconStyle" TargetType="Path">
                                        <Setter Property="Width" Value="24"/>
                                        <Setter Property="Height" Value="24"/>
                                        <Setter Property="Fill" Value="{DynamicResource CategoriesTabItem.Static.Foreground}"/>
                                        <Setter Property="Stretch" Value="Uniform"/>
                                    </Style>
                                </ControlTemplate.Resources>
                                <Border x:Name="mainBorder" BorderBrush="{TemplateBinding BorderBrush}" 
                                        Background="{TemplateBinding Background}" Height="{TemplateBinding Height}">
                                    <DockPanel>
                                        <!--<Path x:Name="selectionMarker" DockPanel.Dock="Right" Height="10" Width="5" StrokeThickness="0"
                                              Fill="{DynamicResource CategoriesTabItem.Static.Background}" 
                                              Data="M0,0L5,5 0,10z" Margin="0,0,-4,0" Opacity="0"/>-->
                                        <StackPanel x:Name="contentPresenter" VerticalAlignment="Center" Orientation="Horizontal" Width="180">
                                            <DockPanel DataContext="{TemplateBinding Icon}">
                                                <Path Margin="13,0" Data="{Binding Data}" Style="{StaticResource IconStyle}" Fill="{TemplateBinding Foreground}"/>
                                            </DockPanel>
                                            
                                            <TextBlock x:Name="TextBlock" Text="{TemplateBinding Text}"  Foreground="{TemplateBinding Foreground}" FontWeight="{TemplateBinding FontWeight}" VerticalAlignment="Center"/>
                                            <!--<UIControls:SecondLevelNavItem Visibility="Collapsed" x:Name="HideSecondLevelNavItem" Text="{TemplateBinding Text}" DefaultOptionalUri="{TemplateBinding DefaultOptionalUri}" OptionalUri="{TemplateBinding OptionalUri}"></UIControls:SecondLevelNavItem>-->
                                            <!--<TextBlock x:Name="optionalTextBlock" Text="{TemplateBinding OptionalUri}"  Visibility="Collapsed"/>-->
                                        </StackPanel>
                                        <!--<ContentPresenter x:Name="contentPresenter"
                                                          FocusVisualStyle="{x:Null}" RecognizesAccessKey="True"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                          VerticalAlignment="Center" Width="180"/>-->
                                    </DockPanel>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected" Value="True">
                                        <!--<Trigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource HideSelectionMarker}"/>
                                        </Trigger.ExitActions>
                                        <Trigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource ShowSelectionMarker}"/>
                                        </Trigger.EnterActions>-->
                                        <Setter Property="BorderBrush" TargetName="mainBorder"
                                                Value="{DynamicResource CategoriesTabItem.Selected.Background}"/>
                                        <Setter Property="FontWeight" 
                                                Value="SemiBold"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="BorderBrush" Value="{DynamicResource CategoriesTabItem.MouseOver.Background}"
                                                TargetName="mainBorder"></Setter>
                                         <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.MouseOver.Background}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                          <!--<Setter Property="Background" Value="{DynamicResource CategoriesTabItem.Selected.Background}"
                                                TargetName="mainBorder"/>-->
                                        <Setter Property="FontWeight" Value="SemiBold"/>
                                        <Setter Property="Foreground" Value="{DynamicResource CategoriesTabItem.Selected.Foreground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="CollapseCategoriesTabControl">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="itemsHost">
                                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="ExpandCategoriesTabControl">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="itemsHost">
                                <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                    <EasingDoubleKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingDoubleKeyFrame.EasingFunction>
                                </EasingDoubleKeyFrame>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border Background="{TemplateBinding Background}">
                        <StackPanel x:Name="itemsHost"  IsItemsHost="True" Width="180" HorizontalAlignment="Left"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsRootNavBarCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasWindow}}" Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource CollapseCategoriesTabControl}"/>
                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource ExpandCategoriesTabControl}"/>
                            </DataTrigger.ExitActions>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
 
    </Style>
    <Style x:Key="ContentViewStyle" TargetType="ContentPresenter">
        <Style.Triggers>
            <Trigger Property="DataContext" Value="{x:Null}">
                <Setter Property="Visibility" Value="Hidden"></Setter>
                <Setter Property="Content" Value="Hidden"></Setter>
            </Trigger>
           
        </Style.Triggers>
    </Style>
    <Style x:Key="DefaultContentViewStyle" TargetType="ContentControl">
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=content,Path=Visibility}" Value="{x:Static Visibility.Visible}">
                <Setter Property="Visibility" Value="Hidden"></Setter>
                <!--<Setter Property="Content" Value="Hidden"></Setter>-->
            </DataTrigger>

        </Style.Triggers>
    </Style>

    <Style TargetType="ProgressBar" x:Key="ProgressBarStyle">
        <Setter Property="Foreground"
                Value="{DynamicResource Accent}" />
        <Setter Property="Background"
                Value="{DynamicResource ProgressBackground}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <uiControls:RelativeAnimatingContentControl HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                        <uiControls:RelativeAnimatingContentControl.Resources>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseOut"/>
                            <ExponentialEase EasingMode="EaseOut" Exponent="1" x:Key="ProgressBarEaseIn"/>
                        </uiControls:RelativeAnimatingContentControl.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard RepeatBehavior="Forever" Duration="00:00:04.4">
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="X" Storyboard.TargetName="R1TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="X" Storyboard.TargetName="R2TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="X" Storyboard.TargetName="R3TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="X" Storyboard.TargetName="R4TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="X" Storyboard.TargetName="R5TT">
                                            <LinearDoubleKeyFrame KeyTime="00:00:00.0" Value="0.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:00.5" Value="33.1" EasingFunction="{StaticResource ProgressBarEaseOut}"/>
                                            <LinearDoubleKeyFrame KeyTime="00:00:02.0" Value="66.1"/>
                                            <EasingDoubleKeyFrame KeyTime="00:00:02.5" Value="100.1" EasingFunction="{StaticResource ProgressBarEaseIn}"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R1">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.2" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R2">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.4" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R3">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.6" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R4">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00.8" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="R5">
                                            <DiscreteDoubleKeyFrame KeyTime="0" Value="1"/>
                                            <DiscreteDoubleKeyFrame KeyTime="00:00:02.5" Value="0"/>
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="Root">
                            <Border x:Name="PART_Track"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                            <Grid x:Name="ProgressBarRootGrid">
                                <Grid x:Name="IndeterminateRoot" Visibility="Collapsed" ClipToBounds="True">
                                    <Grid HorizontalAlignment="Left">
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R1" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R1TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R2" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R2TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R3" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R3TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R4" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R4TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                        <Rectangle Fill="{TemplateBinding Foreground}" Height="4" IsHitTestVisible="False" Width="4" x:Name="R5" Opacity="0">
                                            <Rectangle.RenderTransform>
                                                <TranslateTransform x:Name="R5TT"/>
                                            </Rectangle.RenderTransform>
                                        </Rectangle>
                                    </Grid>
                                </Grid>
                                <Grid x:Name="DeterminateRoot">
                                    <Border x:Name="PART_Indicator"
                                        Background="{TemplateBinding Foreground}"
                                        HorizontalAlignment="Left" />
                                </Grid>
                            </Grid>
                        </Grid>
                    </uiControls:RelativeAnimatingContentControl>

                    <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                            <Setter Property="LayoutTransform" TargetName="Root">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                            <Setter Property="Visibility" TargetName="IndeterminateRoot" Value="Visible" />
                            <Setter Property="Visibility" TargetName="DeterminateRoot" Value="Collapsed" />
                            <Setter Property="Background" TargetName="PART_Track" Value="Transparent" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

<Style TargetType="uiControls:AtlasModuleView">
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource Default.Foreground}" />
        <!--<Setter Property="Width" Value="800" />
        <Setter Property="Height" Value="640" />
        <Setter Property="MinWidth" Value="320" />
        <Setter Property="MinHeight" Value="320" />-->
        <!--<Setter Property="ResizeMode" Value="CanResizeWithGrip" />-->
        <Setter Property="UseLayoutRounding" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Background" Value="{DynamicResource Window.Default.Background}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource Window.Default.BorderBrush}"/>
        <Setter Property="OptionalNavigationVisibility" Value="Visible"/>
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="IsSomeModuleLoaded" Value="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow},Mode=TwoWay,Path=IsSomeModuleLoaded}"/>
        <!--<Setter Property="Shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <Shell:WindowChrome CornerRadius="0" GlassFrameThickness="1" UseAeroCaptionButtons="False" />
            </Setter.Value>
        </Setter>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uiControls:AtlasModuleView">
                   
                    <Border x:Name="border" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" UseLayoutRounding="True" SnapsToDevicePixels="True">
                        <AdornerDecorator>

                            <Grid x:Name="LayoutRoot">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>


                                <!-- Left navigation bar -->
                                <DockPanel x:Name="dockPanel" Width="180" HorizontalAlignment="Left" Grid.RowSpan="2"
                                           Background="{DynamicResource CategoriesTabControl.Static.Background}"
                                           Panel.ZIndex="1000">

                                    <!-- Logo button -->
                                    <Button x:Name="logoButton" DockPanel.Dock="Top" Height="35" 
                                            Style="{DynamicResource LogoButtonStyle}" HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Stretch" Padding="0"
                                            WindowChrome.IsHitTestVisibleInChrome="True" >

                                        <Grid>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="50"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <ToggleButton Style="{DynamicResource LogoCollapserButtonStyle}"
                                                 IsChecked="{Binding IsRootNavBarCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasModuleView}}">

                                                <Path x:Name="path" Width="24" Height="24" HorizontalAlignment="Center" VerticalAlignment="Center"
                                                  Data="M23.79661,7.3220339 L8.7457627,32.745763 C8.7457627,32.745763 20.967638,41.353691 39.457627,32.949153 40.016949,32.694916 23.79661,7.3220339 23.79661,7.3220339 z M24.147993,17.112616 L18.539078,26.748444 16.296807,25.750439 24.147993,12.654248 31.889651,25.764187 29.325452,26.748444 z M21.684987,27.079261 L24.028953,22.958628 26.296647,26.943419 C24.264925,27.391584 21.684987,27.079261 21.684987,27.079261 z M14.400201,28.659537 L16.947083,29.838223 15.307045,32.3936 12.693201,31.380069 z M20.509176,30.588291 C20.509176,30.588291 24.455545,30.870772 28.060024,30.512021 L29.33121,32.851005 C29.33121,32.851005 25.203222,34.132012 18.932905,33.003547 z M31.119327,29.811227 L32.390514,32.093841 35.034582,31.229434 33.788819,28.768854 z" 
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" StrokeThickness="0"
                                                  Stretch="Uniform">

                                                </Path>
                                            </ToggleButton>

                                            <StackPanel x:Name="stackPanel" Grid.ColumnSpan="2" Orientation="Horizontal" 
                                                        Grid.Column="1" VerticalAlignment="Center" TextElement.FontSize="20">
                                                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="at"
                                                           FontFamily="Source Sans Pro Black"/>
                                                <TextBlock x:Name="textBlock1" TextWrapping="Wrap" Text="las" Margin="0"
                                                           FontFamily="Source Sans Pro Light"
                                                           FontSize="{Binding FontSize, ElementName=textBlock}"/>
                                            </StackPanel>
                                            <ToggleButton x:Name="toggleButton" Width="30" Style="{DynamicResource LogoCollapserButtonStyle}"
                                                          Background="Transparent" BorderThickness="0" Grid.ColumnSpan="3" Margin="150,0,0,0"
                                                          Padding="0" Height="35"
                                                          IsChecked="{Binding IsRootNavBarCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=uiControls:AtlasModuleView}}"
                                                          RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Right">
                                                <ToggleButton.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform/>
                                                        <SkewTransform/>
                                                        <RotateTransform/>
                                                        <TranslateTransform/>
                                                    </TransformGroup>
                                                </ToggleButton.RenderTransform>
                                                <Path x:Name="path1" Data="M3.2626522E-54,7.125 L6.7916667,0 8.75,2.0625 3.8021715,7.2580704 8.75,12.25 6.7083333,14.375 z" Fill="{DynamicResource LogoCollapser.Static.Foreground}" StrokeThickness="0" Height="14.375" Width="8.75" RenderTransformOrigin="0.5,0.5">
                                                    <Path.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform/>
                                                            <SkewTransform/>
                                                            <RotateTransform/>
                                                            <TranslateTransform/>
                                                        </TransformGroup>
                                                    </Path.RenderTransform>
                                                </Path>
                                            </ToggleButton>
                                        </Grid>
                                    </Button>

                                    <!-- Combo box -->
                                    <ComboBox x:Name="sectionComboBox" Width="180" DockPanel.Dock="Top"
                                              ItemsSource="{TemplateBinding Navigation}"
                                              Style="{StaticResource SectionControlStyle}"
                                              ToolTip="{Binding SelectedItem.Tooltip, RelativeSource={RelativeSource Self}}">
                                    </ComboBox>
                                    <!-- Atlas Context button -->
                                    <DockPanel Dock="Bottom" HorizontalAlignment="Left" >
                                        <ToggleButton IsEnabled="True"  HorizontalContentAlignment="Left" DataContext="{Binding ElementName=optionalNavigationContent,Path=Content}"
                                                      Tag="{Binding ElementName=content,Path=Content}"
                                               Foreground="{DynamicResource AtlasContextButton.Disabled.Foreground}"  Height="35" HorizontalAlignment="Center">
                                            <ToggleButton.Template >
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border  HorizontalAlignment="Left" >
                                                    <Grid>
                                                        <!--<ContentControl Content="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton}, Path=DataContext.ContextMenu}"></ContentControl>-->
                                                            <uiControls:AtlasContextMenu x:Name="AtlasContextMenu" DataContext="{TemplateBinding DataContext}"  Width="{Binding RelativeSource={RelativeSource AncestorType=DockPanel,AncestorLevel=2},Path=ActualWidth}"
                                                                            ExportCommand="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=DataContext.ExportCommand}"   
                                                                                        ImportCommand="{Binding RelativeSource={RelativeSource AncestorType=ToggleButton},Path=DataContext.ImportCommand}"  Printtable="{TemplateBinding Tag}">
                                                                <!--<Button Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:AtlasContextMenu}, Path=ExportCommand}">
                                                                                <TextBlock Text="Exportar"></TextBlock>
                                                                            </Button>-->
                                                            </uiControls:AtlasContextMenu>

                                                            <ContentControl Width="50"  Background="Transparent" BorderThickness="0">
                                                            <Grid Width="35" Height="35">
                                                                <StackPanel VerticalAlignment="Center" >
                                                                    
                                                                    
                                                                        
                                                                    <Ellipse x:Name="Ellipse1" Fill="{TemplateBinding Foreground}" Height="8" Stroke="{x:Null}" Width="8" Margin="0,0,0,3"  />
                                                                    <Ellipse x:Name="Ellipse2" Fill="{TemplateBinding Foreground}" Height="6" Stroke="{x:Null}" Width="6"  Margin="1,0,0,3" />
                                                                    <Ellipse x:Name="Ellipse3" Fill="{TemplateBinding Foreground}" Height="4" Stroke="{x:Null}" Width="4" Margin="2,0,0,0"  />


                                                                </StackPanel>
                                                                <Ellipse x:Name="Ellipse4"  Fill="Transparent" Width="Auto" Height="Auto" Stroke="Transparent" StrokeThickness="1" />
                                                            </Grid>
                                                        </ContentControl>
                                                    </Grid>
                                                    </Border>
                                                    <ControlTemplate.Triggers >
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource AtlasContextButton.Static.Foreground}"></Setter>
                                                            <Setter TargetName="AtlasContextMenu" Property="IsOpen" Value="True"></Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter TargetName="Ellipse1" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                            <Setter TargetName="Ellipse2" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                            <Setter TargetName="Ellipse3" Property="Fill" Value="{DynamicResource StatusBar.Foreground}"></Setter>
                                                        </Trigger>
                                                        <Trigger Property="IsVisible" Value="False">
                                                              <Setter  Property="IsChecked" Value="False"></Setter>
                                                            <Setter TargetName="AtlasContextMenu" Property="IsOpen" Value="False"></Setter>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>

                                            </ToggleButton.Template>
                                        </ToggleButton>
                                    </DockPanel>
                                    <DockPanel DataContext="{Binding SelectedItem, ElementName=sectionComboBox}">
                                    <uiControls:AtlasModuleListBox x:Name="categories"
                                             ItemsSource="{Binding SubNavigation}"
                                             Style="{StaticResource CategoriesControlStyle}" />
                                    </DockPanel>

                                </DockPanel>

                                <!-- This is an optional content holder to place some more navigation controls, for more navigation levels -->
                                <ContentControl x:Name="optionalNavigationContent"
                                                Grid.RowSpan="2" Grid.Column="1" Panel.ZIndex="500"
                                                Content="{TemplateBinding OptionalNavigationContent}"
                                                WindowChrome.IsHitTestVisibleInChrome="True"
                                                Visibility="{TemplateBinding OptionalNavigationVisibility}"
                                                FocusVisualStyle="{x:Null}"/>

                              
                                <!-- Content of the window -->

                                <DockPanel  Grid.Row="1" Grid.Column="2" Margin="7,0,7,7">

                                    <!-- Bottom status bar-->
                                    <StatusBar Background="{DynamicResource StatusBar.Background}"
                                               Foreground="{DynamicResource StatusBar.Foreground}" DockPanel.Dock="Bottom" FocusVisualStyle="{x:Null}">
                                        <DockPanel Height="35" Width="{Binding RelativeSource={RelativeSource AncestorType=StatusBar},Path=ActualWidth}" >
                                            <TextBlock Text="{Binding StatusText, Mode=OneWay}" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="10,0,10,0"
                                                       FontSize="{DynamicResource StatusBar.FontSize}"  />
                                            
                                            <ContentControl Margin="10,0,10,0" Content="{TemplateBinding StatusBar}" FocusVisualStyle="{x:Null}" DockPanel.Dock="Right"/>
                                        </DockPanel>
                                    </StatusBar>

                                    <!-- This is window's content, which is bound to the currently selected navigation item in the left navigation bar -->
                                    <Grid x:Name="ContentGrid">
                                        <!--SubSystem menu-->
                                        
                                        <ContentControl x:Name="subSystemMenu" Height="35"  Content="{TemplateBinding SubSystemMenuContent}" FocusVisualStyle="{x:Null}" VerticalAlignment="Top" HorizontalAlignment="Right" VerticalContentAlignment="Center" Margin="0,0,65,0"/>
                                        <ContentControl Style="{StaticResource DefaultContentViewStyle}" Content="{TemplateBinding DefaultContent}" FocusVisualStyle="{x:Null}"/>
                                        <ContentPresenter Style="{StaticResource ContentViewStyle}" TextElement.FontFamily="{DynamicResource Default.FontFamily}"
                                                          TextElement.FontSize="{DynamicResource Default.FontSize}"
                                                          TextElement.Foreground="{DynamicResource Default.Foreground}"
                                                          x:Name="content"/>
                                        <views:AtlasModuleHelpContent x:Name="AtlasModuleHelpContent" HorizontalAlignment="Right" Margin="0,35,-8,0" Width="0" DataContext="{TemplateBinding ModuleHelpViewModel}">
                                            <views:AtlasModuleHelpContent.Style>
                                                <Style TargetType="views:AtlasModuleHelpContent">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding ShowHelp, RelativeSource={RelativeSource AncestorType=uiControls:AtlasModuleView}}" Value="True">
                                                            <DataTrigger.EnterActions>
                                                                <!--<BeginStoryboard Storyboard="{StaticResource HelpFadeIn}"></BeginStoryboard>-->
                                                                <BeginStoryboard Storyboard="{StaticResource HelpExpandStoryboard}"></BeginStoryboard>
                                                            </DataTrigger.EnterActions>
                                                            <DataTrigger.ExitActions>
                                                                <!--<BeginStoryboard Storyboard="{StaticResource HelpFadeOut}"></BeginStoryboard>-->
                                                                <BeginStoryboard Storyboard="{StaticResource HelpCollapseStoryboard}"></BeginStoryboard>
                                                            </DataTrigger.ExitActions>
                                                        </DataTrigger>
                                                        <!--<Trigger Property="IsMouseOver" Value="False">
                                                            <Trigger.EnterActions>
                                                                --><!--<BeginStoryboard Storyboard="{StaticResource HelpFadeOut}"></BeginStoryboard>--><!--
                                                                <BeginStoryboard Storyboard="{StaticResource HelpCollapseStoryboard}"></BeginStoryboard>

                                                            </Trigger.EnterActions>
                                                          
                                                        </Trigger>-->
                                                    </Style.Triggers>
                                                </Style>
                                            </views:AtlasModuleHelpContent.Style>
                                          </views:AtlasModuleHelpContent>
                                    </Grid>

                                </DockPanel>


                            </Grid>

                        </AdornerDecorator>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ViewState,RelativeSource={RelativeSource AncestorType=uiControls:AtlasWindow}}" Value="{x:Static uiControls:AtlasViewState.Module}">
                            <Setter Property="Visibility" Value="Visible"></Setter>
                            <DataTrigger.EnterActions>
                                <BeginStoryboard Storyboard="{StaticResource Appear}"></BeginStoryboard>

                            </DataTrigger.EnterActions>
                            <DataTrigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource Disappear}"></BeginStoryboard>
                            </DataTrigger.ExitActions>
                            
                        </DataTrigger>
                        
                        <EventTrigger RoutedEvent="uiControls:AtlasModuleView.RootNavBarCollapsed">
                            <BeginStoryboard Storyboard="{StaticResource CollapseNavBar}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="uiControls:AtlasModuleView.RootNavBarExpanded">
                            <BeginStoryboard Storyboard="{StaticResource ExpandNavBar}"/>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="uiControls:AtlasModuleView.ContentChanged">
                            <!--<BeginStoryboard Storyboard="{StaticResource FadeOut}"/>-->
                            <BeginStoryboard Storyboard="{StaticResource SlideIn}"/>
                        </EventTrigger>

                        <!--<EventTrigger RoutedEvent="uiControls:AtlasModuleView.Appear">
                            --><!--<BeginStoryboard Storyboard="{StaticResource FadeOut}"/>--><!--
                            <BeginStoryboard Storyboard="{StaticResource Appear}"/>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="uiControls:AtlasModuleView.Disappear">
                            --><!--<BeginStoryboard Storyboard="{StaticResource FadeOut}"/>--><!--
                            <BeginStoryboard Storyboard="{StaticResource Disappear}"/>
                        </EventTrigger>-->


                        <Trigger SourceName="sectionComboBox" Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="OptionalNavigationVisibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger SourceName="categories" Property="SelectedItem" Value="{x:Null}">
                            <Setter Property="OptionalNavigationVisibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  

</ResourceDictionary>