<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:properties="clr-namespace:CompanyName.Atlas.UIControls.Properties"
                    mc:Ignorable="d">

    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}"
		TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="{x:Type DataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid HorizontalAlignment="Left">
                        <DataGridColumnHeader IsHitTestVisible="False" x:Name="PART_FillerColumnHeader"/>
                        
                              <ItemsPresenter HorizontalAlignment="Left" />
                    </Grid>
                   </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeWE"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="RowHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Height" Value="8"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="SizeNS"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnFloatingHeaderStyle" TargetType="{x:Type Control}">
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Control}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}"
						BorderBrush="{TemplateBinding BorderBrush}"
						Padding ="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}">
                        <Grid>
                            <Canvas x:Name="PART_VisualBrushCanvas" Margin="{TemplateBinding Margin}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColumnHeaderDropSeparatorStyle" TargetType="{x:Type Separator}">
        <Setter Property="Background" Value="{DynamicResource DataGridDropSeparator}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridRow}" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent" />
        <!--<Setter Property="MaxHeight" Value="Auto"/>-->
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="True" HorizontalAlignment="Left">
                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>

                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>

                            <DataGridCellsPresenter Grid.Column="1" 
								ItemsPanel="{TemplateBinding ItemsPanel}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                            <DataGridDetailsPresenter SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                                                      Grid.Column="1" Grid.Row="1" Visibility="{TemplateBinding DetailsVisibility}">
                            </DataGridDetailsPresenter>
                            <Rectangle Grid.Row="2" Grid.ColumnSpan="2"  Fill="{DynamicResource DataGridRowBottomLine.Static.Background}" Height="1"  ></Rectangle>

                        </SelectiveScrollingGrid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True" SourceName="DGR_Border">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridCellsPresenter}" TargetType="{x:Type DataGridCellsPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCellsPresenter}">
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="MaxHeight" Value="35"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
						    BorderBrush="{TemplateBinding BorderBrush}"  
						    BorderThickness="{TemplateBinding BorderThickness}" 
						    Padding="6,0,0,0"
						    SnapsToDevicePixels="True" >
                        <ContentPresenter   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="6,0"
							                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellRighted" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="MaxHeight" Value="35"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
						    BorderBrush="{TemplateBinding BorderBrush}"  
						    BorderThickness="{TemplateBinding BorderThickness}" 
						    Padding="6,0,0,0"
						    SnapsToDevicePixels="True" >
                        <ContentPresenter   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="6,0"
							                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellCentred" TargetType="{x:Type DataGridCell}">
        <Setter Property="Background" Value="{DynamicResource DataGridCellBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridCellForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="MaxHeight" Value="35"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Background="{TemplateBinding Background}" 
						    BorderBrush="{TemplateBinding BorderBrush}"  
						    BorderThickness="{TemplateBinding BorderThickness}" 
						    Padding="6,0,0,0"
						    SnapsToDevicePixels="True" >
                        <ContentPresenter   SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="6,0"
							                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                             HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.MouseOver.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="{x:Type DataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGridColumnHeader.Static.Background}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridColumnHeader.Static.Foreground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}" />
        <Setter Property="FontSize" Value="{DynamicResource DataGrid.Static.FontSize}" />
        <!--<Setter Property="FontWeight" Value="SemiBold" />-->
        <Setter Property="Margin" Value="0,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding ="{TemplateBinding Padding}"
>
                            <Grid x:Name="containerGrid" Margin="{TemplateBinding Margin}" >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.Column="0" Margin="12,0"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                <Path x:Name="SortArrow"
									Grid.Column="1"
									HorizontalAlignment="Center" VerticalAlignment="Center"
									Width="8" Height="6"  Margin="5,0,5,0"
									Stretch="Fill" Opacity="0.5" Fill="{TemplateBinding Foreground}"
									RenderTransformOrigin="0.5,0.4"
									Visibility="Hidden"
									Data="M0,0 L1,0 0.5,1 z" />
                            </Grid>
                        </Border>
                        <Thumb x:Name="PART_LeftHeaderGripper"
							HorizontalAlignment="Left"
							Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper"
							HorizontalAlignment="Right"
							Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection" Value="Ascending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            <Setter TargetName="SortArrow" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="SortDirection" Value="Descending">
                            <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
            </Trigger>-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
            </Trigger>
        </Style.Triggers>

    </Style>
    <Style x:Key="DataGridColumnHeaderRighted" TargetType="{x:Type DataGridColumnHeader}" BasedOn="{StaticResource {x:Type DataGridColumnHeader}}">
       
      
        <Setter Property="HorizontalContentAlignment" Value="Right" />

    </Style>

    <Style x:Key="{x:Type DataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridGridLines}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="Width" Value="16"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Padding ="{TemplateBinding Padding}">

                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        </Border>
                        <Thumb x:Name="PART_TopHeaderGripper"
							VerticalAlignment="Top"
							Style="{StaticResource RowHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_BottomHeaderGripper"
							VerticalAlignment="Bottom"
							Style="{StaticResource RowHeaderGripperStyle}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundHover}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundHover}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundPressed}" />
            </Trigger>
            <Trigger Property="IsRowSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource DataGridHeaderBackgroundSelected}" />
                <Setter Property="Foreground" Value="{DynamicResource DataGridHeaderForegroundSelected}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridTextColumnEditingElementStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
        <Setter Property="SelectionBrush" Value="{DynamicResource DataGridTextColumn.SelectionBrush}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="{x:Type DataGrid}" TargetType="{x:Type DataGrid}">
        <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGrid.Static.Foreground}"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DataGridRowBottomLine.Static.Background}" />
        <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DataGridRowBottomLine.Static.Background}" />
        <Setter Property="DragIndicatorStyle" Value="{StaticResource ColumnFloatingHeaderStyle}" />
        <Setter Property="DropLocationIndicatorStyle" Value="{StaticResource ColumnHeaderDropSeparatorStyle}" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <!--<Setter Property="SelectedIndex" Value="-1"/>-->
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource DataGrid.Static.FontSize}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Grid Margin="0,0,0,0">
                        <DockPanel Margin="0,0,0,0">
                            <Border DockPanel.Dock="Top"
								Background="{DynamicResource DataGridColumnHeader.Static.Background}"
								Height="35" Margin="0"/>
                            <Border DockPanel.Dock="Top"
								Background="{TemplateBinding Background}" Margin="0" Padding="0"/>
                        </DockPanel>
                        <ScrollViewer Focusable="false" x:Name="DG_ScrollViewer" Height="Auto" Margin="0">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid Margin="0,0,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>

                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <DataGridColumnHeadersPresenter Grid.Column="1" Grid.ColumnSpan="2"
											x:Name="PART_ColumnHeadersPresenter"
											Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Margin="0" Padding="0"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2"
                                                                Grid.Column="0" Margin="0" 
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                        <ScrollBar Grid.Row="1" Grid.Column="2" x:Name="PART_VerticalScrollBar"
											Orientation="Vertical"
											Maximum="{TemplateBinding ScrollableHeight}"
											ViewportSize="{TemplateBinding ViewportHeight}"
											Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
											Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <Grid Grid.Row="2" Grid.Column="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar Grid.Column="1"
												x:Name="PART_HorizontalScrollBar"
												Orientation="Horizontal"
												Maximum="{TemplateBinding ScrollableWidth}"
												ViewportSize="{TemplateBinding ViewportWidth}"
												Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
												Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" />
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
          
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="DataGridCommandsColumnTemplate">
        <Grid x:Name="container" MinWidth="40" Width="Auto" HorizontalAlignment="Right" VerticalAlignment="Center" Height="Auto" Margin="0"
              Visibility="Hidden">

            <controls:ConfirmationView  DataContext="{Binding}" Background="{Binding RelativeSource={RelativeSource AncestorType=Border}, Path=Background}" Command="{x:Static DataGrid.DeleteCommand}"
                                                                 ToolTip="{Binding DeleteText}"  OverridesDefaultStyle="True" >
                <controls:ConfirmationView.Style>
                    <Style TargetType="controls:ConfirmationView" >
                        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                        <!--<Setter Property="Width" Value="0"></Setter>-->
                        <!--<Setter Property="IsEnabled" Value="False"></Setter>-->
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="controls:ConfirmationView">
                                    <ControlTemplate.Resources>
                                        <Style x:Key="DataGridDeleteButtonStyle" TargetType="{x:Type Button}">
                                            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Static.Foreground}"/>
                                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                            <Setter Property="Width" Value="20"/>
                                            <Setter Property="Height" Value="20"/>
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type Button}">
                                                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                            <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="true">
                                                                <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsPressed" Value="true">
                                                                <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Pressed.Foreground}"/>
                                                            </Trigger>
                                                            <Trigger Property="IsEnabled" Value="false">
                                                                <Setter Property="Foreground" Value="{StaticResource DataGridDeleteButton.Disabled.Foreground}"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                        <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                                            <Setter Property="Background" Value="Transparent"/>
                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                            <Setter Property="Width" Value="20"/>
                                            <Setter Property="Height" Value="20"/>
                                            <Setter Property="Foreground" Value="{DynamicResource Buttom.Static.Foreground}"/>

                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="Button">
                                                        <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                            <Path x:Name="path"
                                                      Width="12" Height="12"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                                                        </Border>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                        <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource Buttom.Pressed.Foreground}"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>

                                        <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                            <Style.Triggers>

                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Foreground" Value="LightGray"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                        <Storyboard x:Key="ExpandStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)">
                                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Key="CollapseStoryboard">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" >
                                                <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                                    <EasingDoubleKeyFrame.EasingFunction>
                                                        <CubicEase EasingMode="EaseOut"/>
                                                    </EasingDoubleKeyFrame.EasingFunction>
                                                </EasingDoubleKeyFrame>
                                            </DoubleAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </ControlTemplate.Resources>
                                    <Grid x:Name="RootGrid" Height="35">
                                        <StackPanel Orientation="Horizontal">
                                        <Button x:Name="DeleteButton" Background="Transparent" 
                                
                                ToolTip="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=ToolTip}"
                                 Command="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=DisableCommand}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource DataGridDeleteButtonStyle}">
                                                    <Setter Property="HorizontalAlignment" Value="Right"></Setter>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                                        </DataTrigger>
                                                        <MultiDataTrigger>
                                                                <MultiDataTrigger.Conditions>
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="True"></Condition>
                                                                    <Condition Binding="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},Path=IsMouseOver}" Value="True"></Condition>

                                                                </MultiDataTrigger.Conditions>
                                                                <MultiDataTrigger.Setters>
                                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                                    <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Static.Foreground}"/>
                                                                </MultiDataTrigger.Setters>
                                                        </MultiDataTrigger>
                                                           
                                                        </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <Path Stretch="Uniform" 
                                                  Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
					                              Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>

                                        </Button>
                                            <Border x:Name="RigthBorder"></Border>
                                        </StackPanel>
                                        <Popup  Placement="Left" PlacementTarget="{x:Reference RigthBorder}" StaysOpen="False" >
                                            <Popup.Style>
                                                <Style TargetType="Popup">
                                                    <Style.Triggers>
                                                        <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                                           <Setter Property="IsOpen" Value="True"></Setter>
                                                        </DataTrigger>
                                                        <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="True">
                                                            <Setter Property="IsOpen" Value="False"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                                </Popup.Style>
                                            <Border x:Name="ConfirmElement" Width="0" Height="35" Background="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=Background}" >
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                                                <DataTrigger.EnterActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}"></BeginStoryboard>
                                                                </DataTrigger.EnterActions>
                                                                <DataTrigger.ExitActions>
                                                                    <BeginStoryboard Storyboard="{StaticResource CollapseStoryboard}"></BeginStoryboard>
                                                                </DataTrigger.ExitActions>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Border.Style>
                                                <Grid>
                                                    <!--<Rectangle Fill="White" Opacity="0.7"></Rectangle>-->
                                                    <Border >
                                                        <Grid>
                                                            <TextBlock Text="{x:Static properties:Resources.Confirm}" Margin="15,0,5,0" VerticalAlignment="Center" HorizontalAlignment="Left"></TextBlock>
                                                            <DockPanel Width="40" HorizontalAlignment="Right" >
                                                                <DockPanel.Style>
                                                                    <Style TargetType="DockPanel">
                                                                        <Style.Triggers>
                                                                            <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                                                                <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=RelativeMargin}"></Setter>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </DockPanel.Style>
                                                                <Button Style="{StaticResource DeleteCommandButtonStyle}" HorizontalAlignment="Right"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=Command}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=DataContext}"
                                                    ToolTip="{x:Static properties:Resources.Delete}"
                                                    Content="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z ">
                                                                </Button>
                                                                <Button DockPanel.Dock="Right"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=controls:ConfirmationView},Path=DisableCommand}"
                                                    ToolTip="{x:Static properties:Resources.Cancel}"
                                                    Content="M-3.5,-3.5 3.5,3.5 M-1,1 L1,-1 Z" >
                                                                    <Button.Style>
                                                                        <Style TargetType="Button">
                                                                            <Setter Property="Background" Value="Transparent"/>
                                                                            <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                                            <Setter Property="Width" Value="20"/>
                                                                            <Setter Property="Height" Value="20"/>
                                                                            <Setter Property="VerticalAlignment" Value="Center"/>
                                                                            <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                            <Setter Property="Foreground" Value="{DynamicResource Buttom.Static.Foreground}"/>

                                                                            <Setter Property="Template">
                                                                                <Setter.Value>
                                                                                    <ControlTemplate TargetType="Button">
                                                                                        <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                                                                                            <Path x:Name="path"
                                                     Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" Margin="0,1,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                                                        </Border>
                                                                                    </ControlTemplate>
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Style.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="Foreground" Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Foreground" Value="{DynamicResource Buttom.Pressed.Foreground}"/>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Button.Style>

                                                                </Button>
                                                            </DockPanel>
                                                        </Grid>
                                                      
                                                    </Border>
                                                </Grid>
                                            </Border>
                                        </Popup>
                                     </Grid>

                                  <!--<ControlTemplate.Triggers>
                                      <Trigger Property="IsCollapsed" Value="False">
                                          <Setter Property="Margin" Value="-110,0,-30,0"></Setter>
                                      </Trigger>
                                  </ControlTemplate.Triggers>-->
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                </controls:ConfirmationView.Style>
                
            </controls:ConfirmationView>

            <!--<Button Style="{DynamicResource DataGridDeleteButtonStyle}"
                    Command="{x:Static DataGrid.DeleteCommand}">
                <Path Stretch="Uniform" 
                      Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"
					  Data="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z "/>
            </Button>-->
        </Grid>

        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}" Value="True">
                <Setter Property="Visibility" Value="Visible" TargetName="container"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <Style x:Key="DataGridDeleteButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Static.Foreground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Pressed.Foreground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource DataGridDeleteButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridAddButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource DataGrid.Static.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridAddButton.Foreground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource DataGridAddButton.Background}"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="5,0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
                            <Setter Property="BorderBrush"  Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
                            <Setter Property="Background" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <!--<Trigger Property="IsPressed" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource Buttom.Pressed.Foreground}"/>
                            <Setter Property="BorderBrush"  Value="{DynamicResource Buttom.Pressed.Foreground}"/>
                        </Trigger>-->
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=controls:AtlasDataGrid},Path=CanAdd}" Value="False">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <!--<Setter Property="Background" TargetName="border" Value="Transparent"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Height" Value="35"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style x:Key="{x:Type controls:AtlasDataGrid}" TargetType="{x:Type controls:AtlasDataGrid}" BasedOn="{StaticResource {x:Type DataGrid}}">
        <Setter Property="EnableRowVirtualization" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <ControlTemplate.Resources>
                        <ResourceDictionary Source="/Atlas.UIControls;component/Themes/Paginator.xaml"/>
                    </ControlTemplate.Resources>

                    <DockPanel>
                        <Grid DockPanel.Dock="Bottom" Background="{TemplateBinding Background}"  Visibility="{Binding ShowBottom, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="Auto"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="AddButton" 
                                Style="{DynamicResource DataGridAddButtonStyle}"
                                Command="{Binding AddButtonCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}" >
                                <DockPanel>
                                    <Grid x:Name="grid" Width="20"  Height="20" HorizontalAlignment="Left">
                                        <Ellipse Fill="{Binding Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}" Stroke="{x:Null}"/>
                                        <Line x:Name="lineVer" StrokeThickness="4" X1="10" X2="10" Y1="3" Y2="17" Stroke="{DynamicResource DataGrid.Static.Background}"/>
                                        <Line x:Name="lineHor" Stroke="{Binding Stroke, ElementName=lineVer}" Y1="10" Y2="10" X1="3" X2="17" StrokeThickness="4"/>
                                    </Grid>
                                    <TextBlock x:Name="AddTextBlock" Text="{Binding AddButtonText, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}"  VerticalAlignment="Center" FontSize="18" Margin="10,0,0,0"/>
                                </DockPanel>
                            </Button>
                            <!--PaginationItems="{Binding Items, RelativeSource={RelativeSource AncestorType=controls:AtlasDataGrid}}"-->
                           <!--<Rectangle Grid.Column="1" Fill="Red"></Rectangle>-->
                            <controls:Paginator x:Name="Paginator" Grid.Column="1" HorizontalAlignment="Center" Visibility="Visible"  PaginationItems="{Binding  Items, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}"
                                                DoPaginate="{Binding Change}"  ItemsPerPages="{Binding ItemsPerPage, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}" ></controls:Paginator>
                            <DockPanel   Grid.Column="2" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="15,0" Visibility="{Binding ShowTotal, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}">
                                <TextBlock Text="{Binding TotalText, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid}}" Foreground="{DynamicResource DataGridColumnHeader.Static.Foreground}" FontWeight="SemiBold" Margin="0,0,15,0" ></TextBlock>
                                <TextBlock Text="{Binding Total, RelativeSource={RelativeSource FindAncestor, AncestorType=controls:AtlasDataGrid},Mode=OneWay}" Margin="15,0,0,0" ></TextBlock>
                                <TextBlock Text="MP" Margin="15,0,0,0"></TextBlock>
                            </DockPanel>
                           
                        </Grid>
                       
                        <Grid Margin="0,0,0,0">
                            <DockPanel Margin="0,0,0,0">
                                <Border DockPanel.Dock="Top"
									Background="{DynamicResource DataGridColumnHeader.Static.Background}"
									Height="35" Margin="0"/>
                                <Border DockPanel.Dock="Top"
									Background="{TemplateBinding Background}" Margin="0" Padding="0"/>
                            </DockPanel>
                            <ScrollViewer Focusable="false" x:Name="DG_ScrollViewer" Height="Auto" Margin="0">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid Margin="0,0,0,0">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>

                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>

                                            <DataGridColumnHeadersPresenter Grid.Column="1" Grid.ColumnSpan="2"
												x:Name="PART_ColumnHeadersPresenter"
												Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Margin="0" Padding="0"/>

                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1"
                                                                    Grid.ColumnSpan="2" Grid.Column="0" Margin="0"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                            <ScrollBar Grid.Row="1" Grid.Column="2" x:Name="PART_VerticalScrollBar"
												Orientation="Vertical"
												Maximum="{TemplateBinding ScrollableHeight}"
												ViewportSize="{TemplateBinding ViewportHeight}"
												Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
												Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                            <Grid Grid.Row="2" Grid.Column="1">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar Grid.Column="1"
													x:Name="PART_HorizontalScrollBar"
													Orientation="Horizontal"
													Maximum="{TemplateBinding ScrollableWidth}"
													ViewportSize="{TemplateBinding ViewportWidth}"
													Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
													Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" />
                            </ScrollViewer>
                        </Grid>
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>