<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style TargetType="{x:Type Menu}">
        <Setter Property="Background" Value="{DynamicResource Menu.Static.Background}"/>
        <Setter Property="FontFamily" Value="{DynamicResource Default.FontFamily}"/>
        <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>
        <Setter Property="Foreground" Value="{DynamicResource Menu.Static.Foreground}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Menu}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true">
                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Geometry x:Key="Checkmark">M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z</Geometry>

    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Grid SnapsToDevicePixels="true" Margin="4,4,8,4">
                        <Rectangle Height="1"
                                   Margin="0"
                                   Fill="{DynamicResource SeparatorBackground}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12"
                                     
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                   Width="10"
                                    Height="10"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource WindowText}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="8,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="0,2"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource Menu.MouseOver.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Menu.MouseOver.Foreground}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource ItemTextSelected}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource ItemTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}"
                     TargetType="{x:Type MenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle Name="Bg" Fill="{TemplateBinding MenuItem.Background}"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="12"
                                      
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                   Width="10"
                                   Height="10"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel"
                        Visibility="Hidden">
                    <Path Name="Glyph"
                          Width="10"
                          Height="10"
                          Stretch="Fill"
                          Fill="{DynamicResource WindowText}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark}"/>
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="8,2,8,2"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Path x:Name="RightArrow"
                      Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow}"/>
            </Grid>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                <Grid Margin="4" Background="{DynamicResource SubMenu.IsOpen.Background}">
                    <Grid x:Name="Shdw">
                        <Border Background="#0C000000" BorderBrush="#0F000000" BorderThickness="1" CornerRadius="2.5" Margin="-1" />
                        <Border Background="#0A000000" BorderBrush="#0C000000" BorderThickness="1" CornerRadius="2.75" Margin="-2" />
                    </Grid>
                    <Border x:Name="SubMenuBorder"
                            Background="{DynamicResource SubMenu.IsOpen.Background}"
                            BorderBrush="{DynamicResource SubMenu.IsOpen.BorderBrush}"
                            BorderThickness="1"
                            Margin="0,-1,0,0">
                        <ScrollViewer Name="SubMenuScrollViewer" CanContentScroll="true" Foreground="{DynamicResource SubMenu.IsOpen.BorderBrush}">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <ItemsPresenter Name="ItemsPresenter"
                                                KeyboardNavigation.TabNavigation="Cycle"
                                                KeyboardNavigation.DirectionalNavigation="Cycle"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                Grid.IsSharedSizeScope="true"/>
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="Scroll"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource Menu.MouseOver.Background}"/>
                <Setter Property="Foreground" Value="{DynamicResource Menu.MouseOver.Foreground}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource ItemTextSelected}"/>
                <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextSelected}"/>
            </Trigger>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                <Setter TargetName="Shdw" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                <Setter TargetName="Glyph" Property="Fill" Value="{DynamicResource ItemTextDisabled}"/>
                <Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource ItemTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- This template is for the menu items that are in the top of the menu -->
    <!-- This template is for the menu items that are in the top of the menu -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border">
            <Grid>
                <ContentPresenter ContentSource="Header" x:Name="Content" HorizontalAlignment="Center"
                                  RecognizesAccessKey="True" Margin="{TemplateBinding Padding}"  VerticalAlignment="Center" />
                <Popup x:Name="Popup" Placement="Bottom"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       FocusVisualStyle="{x:Null}"
                       PopupAnimation="Fade">
                    <Border x:Name="SubmenuBorder" BorderBrush="{DynamicResource SubMenu.IsOpen.BorderBrush}"
                            Background="{DynamicResource SubMenu.IsOpen.Background}"
                            SnapsToDevicePixels="True" BorderThickness="1">
                        <ScrollViewer CanContentScroll="True" VerticalScrollBarVisibility="Hidden"
                                      HorizontalScrollBarVisibility="Hidden"
                                      Style="{DynamicResource MenuScrollViewerStyle}">
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
            </Trigger>
            <Trigger SourceName="Border" Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource TopMenuItem.MouseOver.Background}" />
                <Setter Property="Foreground"  Value="{DynamicResource TopMenuItem.MouseOver.Foreground}"/>
            </Trigger>
            <!--<Trigger Property="IsHighlighted" Value="true">
                <Setter Property="TextElement.Foreground" TargetName="Content" Value="{DynamicResource DataGridAddButton.Foreground}"/>
            </Trigger>-->
            <Trigger Property="IsOpen" SourceName="Popup" Value="True">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource TopMenuItem.IsOpen.Background}"/>
                <Setter Property="Background" TargetName="SubmenuBorder" Value="WhiteSmoke"/>
                <Setter Property="TextElement.Foreground" TargetName="SubmenuBorder" Value="{DynamicResource Menu.Static.Foreground}"/>
                <Setter Property="TextElement.Foreground" Value="White" TargetName="Content"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="TextElement.Foreground" Value="{DynamicResource Menu.Disabled.Foreground}" TargetName="Content"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- This template is for the menu items when their are submenu -->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" >
            <Grid>
                <!--<Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon" />
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Margin="2"
                                  HorizontalAlignment="Center" Grid.IsSharedSizeScope="False" Width="18"/>-->
                <ContentPresenter x:Name="HeaderHost" ContentSource="Header" RecognizesAccessKey="True" Margin="5,2,2,2"
                                  VerticalAlignment="Center" />
                <!--<TextBlock x:Name="InputGestureText" Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="5,2,5,2"
                           DockPanel.Dock="Right" VerticalAlignment="Center" MinWidth="10" />-->
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ButtonBase.Command" Value="{x:Null}" />
            <Trigger SourceName="Border" Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource TopMenuItem.MouseOver.Background}" />
                <Setter Property="Foreground" Value="{DynamicResource TopMenuItem.MouseOver.Foreground}"/>
            </Trigger>
            <!--<Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>-->
            <!--<Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden" />
            </Trigger>-->
            <!--<Trigger Property="IsHighlighted" Value="true">
                <Setter Property="Background" TargetName="Border" Value="{DynamicResource MenuItem.Highlighted.Background}"/>
            </Trigger>-->
            <!--<Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource DisabledForegroundColor}" />
                    </Setter.Value>
                </Setter>
            </Trigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type MenuItem}"
           TargetType="{x:Type MenuItem}">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Background"
                Value="{DynamicResource Menu.Static.Background}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource Default.Foreground}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template"
                Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuItemTemplateKey}}"/>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Padding"
                        Value="7,2,8,2"/>
                <!--<Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelHeaderTemplateKey}}"/>-->
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />

            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,2"/>
                <!--<Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=TopLevelItemTemplateKey}}"/>-->
                <Setter Property="Template" Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="2,3,2,3"/>
                <Setter Property="Template"
                        Value="{DynamicResource {ComponentResourceKey TypeInTargetAssembly={x:Type MenuItem}, ResourceId=SubmenuHeaderTemplateKey}}"/>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>