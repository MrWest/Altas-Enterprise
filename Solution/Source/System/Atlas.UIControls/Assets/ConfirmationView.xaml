<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:properties="clr-namespace:CompanyName.Atlas.UIControls.Properties">

    <Style x:Key="TreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ToggleButtonStyle"
                                       BasedOn="{StaticResource TreeViewCollapserButtonBaseStyle}"
                                       TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource DataGrid.Dark.Background}"/>
                            <!--<Setter Property="Background" TargetName="border" Value="{DynamicResource DataGridColumnHeader.Static.Background}"/>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DeleteCommandToggleButtonStyle" TargetType="ToggleButton" BasedOn="{StaticResource ToggleButtonStyle}">
        <Style.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource Buttom.Static.Foreground}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                        <Path x:Name="path"
                                                      Width="12" Height="12"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Buttom.Pressed.Foreground}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
        <Style.Triggers>
          
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource DataGridDeleteButton.MouseOver.Foreground}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="LightGray"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Storyboard x:Key="ExpandStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)">
            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="CollapseStoryboard">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" >
            <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
            <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                <EasingDoubleKeyFrame.EasingFunction>
                    <CubicEase EasingMode="EaseOut"/>
                </EasingDoubleKeyFrame.EasingFunction>
            </EasingDoubleKeyFrame>
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Style TargetType="uiControls:ConfirmationView">
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <!--<Setter Property="Width" Value="0"></Setter>-->
        <!--<Setter Property="IsEnabled" Value="False"></Setter>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="uiControls:ConfirmationView">
                    <Grid>
                        <Button x:Name="DeleteButton" Background="Transparent" 
                                Margin="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=DeleteButtonMargin}"
                                ToolTip="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=ToolTip}"
                                Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=DisableCommand}"
                                Content="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z ">
                        <Button.Style>
                                <Style TargetType="Button" BasedOn="{StaticResource DeleteCommandButtonStyle}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                        </Button.Style>   
                        </Button>

                        <Border x:Name="ConfirmElement" Width="0" Height="35"  Background="{TemplateBinding Background}"  
                               Padding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=Padding}"  >
                            <Border.Style>
                                <Style TargetType="Border">
                                    <Style.Triggers>
                                        <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                            <DataTrigger.EnterActions>
                                                <BeginStoryboard Storyboard="{StaticResource ExpandStoryboard}"></BeginStoryboard>
                                            </DataTrigger.EnterActions>
                                            <DataTrigger.ExitActions>
                                                <BeginStoryboard Storyboard="{StaticResource CollapseStoryboard}"></BeginStoryboard>
                                            </DataTrigger.ExitActions>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Grid>
                                <!--<Rectangle Fill="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=Background}" Opacity="1"></Rectangle>-->
                                <DockPanel HorizontalAlignment="Right">
                                    <DockPanel  Dock="Left">
                                        <TextBlock Text="{x:Static properties:Resources.Confirm}"  VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10,0,18,0"></TextBlock>
                                    </DockPanel>
                                    
                                  <DockPanel Width="40" Dock="Right" >
                                        <DockPanel.Style>
                                            <Style TargetType="DockPanel">
                                                <Style.Triggers>
                                                    <DataTrigger  Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=IsCollapsed}" Value="False">
                                                        <Setter Property="Margin" Value="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=RelativeMargin}"></Setter>
                                                        </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </DockPanel.Style>
                                        <Button HorizontalAlignment="Right"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=Command}"
                                                    CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=DataContext}"
                                                    ToolTip="{x:Static properties:Resources.Delete}"
                                                    Content="F1 M 15,21L 22,28L 32.9999,14.0001L 35.9999,17.0001L 22,34L 12.0001,24L 15,21 Z ">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource DeleteCommandButtonStyle}" >
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=IsCollapsed}" Value="True">
                                                            <Setter Property="IsEnabled" Value="False"></Setter>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                    </Button>
                                    <Button DockPanel.Dock="Right"
                                                    Command="{Binding RelativeSource={RelativeSource AncestorType=uiControls:ConfirmationView},Path=DisableCommand}"
                                                    ToolTip="{x:Static properties:Resources.Cancel}"
                                                    Content="M-3.5,-3.5 3.5,3.5 M-1,1 L1,-1 Z" >
                                       <Button.Style>
                                           <Style TargetType="Button">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                                <Setter Property="Width" Value="20"/>
                                                <Setter Property="Height" Value="20"/>
                                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Foreground" Value="{DynamicResource Buttom.Static.Foreground}"/>

                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="Button">
                                                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">

                                                                <Path x:Name="path" Margin="0,1,0,0"
                                                     Data="M0,0 L8,7 M8,0 L0,7 Z" Width="8" Height="7" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                          Stroke="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" StrokeThickness="1.5"  />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource Buttom.MouseOver.Foreground}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Foreground" Value="{DynamicResource Buttom.Pressed.Foreground}"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                       </Button.Style>

                                    </Button>
                                    </DockPanel>
                                </DockPanel>
                            </Grid>
                        </Border>
                    </Grid>
                   
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    

</ResourceDictionary>