<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary x:Key="ThemeDictionary" Source="../Themes/ModernUI.Dark.xaml"></ResourceDictionary>

    <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
    <!-- Style of the sections combobox toggle button, the little arrow at the right of the combo -->
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Margin" Value="0,0,1,0"/>
        <Setter Property="IsChecked" Value="True"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="templateRoot2" SnapsToDevicePixels="true"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}" HorizontalAlignment="Right">
                        <Border x:Name="splitBorder"  SnapsToDevicePixels="true"
                                HorizontalAlignment="Right" BorderThickness="1" BorderBrush="Transparent">
                            <!--Data="M3.2626522E-54,7.125 L6.7916667,0 8.75,2.0625 3.8021715,7.2580704 8.75,12.25 6.7083333,14.375 z"-->
                            <Path x:Name="path1"   Data="{DynamicResource DownArrowGeometry}" Fill="{TemplateBinding Foreground}" StrokeThickness="0" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}">
                                <!--<Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform/>
                                        <SkewTransform/>
                                        <RotateTransform Angle="-90"/>
                                        <TranslateTransform/>
                                    </TransformGroup>
                                </Path.RenderTransform>-->
                            </Path>
                        </Border>
                    </Border>

                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsDropDownOpen, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                                     Value="True">
                            <Setter TargetName="path1" Property="RenderTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="7,2,8,2"/>
        <Setter Property="VerticalAlignment" Value="Bottom"/>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=Foreground}"/>
        <Setter Property="MinHeight" Value="25"></Setter>
        <!--<Setter Property="Height" Value="{Binding RelativeSource={RelativeSource AncestorType=ComboBox},Path=ActualHeight}"/>-->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Bd"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                             Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <!--<Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Style of the sections combobox items -->
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="BorderBrush"  Value="{DynamicResource DataGridCell.Selected.Foreground}"></Setter>
                                  
        <!--<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>-->
        <!--<Setter Property="Padding" Value="3"/>-->
        <Setter Property="MinHeight" Value="25"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!--<Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"/>-->
       
        <!--<Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type ComboBoxItem}">
                    <Setter Property="SnapsToDevicePixels" Value="True"/>
                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                    --><!--<Setter Property="Background" Value="{TemplateBinding Background}"/>--><!--
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>

                    <Setter Property="BorderBrush" Value="{DynamicResource ShadowText}"/> 
                    --><!--<Setter Property="Height" Value="35"/>-->
                    <!--<Setter Property="Foreground" Value="{TemplateBinding Foreground}"/>-->
                    <!--<Setter Property="HorizontalContentAlignment" Value="Left"/>-->
                    <!--<Setter Property="VerticalAlignment" Value="Center"/>--><!--
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ComboBoxItem}">

                                <Border x:Name="Bd" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"
                                        SnapsToDevicePixels="true"  
                                        Height="{TemplateBinding Height}" BorderThickness="{TemplateBinding BorderThickness}"  VerticalAlignment="Center">
                                    <ContentPresenter  />
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ItemBackgroundSelected}"/>
                                    </Trigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>-->

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <Border Name="MainBorder" VerticalAlignment="Center"   BorderThickness="{TemplateBinding BorderThickness}"  BorderBrush="{TemplateBinding BorderBrush}" Margin="0"  Height="{TemplateBinding Height}"
                             Width="{TemplateBinding Width}"  Background="{TemplateBinding Background}">

                            <Grid x:Name="templateRoot" SnapsToDevicePixels="true"   >
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="13"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton x:Name="toggleButton" BorderThickness="{TemplateBinding BorderThickness}"
                                      Background="Transparent" 
                                      Grid.Column="1"                
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      Style="{StaticResource ComboBoxToggleButton}"  />



                                <ContentPresenter IsHitTestVisible="false"
                                          Margin="{TemplateBinding Padding}"
                                          Content="{TemplateBinding SelectedItem}"
                                          ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                          ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                                <TextBlock Text="{Binding Path=Tag, RelativeSource={RelativeSource AncestorType=ComboBox}}" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Visibility" Value="Collapsed"></Setter>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Path=SelectedItem,RelativeSource={RelativeSource AncestorType=ComboBox}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Margin="0"
                               IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Width="{Binding ActualWidth, Mode=OneWay,ElementName=MainBorder}"
                               Placement="Bottom" >
                            <Grid x:Name="shadow" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="0"
                                  MinWidth="{Binding ActualWidth, ElementName=MainBorder}">
                                <Border x:Name="dropDownBorder" BorderThickness="1,0,1,1"  BorderBrush="{TemplateBinding BorderBrush}"  
                                        Background="{TemplateBinding Background}"  MinWidth="{Binding ActualWidth, ElementName=templateRoot}">
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=PART_Popup,Path=IsOpen}" Value="True">
                                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <ScrollViewer x:Name="DropDownScrollViewer" 
                                                  VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                                                  HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}">
                                        <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas x:Name="canvas"  Height="0"  Width="0">
                                                <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" 
                                                           Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ClipToBounds="True" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Grid>
                        </Popup>

                    </Grid>
                    <ControlTemplate.Triggers>

                        
                        <!--<Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource ItemBackgroundSelected}" />
                            <Setter TargetName="dropDownBorder" Property="BorderBrush" Value="{DynamicResource DataGridCell.Selected.Foreground}" />
                        </Trigger>-->
                        <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                            <!--<Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>-->
                            <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsOpen" SourceName="PART_Popup" Value="true">
                            
                            <!--<Setter Property="BorderBrush" TargetName="MainBorder" Value="{DynamicResource ItemBackgroundSelected}"></Setter>-->
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsGrouping" Value="true"/>
                                <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </MultiTrigger>
                        <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                            <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                            <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
<Style x:Key="DataGridEditingComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="IsSynchronizedWithCurrentItem" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="1,1" />
    </Style>

</ResourceDictionary>