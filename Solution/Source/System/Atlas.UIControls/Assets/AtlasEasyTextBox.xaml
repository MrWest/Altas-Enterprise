<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:CompanyName.Atlas.UIControls"
                    xmlns:converters="clr-namespace:CompanyName.Atlas.UIControls.Converters">
    <Style TargetType="ListBox">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{DynamicResource DataGridCell.Selected.Background}"/>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem},Path=Background}"/>
        <Setter Property="Foreground" Value="{DynamicResource DataGridCell.Selected.Foreground}"/>
        <Setter Property="BorderBrush"
                Value="Transparent"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Margin"
                Value="0"/>
        <Setter Property="Height"
                Value="35"/>
        <!--<Setter Property="Foreground" Value="{DynamicResource ItemText}"/>-->
        <Setter Property="Padding"
                Value="5,2,5,2"/>
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>
        <Setter Property="VerticalContentAlignment"
                Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid Background="{TemplateBinding Background}">
                        <Border Name="Selection" Visibility="Collapsed" />
                        <!-- This is used when GridView is put inside the ListView -->
                        <GridViewRowPresenter Grid.RowSpan="2"
                                              Margin="{TemplateBinding Padding}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        <!-- This is used for ListView that does not use GridView -->
                        <ContentPresenter x:Name="contentPresenter"
                                          Margin="{TemplateBinding Padding}"
                                      Content="{TemplateBinding ContentControl.Content}"
                                      Visibility="Collapsed"
                                      ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                      ContentStringFormat="{TemplateBinding ContentControl.ContentStringFormat}"
                                      HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                      VerticalAlignment="{TemplateBinding Control.VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="GridView.ColumnCollection" Value="{x:Null}">
                            <Setter TargetName="contentPresenter" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Selection" Property="Background" Value="{DynamicResource ItemBackgroundHover}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextHover}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="Selection" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="Selection" Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                            <Setter Property="Background" Value="{DynamicResource ItemBackgroundSelected}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextSelected}" />
                            <!--<Setter Property="Background" Value="Transparent"></Setter>-->
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource ItemTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:AtlasEasyTextBox}" >


        <Setter Property="Text" Value="{Binding RelativeSource={RelativeSource Self},Path=SelectedObject,Mode=OneWay}"></Setter>
        <!--<Setter Property="Text" Value="{Binding Name}"></Setter>-->
        <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type local:AtlasEasyTextBox}">
                            <ControlTemplate.Resources>
                        <converters:TextContainsToVisibilityConverter x:Key="TextContainsToVisibilityConverter" />
                        <converters:EasyTextBoxItemTemplateSelector x:Key="EasyTextBoxItemTemplateSelector"/>
                        <DataTemplate x:Key="NameTemplate" >
                            <Grid ToolTip="{Binding Description, Mode=OneWay}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" ></ColumnDefinition>
                                    <ColumnDefinition Width="5" ></ColumnDefinition>
                                    <ColumnDefinition Width="80"  ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <DockPanel  > 
                                    <TextBlock x:Name="NameTextBlock" Text="{Binding Name, Mode=OneWay}"></TextBlock>
                                </DockPanel>
                                <DockPanel Grid.Column="2" >
                                    <TextBlock x:Name="CodeTextBlock" Text="{Binding Code, Mode=OneWay}"></TextBlock>
                                </DockPanel>

                            </Grid>
                        </DataTemplate>
                        <DataTemplate x:Key="CodeTemplate" >
                            <Grid ToolTip="{Binding Description, Mode=OneWay}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="80" ></ColumnDefinition>
                                    <ColumnDefinition Width="5" ></ColumnDefinition>
                                    <ColumnDefinition Width="*" ></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <DockPanel  >
                                    <TextBlock x:Name="CodeTextBlock" Text="{Binding Code, Mode=OneWay}"></TextBlock>
                                </DockPanel>
                                <DockPanel Grid.Column="2" >
                                    <TextBlock x:Name="NameTextBlock" Text="{Binding Name, Mode=OneWay}"></TextBlock>
                                </DockPanel>
                            </Grid>
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <StackPanel >
                        <Grid>
                            <TextBlock x:Name="placeholderText" VerticalAlignment="Center" Margin="4,0,0,0" FontWeight="Light" FontStyle="Italic"  Text="{Binding  RelativeSource={RelativeSource AncestorType=local:AtlasEasyTextBox},Path=Placeholder}" Visibility="Collapsed"/>
                            <TextBox x:Name="PART_NameText" TextWrapping="NoWrap" Text="{Binding  RelativeSource={RelativeSource AncestorType=local:AtlasEasyTextBox},Path=Text,Mode=TwoWay}"
                                 BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}"
                           VerticalAlignment="{TemplateBinding VerticalAlignment}"  HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                           FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}"
                                 FontWeight="{TemplateBinding FontWeight}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}"
                                 VerticalContentAlignment="Center" Height="35"/>
                        </Grid>
                       
                        <Popup x:Name="Popup" AllowsTransparency="True" Placement="Bottom" IsOpen="False" StaysOpen="True"  PopupAnimation="Slide" Width="{TemplateBinding ActualWidth}">
                            <ListBox x:Name="PART_EasyListBox" ItemsSource="{TemplateBinding ItemsSource}" ItemTemplateSelector="{StaticResource EasyTextBoxItemTemplateSelector}" >
                                <!--<ListBox.ItemTemplate>
                                    <DataTemplate >
                                        
                                        
                                        --><!--<Grid>
                                            <DockPanel ToolTip="{Binding Code, Mode=OneWay}" >
                                                <TextBlock x:Name="NameTextBlock" Text="{Binding Name, Mode=OneWay}"></TextBlock>
                                            </DockPanel>
                                            --><!--<DockPanel ToolTip="{Binding Code, Mode=OneWay}" 
                                                       Visibility="{Binding Text, RelativeSource={RelativeSource AncestorType=local:AtlasEasyTextBox}, Converter={StaticResource TextContainsToVisibilityConverter},ConverterParameter={x:Reference Name=NameTextBlock} }">
                                                <TextBlock x:Name="NameTextBlock" Text="{Binding Name, Mode=OneWay}"></TextBlock>
                                            </DockPanel>
                                            <DockPanel ToolTip="{Binding Name, Mode=OneWay}" 
                                                       Visibility="{Binding Text, RelativeSource={RelativeSource AncestorType=local:AtlasEasyTextBox}, Converter={StaticResource TextContainsToVisibilityConverter},ConverterParameter={x:Reference Name=CodeTextBlock} }">
                                                <TextBlock x:Name="CodeTextBlock" Text="{Binding Code, Mode=OneWay}"></TextBlock>
                                            </DockPanel>--><!--
                                        </Grid>--><!--
                                        
                                    </DataTemplate>
                                </ListBox.ItemTemplate>-->
                                
                            </ListBox>
                        </Popup>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_NameText" Property="IsFocused" Value="False"/>
                                <Condition Property="Text" Value=""/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="placeholderText" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <Trigger Property="IsFocused" Value="false">
                            <Setter TargetName="Popup" Property="IsOpen" Value="False"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource AtlasTextBox.Static.Foreground}"/>
                            <!--<Setter Property="Background" Value="{DynamicResource InputBackground}"/>-->
                            <Setter Property="BorderBrush" Value="{DynamicResource AtlasTextBox.Static.BorderBrush}"/>
                            <Setter Property="BorderThickness" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="PART_NameText" Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="true">
                            <Setter TargetName="PART_NameText"  Property="Foreground" Value="{DynamicResource InputTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="PART_NameText" Property="BorderBrush" Value="{DynamicResource Accent}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsReadOnly" Value="False"/>
                                <Condition Property="IsEnabled" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <!--<Setter Property="Background" Value="{DynamicResource InputBackgroundHover}"/>-->
                            <Setter  TargetName="PART_NameText"  Property="BorderBrush" Value="{DynamicResource AtlasTextBox.MouseOver.BorderBrush}"/>
                            <Setter TargetName="PART_NameText"  Property="Foreground" Value="{DynamicResource AtlasTextBox.MouseOver.Foreground}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
    

</ResourceDictionary>