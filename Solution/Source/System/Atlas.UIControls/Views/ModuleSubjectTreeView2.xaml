<TreeView x:Class="CompanyName.Atlas.UIControls.Views.ModuleSubjectTreeView2"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:System="clr-namespace:System;assembly=mscorlib"
          xmlns:uiControls="clr-namespace:CompanyName.Atlas.UIControls;assembly=Atlas.UIControls"
          xmlns:converters="clr-namespace:CompanyName.Atlas.UIControls.Converters"
          xmlns:local="clr-namespace:CompanyName.Atlas.UIControls.Views;assembly=Atlas.UIControls"             
          xmlns:properties="clr-namespace:CompanyName.Atlas.UIControls.Properties;assembly=Atlas.UIControls"
          mc:Ignorable="d"
          d:DesignHeight="300" d:DesignWidth="200">

    <TreeView.Style>
        <Style TargetType="{x:Type TreeView}">
            <Setter Property="ItemTemplate" Value="{DynamicResource InvestmentElementDataTemplate}" />
            <Setter Property="ItemContainerStyle" Value="{DynamicResource ModuleSubjectTreeViewItemStyle}" />
            <Setter Property="Background" Value="{DynamicResource InvestmentElementTreeView.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource InvestmentElementTreeView.Static.Foreground}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="FontSize" Value="{DynamicResource Default.FontSize}"/>
            <Setter Property="FontFamily" Value="{DynamicResource InvestmentElement.Default.FontFamily}"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeView}">

                        <ControlTemplate.Resources>
                            <Storyboard x:Key="Collapse">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="button">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="170"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path1">
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.133" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="180">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="13,28,0,28"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="13,20,0,28">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseIn"/>
                                        </EasingThicknessKeyFrame.EasingFunction>
                                    </EasingThicknessKeyFrame>
                                </ThicknessAnimationUsingKeyFrames>
                              
                            </Storyboard>
                            <Storyboard x:Key="Expand">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="dockPanel">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="button">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="170">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                              
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="path1">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="180"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.117" Value="180"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                              
                                <ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Margin)" Storyboard.TargetName="grid">
                                    <EasingThicknessKeyFrame KeyTime="0" Value="13,-8,13,0"/>
                                    <EasingThicknessKeyFrame KeyTime="0:0:0.15" Value="13,0">
                                        <EasingThicknessKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseIn"/>
                                        </EasingThicknessKeyFrame.EasingFunction>
                                    </EasingThicknessKeyFrame>
                                </ThicknessAnimationUsingKeyFrames>
                            
                            </Storyboard>
                            <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ScrollBarThumbBorder}"/>
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                                                <Rectangle x:Name="Rect" Fill="{DynamicResource ScrollBarThumbForeground}" Margin="{TemplateBinding Padding}" />
                                            </Border>

                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundHover}"/>
                                                    <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundHover}"/>
                                                </Trigger>
                                                <Trigger Property="IsDragging" Value="True">
                                                    <Setter Property="Background" Value="{DynamicResource ScrollBarThumbBackgroundDragging}"/>
                                                    <Setter TargetName="Rect" Property="Fill" Value="{DynamicResource ScrollBarThumbForegroundDragging}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="ScrollBarButton"
           TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}"/>
                                <Setter Property="BorderThickness" Value="1" />
                                <Setter Property="Foreground" Value="{DynamicResource ButtonText}"/>
                                <Setter Property="Focusable"
                Value="false"/>
                                <Setter Property="IsTabStop"
                Value="false"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center" />
                                <Setter Property="VerticalContentAlignment" Value="Center" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}">
                                                <ContentPresenter Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />-->
                                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />-->
                                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="True">
                                                    <!--<Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />-->
                                                    <!--<Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />-->
                                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="ScrollBarPageButton"
           TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle"
                Value="true"/>
                                <Setter Property="Background"
                Value="Transparent"/>
                                <Setter Property="Focusable"
                Value="false"/>
                                <Setter Property="IsTabStop"
                Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Rectangle Fill="{TemplateBinding Background}"
                               Width="{TemplateBinding Width}"
                               Height="{TemplateBinding Height}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
                                <Setter Property="Background" Value="{DynamicResource ScrollBarBackground}"/>
                                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
                                <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                                            <Grid Name="Bg"
                          Background="Transparent"
                          SnapsToDevicePixels="true" >
                                                <Grid.RowDefinitions>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                    <RowDefinition Height="0.00001*"/>
                                                    <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                                </Grid.RowDefinitions>
                                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineUpCommand}"
                                      Margin="0,-5,0,0">
                                                    <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 4 L 3.5 0 L 7 4 Z" />
                                                </RepeatButton>
                                                <!--<Track Grid.Row="1"
                               Name="PART_Track"
                               IsEnabled="{TemplateBinding IsMouseOver}"
                               IsDirectionReversed="true">
                                                    <Track.DecreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageUpCommand}"/>
                                                    </Track.DecreaseRepeatButton>
                                                    <Track.IncreaseRepeatButton>
                                                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageDownCommand}"/>
                                                    </Track.IncreaseRepeatButton>
                                                    <Track.Thumb>
                                                        <Thumb Style="{StaticResource ScrollBarThumb}" Padding="4,0" />
                                                    </Track.Thumb>
                                                </Track>-->
                                                <RepeatButton Style="{StaticResource ScrollBarButton}"
                                      Grid.Row="2"
                                      IsEnabled="{TemplateBinding IsMouseOver}"
                                      Command="{x:Static ScrollBar.LineDownCommand}"
                                      Margin="0,0,0,0">
                                                    <Path Width="15" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 3.5 4 L 7 0 Z" />
                                                </RepeatButton>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="Orientation" Value="Horizontal">
                                        <Setter Property="Width" Value="Auto"/>
                                        <Setter Property="MinWidth" Value="0"/>
                                        <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                        <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ScrollBar}">
                                                    <Grid Name="Bg"
                                  Background="{TemplateBinding Background}"
                                  SnapsToDevicePixels="true" >
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                            <ColumnDefinition Width="0.00001*"/>
                                                            <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                                        </Grid.ColumnDefinitions>
                                                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineLeftCommand}" 
                                              Margin="0,0,-1,0">
                                                            <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 3.5 L 4 7 L 4 0 Z" />
                                                        </RepeatButton>
                                                        <Track Grid.Column="1"
                                       Name="PART_Track"
                                       IsEnabled="{TemplateBinding IsMouseOver}"
                                       IsDirectionReversed="False">
                                                            <Track.DecreaseRepeatButton>
                                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageLeftCommand}"/>
                                                            </Track.DecreaseRepeatButton>
                                                            <Track.IncreaseRepeatButton>
                                                                <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="{x:Static ScrollBar.PageRightCommand}"/>
                                                            </Track.IncreaseRepeatButton>
                                                            <Track.Thumb>
                                                                <Thumb Style="{StaticResource ScrollBarThumb}" Padding="0,4" />
                                                            </Track.Thumb>
                                                        </Track>
                                                        <RepeatButton Style="{StaticResource ScrollBarButton}"
                                              Grid.Column="2"
                                              IsEnabled="{TemplateBinding IsMouseOver}"
                                              Command="{x:Static ScrollBar.LineRightCommand}"
                                              Margin="-1,0,0,0">
                                                            <Path Width="4" Height="7" Stretch="Fill" Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=RepeatButton}}" Data="M 0 0 L 0 7 L 4 3.5 Z" />
                                                        </RepeatButton>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>

                            <Style x:Key="{x:Type ScrollViewer}" TargetType="{x:Type ScrollViewer}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="VerticalScrollBarVisibility" Value="Auto" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                    Margin="{TemplateBinding Padding}"
                                                    Content="{TemplateBinding Content}"
                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                                      
                                       Minimum="0.0"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"         
                                       Cursor="Arrow"
                                       AutomationProperties.AutomationId="VerticalScrollBar"/>
                                                <ScrollBar  x:Name="PART_HorizontalScrollBar"
                                        Orientation="Horizontal"
                                        Grid.Row="1"
                                        Minimum="0.0"
                                        Maximum="{TemplateBinding ScrollableWidth}"
                                        ViewportSize="{TemplateBinding ViewportWidth}"
                                        Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                                        Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                        Cursor="Arrow"
                                        AutomationProperties.AutomationId="HorizontalScrollBar"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                            <Grid Background="Transparent">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*"/>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>

                                                <DockPanel Margin="{TemplateBinding Padding}">
                                                    <ScrollViewer DockPanel.Dock="Top"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"
                            Focusable="false">
                                                        <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                            Columns="{Binding Path=TemplatedParent.View.Columns,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderStringFormat="{Binding Path=TemplatedParent.View.ColumnHeaderStringFormat,RelativeSource={RelativeSource TemplatedParent}}"
                                            AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,RelativeSource={RelativeSource TemplatedParent}}"
                                            ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,RelativeSource={RelativeSource TemplatedParent}}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                    </ScrollViewer>
                                                    <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                      KeyboardNavigation.DirectionalNavigation="Local"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"
                                      CanContentScroll="{TemplateBinding CanContentScroll}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </DockPanel>

                                                <ScrollBar x:Name="PART_VerticalScrollBar"
                           Grid.Column="1"
                           Minimum="0.0"
                           Maximum="{TemplateBinding ScrollableHeight}"
                           ViewportSize="{TemplateBinding ViewportHeight}"
                           Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=VerticalOffset, Mode=OneWay}"
                           Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                           Cursor="Arrow"
                           AutomationProperties.AutomationId="VerticalScrollBar"/>
                                                <ScrollBar  x:Name="PART_HorizontalScrollBar"
                            Orientation="Horizontal"
                            Grid.Row="1"
                            Minimum="0.0"
                            Maximum="{TemplateBinding ScrollableWidth}"
                            ViewportSize="{TemplateBinding ViewportWidth}"
                            Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=HorizontalOffset, Mode=OneWay}"
                            Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                            Cursor="Arrow"
                            AutomationProperties.AutomationId="HorizontalScrollBar"/>
                                            </Grid>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                        </ControlTemplate.Resources>

                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <DockPanel x:Name="dockPanel" Width="200" HorizontalAlignment="Left">
                                <DockPanel Dock="Top" Background="{DynamicResource AddRootInvestmentElementButton.Static.Background}">

                                    <Button x:Name="button" DockPanel.Dock="Left" Width="170" Style="{DynamicResource ModuleSubjectTreeViewCollapserButtonBaseStyle}" ToolTip="{Binding AddButtonTooltip, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ModuleSubjectTreeView}}}" Command="{Binding AddCommand}">
                                   
                                        <DockPanel Width="Auto" Height="35">
                                        <Grid x:Name="grid" Width="20" Margin="8,0,15,0" Height="20" HorizontalAlignment="Left">
                                            <Ellipse Fill="{TemplateBinding Foreground}" Stroke="{x:Null}"/>
                                            <Line x:Name="lineVer" StrokeThickness="4" X1="10" X2="10" Y1="3" Y2="17" Stroke="{Binding Background, ElementName=button}"/>
                                            <Line x:Name="lineHor" Stroke="{Binding Stroke, ElementName=lineVer}" Y1="10" Y2="10" X1="3" X2="17" StrokeThickness="4"/>
                                        </Grid>
                                        <TextBlock x:Name="textBlock" Text="{Binding AddButtonText, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ModuleSubjectTreeView}}}" Foreground="{TemplateBinding Foreground}" FontSize="14" VerticalAlignment="Center" Height="Auto" ScrollViewer.VerticalScrollBarVisibility="Disabled" Width="Auto" />
                                            
                                        </DockPanel>
                                    
                                </Button>
                                    <ToggleButton x:Name="toggleButton" DockPanel.Dock="Right"
                                			Width="30" Style="{DynamicResource ModuleSubjectTreeViewCollapserToggleButtonStyle}" Background="{Binding ElementName=button, Path=Background,Mode=OneWay}" IsChecked="{Binding IsCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ModuleSubjectTreeView}}}" HorizontalAlignment="Right" RenderTransformOrigin="0.5,0.5" Margin="0,0,0,0">
                                        <ToggleButton.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </ToggleButton.RenderTransform>
                                        <Path x:Name="path1" Data="M3.2626522E-54,7.125 L6.7916667,0 8.75,2.0625 3.8021715,7.2580704 8.75,12.25 6.7083333,14.375 z" Fill="{TemplateBinding Foreground}" StrokeThickness="0" Height="Auto" Width="Auto" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Center" VerticalAlignment="Center">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform/>
                                                    <SkewTransform/>
                                                    <RotateTransform/>
                                                    <TranslateTransform/>
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </ToggleButton>
                                </DockPanel>
                                <ScrollViewer >
                                <DockPanel x:Name="_tv_scrollviewer_" Focusable="false"  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              Width="200" ScrollViewer.VerticalScrollBarVisibility="Auto"  Background="{TemplateBinding Background}">
                                        <ItemsPresenter  Margin="0,0,0,35"/>
                                </DockPanel>
                                </ScrollViewer>
                            </DockPanel>
                        </Border>

                        <ControlTemplate.Triggers>
                            
                            <Trigger Property="local:ModuleSubjectTreeView.IsCollapsed" Value="True">
                                <Trigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource Collapse}"/>
                                    
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource Expand}"/>
                                </Trigger.ExitActions>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                            </Trigger>
                           
                        </ControlTemplate.Triggers>
                    </ControlTemplate>

                </Setter.Value>
            </Setter>
        </Style>
        
    </TreeView.Style>

    <TreeView.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BackgroundOnDeepConverter x:Key="BackgroundOnDeepConverter"/>

        <Style x:Key="ModuleSubjectTreeViewCollapserButtonBaseStyle" TargetType="{x:Type ButtonBase}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Background" Value="{DynamicResource AddRootInvestmentElementButton.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Padding" Value="0"/>
        </Style>

        <Style x:Key="ModuleSubjectTreeViewCollapserButtonStyle"
               BasedOn="{StaticResource ModuleSubjectTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type Button}"/>

        <Style x:Key="ModuleSubjectTreeViewCollapserToggleButtonStyle"
               BasedOn="{StaticResource ModuleSubjectTreeViewCollapserButtonBaseStyle}"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" FocusVisualStyle="{x:Null}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.MouseOver.Background}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Pressed.Background}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Background}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource AddRootInvestmentElementButton.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <HierarchicalDataTemplate x:Key="InvestmentElementDataTemplate" ItemsSource="{Binding Subjects.Items}">
            <DockPanel HorizontalAlignment="Left" VerticalAlignment="Center"  Width="200" Height="35" ToolTip="{Binding Name}">
                <Path x:Name="icon" Width="18" Height="18" Stretch="Uniform"
                      Margin="10,0"
                      Fill="{Binding ElementName=textBlock,Path=Foreground}"
                      Data="{Binding IconData}"/>

                <uiControls:EditableTextBlock x:Name="textBlock" Margin="0,0,10,0" Text="{Binding Name}"
                           VerticalAlignment="Center" Width="Auto" HorizontalAlignment="Left"
                           FontSize="{DynamicResource Default.FontSize}"
                           FontFamily="{DynamicResource InvestmentElement.Default.FontFamily}">
             
                </uiControls:EditableTextBlock>
            </DockPanel>

            <HierarchicalDataTemplate.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True">
                    <Setter TargetName="textBlock" Property="Text" Value="{Binding ShortName,Mode=OneWay}"/>
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Foreground}"/>
                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Foreground}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=TreeViewItem}}" Value="True">
                    <Setter TargetName="textBlock" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Static.Foreground}"/>
                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource InvestmentElementTreeViewItem.Static.Foreground}"/>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType=Border}}" Value="True"/>
                        <Condition Binding="{Binding InEdition, ElementName=textBlock}" Value="True"/>
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Text" Value="{Binding Name}" TargetName="textBlock"/>
                    </MultiDataTrigger.Setters>
                </MultiDataTrigger>
            </HierarchicalDataTemplate.Triggers>
        </HierarchicalDataTemplate>

        <Style x:Key="ModuleSubjectTreeViewItemStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="Background" Value="{DynamicResource InvestmentElementTreeViewItem.Static.Background}"/>
            <Setter Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Static.Foreground}"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>-->
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <ControlTemplate.Resources>
                            <Storyboard x:Key="CollapseTemplate">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Bd">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ItemsHost">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="selMarker">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="200"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="50"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                            <Storyboard x:Key="ExpandTemplate">
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="Bd">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="ItemsHost">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200">
                                        <EasingDoubleKeyFrame.EasingFunction>
                                            <CubicEase EasingMode="EaseOut"/>
                                        </EasingDoubleKeyFrame.EasingFunction>
                                    </EasingDoubleKeyFrame>
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="selMarker">
                                    <EasingDoubleKeyFrame KeyTime="0" Value="50"/>
                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="200"/>
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>

                            <Style x:Key="CommandButtonBaseStyle" TargetType="Button">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="{x:Null}"/>
                                <Setter Property="Width" Value="20"/>
                                <Setter Property="Height" Value="20"/>
                                <Setter Property="Foreground" Value="{DynamicResource AddRootInvestmentElementButton.Static.Foreground}"/>

                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border x:Name="border" BorderThickness="0" Background="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                                                <Path x:Name="path"
                                                      Width="12" Height="12"
                                                      Fill="{TemplateBinding Foreground}"
                                                      Data="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType=Button}}"
                                                      Stretch="Uniform"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>

                            <Style x:Key="AddCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementAddCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            
                            <Style x:Key="DeleteCommandButtonStyle" TargetType="Button" BasedOn="{StaticResource CommandButtonBaseStyle}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementDeleteCommandAddRootInvestmentElementButton.MouseOver.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsPressed" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource InvestmentElementCommandAddRootInvestmentElementButton.Pressed.Foreground}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="LightGray"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                            <SolidColorBrush x:Key="ModuleSubjectTreeViewItem.Dynamic.Background" Color="#0059b3"/>
                        </ControlTemplate.Resources>

                        <DockPanel>

                            <Border x:Name="Bd" SnapsToDevicePixels="true" DockPanel.Dock="Top" HorizontalAlignment="Left" ScrollViewer.VerticalScrollBarVisibility="Disabled" Height="35" Background="{TemplateBinding DataContext,Converter={StaticResource BackgroundOnDeepConverter},ConverterParameter={StaticResource ModuleSubjectTreeViewItem.Dynamic.Background}}" Width="200">
                                <DockPanel >
                                    <StackPanel x:Name="commandsPanel"  Height="Auto" Width="Auto" DockPanel.Dock="Right"
                                                Orientation="Horizontal" VerticalAlignment="Center"
                                                Margin="50,0,5,0" Visibility="{Binding IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=Bd, Mode=OneWay}">
                                        <Button Style="{DynamicResource AddCommandButtonStyle}"
                                                Command="{Binding Subjects.AddCommand}"
                                                ToolTip="{x:Static properties:Resources.New_Module_Subject}"
                                                Content="F1 M 51.5487,37.9814L 56.814,41.0534L 50.3383,48.7636L 50.3383,48.8841L 60.0205,46.9565L 60.0205,53.0403L 50.2777,51.414L 50.2777,51.5344L 56.814,59.0037L 51.4882,62.0757L 47.978,52.7994L 47.8569,52.7994L 44.4072,62.0757L 39.2025,59.0037L 45.6782,51.4742L 45.6177,51.3537L 36.1159,53.0403L 36.1159,46.9565L 45.5571,48.8841L 45.5571,48.7636L 39.2025,41.1137L 44.5888,37.9814L 47.9174,47.3179L 48.0385,47.3179L 51.5487,37.9814 Z M 20,17L 43.25,17L 56,29.75L 56,39L 52,36.75L 52,34L 39,34L 39,21L 24,21L 24,55L 41,55L 37.5,59L 20,59L 20,17 Z M 43,22.25L 43,30L 50.75,30L 43,22.25 Z ">
                                        </Button>
                                        <Button Style="{DynamicResource DeleteCommandButtonStyle}"
                                                Command="{Binding  DeleteMySelfCommand}"
                                                CommandParameter="{Binding}"
                                                ToolTip="{x:Static properties:Resources.Delete}"
                                                Content="F1 M 25.3333,23.75L 50.6667,23.75C 51.5411,23.75 51.8541,27.3125 51.8541,27.3125L 24.1458,27.3125C 24.1458,27.3125 24.4589,23.75 25.3333,23.75 Z M 35.625,19.7917L 40.375,19.7917C 40.8122,19.7917 41.9583,20.9378 41.9583,21.375C 41.9583,21.8122 40.8122,22.9584 40.375,22.9584L 35.625,22.9584C 35.1878,22.9584 34.0416,21.8122 34.0416,21.375C 34.0416,20.9378 35.1878,19.7917 35.625,19.7917 Z M 27.7083,28.5L 48.2916,28.5C 49.1661,28.5 49.875,29.2089 49.875,30.0834L 48.2916,53.8334C 48.2916,54.7078 47.5828,55.4167 46.7083,55.4167L 29.2917,55.4167C 28.4172,55.4167 27.7083,54.7078 27.7083,53.8334L 26.125,30.0834C 26.125,29.2089 26.8339,28.5 27.7083,28.5 Z M 30.0833,31.6667L 30.4792,52.25L 33.25,52.25L 32.8542,31.6667L 30.0833,31.6667 Z M 36.4167,31.6667L 36.4167,52.25L 39.5833,52.25L 39.5833,31.6667L 36.4167,31.6667 Z M 43.1458,31.6667L 42.75,52.25L 45.5208,52.25L 45.9167,31.6667L 43.1458,31.6667 Z ">
                                        </Button>
                                    </StackPanel>
                                    <ContentPresenter x:Name="PART_Header"   ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" ScrollViewer.VerticalScrollBarVisibility="Disabled" Margin="0,0,-50,0"/>
                                </DockPanel>
                            </Border>
                            <DockPanel x:Name="selMarker" Height="5"  Panel.ZIndex="100" DockPanel.Dock="Top" Margin="0,0,0,-5" Visibility="Collapsed" Width="200" HorizontalAlignment="Left">
                                <DockPanel  >
                                    <Rectangle x:Name="rect1" Height="1" Margin="0,0,13,0" DockPanel.Dock="Right" Width="8" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                    <Path x:Name="selMark" HorizontalAlignment="Right" Width="8" Height="5" Data="M0,0L4,4 8,0" DockPanel.Dock="Right" Margin="0,0,-0.5,0" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}" Fill="{Binding Background, ElementName=Bd}"/>
                                    <Rectangle x:Name="rect2" Height="1" Margin="13,0,-0.5,0" VerticalAlignment="Top" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                                </DockPanel>
                            </DockPanel>
                            <Line x:Name="bottomLine" X2="200" Margin="0" Panel.ZIndex="100" StrokeThickness="1" Stroke="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}" VerticalAlignment="Top" d:LayoutOverrides="Width" DockPanel.Dock="Bottom" Visibility="Collapsed"/>
                            <ItemsPresenter x:Name="ItemsHost" Height="Auto" HorizontalAlignment="Left" Margin="0,0,0,0.5" Visibility="Collapsed"/>
                        </DockPanel>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Background}"/>
                                <Setter  Property="Background" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                                <Setter Property="Stroke" TargetName="bottomLine" Value="{DynamicResource InvestmentElementTreeViewItemBottomLine.Stroke}"/>
                            </Trigger>
                            <Trigger SourceName="Bd" Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Background}"/>
                                <!--<Setter TargetName="" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.MouseOver.Foreground}"/>-->
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsExpanded" Value="True"/>
                                    <Condition Property="HasItems" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.Setters>
                                    <Setter Property="Visibility" Value="Visible" TargetName="ItemsHost"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="bottomLine"/>
                                    <Setter Property="Visibility" Value="Visible" TargetName="selMarker"/>
                                </MultiTrigger.Setters>
                            </MultiTrigger>
                           
                            <DataTrigger Binding="{Binding IsCollapsed, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ModuleSubjectTreeView}}" Value="True">
                                <DataTrigger.EnterActions>
                                    <BeginStoryboard Storyboard="{StaticResource CollapseTemplate}"/>
                                </DataTrigger.EnterActions>
                                <DataTrigger.ExitActions>
                                    <BeginStoryboard Storyboard="{StaticResource ExpandTemplate}"/>
                                </DataTrigger.ExitActions>
                            </DataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
           
            <!--<Style.Triggers >
                <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter TargetName="Bd" Property="Foreground" Value="{DynamicResource InvestmentElementTreeViewItem.Selected.Foreground}"/>
                </DataTrigger>
            </Style.Triggers>-->
        </Style>

    </TreeView.Resources>

</TreeView>
